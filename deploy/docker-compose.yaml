version: "3.9"
services:

  frontenvoy:
    image: envoyproxy/envoy:v1.16.2
    volumes:
      - ./front/envoy.yaml:/etc/envoy/envoy.yaml
      - /etc/letsencrypt/live/esm-api.aadi.my-0001/fullchain.pem:/etc/envoy/certs/fullchain.pem
      - /etc/letsencrypt/live/esm-api.aadi.my-0001/privkey.pem:/etc/envoy/certs/privkey.pem
    restart: always
    environment: 
      - ENVOY_UID=0
      - ENVOY_GID=0
    networks:
      - envoymesh
    expose:
      #- "80"
      - "443"
    ports:
      #- "80:80"
      - "443:443"

  grpc-web-proxy:
    image: envoyproxy/envoy:v1.16.2
    volumes:
      - ./grpc_web_proxy/envoy.yaml:/etc/envoy/envoy.yaml
    restart: always
    environment: 
      - ENVOY_UID=0
      - ENVOY_GID=0
    networks:
      - envoymesh
        #aliases:
        #  - grpc-web-proxy
    depends_on:
      - "esmservice"
    links:
      - "esmservice"
    expose:
      - "8080"
    ports: 
      - "8080:8080"

  esmservice:
    build:
      context: .
      dockerfile: ./service/Dockerfile
    restart: always
    depends_on:
      - "postgres-master"
    links:
      - "postgres-master"
    networks:
      - envoymesh
        #aliases:
        #  - esmservice
    expose:
      - "50051"
    ports:
      - "50051:50051"

  esm-game-loader:
    build:
      context: .
      dockerfile: ./gloader/Dockerfile
    restart: always
    networks:
      - envoymesh
        #aliases:
        #  - esm-game-loader
    expose:
      - "3033"
    ports:
      - "3033:3033"

  esm-admin:
    build:
      context: .
      dockerfile: ./admin/Dockerfile
    restart: always
    networks:
      - envoymesh
        #aliases:
        #  - esm-admin
    expose:
      - "3030"
    ports:
      - "3030:3030"
      
  esm-stripe:
    build:
      context: .
      dockerfile: ./stripe/Dockerfile
    restart: always
    networks:
      - envoymesh
        #aliases:
        #  - esm-stripe
    expose:
      - "4242"
    ports:
      - "4242:4242"

  
  postgres-master:
    build:
      context: .
      dockerfile: ./postgres/master/Dockerfile
    restart: always
    volumes:
      - database-data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: doadmin
      POSTGRES_PASSWORD: tf45h3hpz6xstby6
      PG_REP_USER: repuser
      PG_REP_PASSWORD: ezreppass
    networks:
      - envoymesh
        #aliases:
        #  - postgres
    expose:
      - "5432"
    ports:
      - "5432:5432"

  #postgres-standby-01:
  #  build:
  #    context: .
  #    dockerfile: ./postgres/standby-01/Dockerfile
  #  restart: always
  #  volumes:
  #    - database-data-01:/var/lib/postgresql/data/
  #  environment:
  #    POSTGRES_DB: postgres
  #    POSTGRES_USER: doadmin
  #    POSTGRES_PASSWORD: tf45h3hpz6xstby6
  #    PG_REP_USER: repuser
  #    PG_REP_PASSWORD: ezreppass
  #  networks:
  #    envoymesh:
  #      aliases:
  #        - postgres
  #  expose:
  #    - "5432"
  #  ports:
  #    - "5432:5432"
volumes:
  database-data:
  #database-data-01:
networks:
  envoymesh: {}