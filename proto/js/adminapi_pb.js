// source: adminapi.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.adminapi.esm.AddGameLeaderRuleRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.AddGameLeaderRuleResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.AddGameRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.AddGameResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.AddInviteRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.AddInviteResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.AddItemRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.AddItemResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.AddPrizeRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.AddPrizeResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.AddPrizeTourRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.AddPrizeTourResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.AddRankRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.AddRankResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.AddSpinnerRuleRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.AddSpinnerRuleResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.AddSubscriptionRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.AddSubscriptionResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.AddTourSetRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.AddTourSetResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.AddTournamentRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.AddTournamentResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.AddTournamentSetGameRuleRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.AddTournamentSetGameRuleResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.AddTournamentSetRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.AddTournamentSetResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.BuyCount', null, global);
goog.exportSymbol('proto.adminapi.esm.BuyDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.ChangePasswordRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ChangePasswordResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ConfigDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteGameLeaderRuleRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteGameLeaderRuleResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteGameRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteGameResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteInviteRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteInviteResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteItemRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteItemResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.DeletePrizeRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.DeletePrizeResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.DeletePrizeTourRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.DeletePrizeTourResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteRankRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteRankResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteSpinnerRuleRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteSpinnerRuleResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteSubscriptionRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteSubscriptionResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteTourSetRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteTourSetResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteTournamentRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteTournamentResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteTournamentSetGameRuleRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteTournamentSetGameRuleResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteTournamentSetRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.DeleteTournamentSetResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.GameCount', null, global);
goog.exportSymbol('proto.adminapi.esm.GameDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.GameLeaderRuleDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.GetBuyCountRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.GetBuyCountResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.GetConfigRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.GetConfigResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.GetGameCodeRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.GetGameCodeResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.GetGameCountRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.GetGameCountResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.GetInvitedByCountRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.GetInvitedByCountResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.GetItemCountRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.GetItemCountResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.GetPrizeCountRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.GetPrizeCountResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.GetSubscriptionCountRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.GetSubscriptionCountResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.GetTournamentCountRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.GetTournamentCountResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.GetTournamentSetCountRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.GetTournamentSetCountResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.GetUserCountRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.GetUserCountResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.GetUserRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.GetUserResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.GetWinnerCountRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.GetWinnerCountResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.InvitedByDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.ItemCount', null, global);
goog.exportSymbol('proto.adminapi.esm.ItemDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.ItemTypeDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.ListBuyRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListBuyResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListGameLeaderRuleRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListGameLeaderRuleResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListGameRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListGameResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListInvitedByRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListInvitedByResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListItemRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListItemResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListItemTypeRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListItemTypeResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListLogGRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListLogGResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListPrizePoolRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListPrizePoolResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListPrizeRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListPrizeResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListPrizeTodayRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListPrizeTodayResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListPrizeTourRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListPrizeTourResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListPrizeTypeRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListPrizeTypeResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListRankRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListRankResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListSpinnerRuleRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListSpinnerRuleResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListStatusProgressTypeRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListStatusProgressTypeResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListStatusTypeRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListStatusTypeResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListSubscriptionRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListSubscriptionResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListSubscriptionTypeRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListSubscriptionTypeResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListTimezonesRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListTimezonesResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListTourSetRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListTourSetResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListTournamentRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListTournamentResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListTournamentSetGameRuleRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListTournamentSetGameRuleResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListTournamentSetRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListTournamentSetResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListUserRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListUserResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListUserStatusTypeRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListUserStatusTypeResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListWinTypeRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListWinTypeResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListWinnerRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListWinnerResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.ListWinnerStatusTypeRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.ListWinnerStatusTypeResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.LogGDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.PrizeCount', null, global);
goog.exportSymbol('proto.adminapi.esm.PrizeDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.PrizePoolDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.PrizeTodayDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.PrizeTourDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.PrizeTypeDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.RankDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.SignInDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.SignInRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.SignInResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.SosStopPrizeRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.SosStopPrizeResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.SpinnerRuleDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.StatusTypeDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.SubscriptionCount', null, global);
goog.exportSymbol('proto.adminapi.esm.SubscriptionDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.SubscriptionTypeDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.TimezonesDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.TourSetDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.TournamentCount', null, global);
goog.exportSymbol('proto.adminapi.esm.TournamentDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.TournamentSetCount', null, global);
goog.exportSymbol('proto.adminapi.esm.TournamentSetDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.TournamentSetGameRuleDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateConfigRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateConfigResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateEmailConfirmedRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateEmailConfirmedResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateGameLeaderRuleRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateGameLeaderRuleResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateGameRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateGameResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateItemRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateItemResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdatePrizeRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdatePrizeResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateRankRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateRankResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateSpinnerRuleRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateSpinnerRuleResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateSubscriptionRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateSubscriptionResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateTournamentRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateTournamentResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateTournamentSetGameRuleRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateTournamentSetGameRuleResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateTournamentSetRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateTournamentSetResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateUserStatusGemBalanceRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateUserStatusGemBalanceResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateWinnerRequest', null, global);
goog.exportSymbol('proto.adminapi.esm.UpdateWinnerResponse', null, global);
goog.exportSymbol('proto.adminapi.esm.UserCount', null, global);
goog.exportSymbol('proto.adminapi.esm.UserDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.UserStatusTypeDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.WinTypeDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.WinnerCount', null, global);
goog.exportSymbol('proto.adminapi.esm.WinnerDetail', null, global);
goog.exportSymbol('proto.adminapi.esm.WinnerStatusTypeDetail', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListStatusTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListStatusTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListStatusTypeRequest.displayName = 'proto.adminapi.esm.ListStatusTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListStatusTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListStatusTypeResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListStatusTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListStatusTypeResponse.displayName = 'proto.adminapi.esm.ListStatusTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.StatusTypeDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.StatusTypeDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.StatusTypeDetail.displayName = 'proto.adminapi.esm.StatusTypeDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListStatusProgressTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListStatusProgressTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListStatusProgressTypeRequest.displayName = 'proto.adminapi.esm.ListStatusProgressTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListStatusProgressTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListStatusProgressTypeResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListStatusProgressTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListStatusProgressTypeResponse.displayName = 'proto.adminapi.esm.ListStatusProgressTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListUserStatusTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListUserStatusTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListUserStatusTypeRequest.displayName = 'proto.adminapi.esm.ListUserStatusTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListUserStatusTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListUserStatusTypeResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListUserStatusTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListUserStatusTypeResponse.displayName = 'proto.adminapi.esm.ListUserStatusTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UserStatusTypeDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UserStatusTypeDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UserStatusTypeDetail.displayName = 'proto.adminapi.esm.UserStatusTypeDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListWinnerStatusTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListWinnerStatusTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListWinnerStatusTypeRequest.displayName = 'proto.adminapi.esm.ListWinnerStatusTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListWinnerStatusTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListWinnerStatusTypeResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListWinnerStatusTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListWinnerStatusTypeResponse.displayName = 'proto.adminapi.esm.ListWinnerStatusTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.WinnerStatusTypeDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.WinnerStatusTypeDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.WinnerStatusTypeDetail.displayName = 'proto.adminapi.esm.WinnerStatusTypeDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListWinTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListWinTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListWinTypeRequest.displayName = 'proto.adminapi.esm.ListWinTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListWinTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListWinTypeResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListWinTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListWinTypeResponse.displayName = 'proto.adminapi.esm.ListWinTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.WinTypeDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.WinTypeDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.WinTypeDetail.displayName = 'proto.adminapi.esm.WinTypeDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListTimezonesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListTimezonesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListTimezonesRequest.displayName = 'proto.adminapi.esm.ListTimezonesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListTimezonesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListTimezonesResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListTimezonesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListTimezonesResponse.displayName = 'proto.adminapi.esm.ListTimezonesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.TimezonesDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.TimezonesDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.TimezonesDetail.displayName = 'proto.adminapi.esm.TimezonesDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.SignInRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.SignInRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.SignInRequest.displayName = 'proto.adminapi.esm.SignInRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.SignInResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.SignInResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.SignInResponse.displayName = 'proto.adminapi.esm.SignInResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.SignInDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.SignInDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.SignInDetail.displayName = 'proto.adminapi.esm.SignInDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateEmailConfirmedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateEmailConfirmedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateEmailConfirmedRequest.displayName = 'proto.adminapi.esm.UpdateEmailConfirmedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateEmailConfirmedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateEmailConfirmedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateEmailConfirmedResponse.displayName = 'proto.adminapi.esm.UpdateEmailConfirmedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateUserStatusGemBalanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.displayName = 'proto.adminapi.esm.UpdateUserStatusGemBalanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateUserStatusGemBalanceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateUserStatusGemBalanceResponse.displayName = 'proto.adminapi.esm.UpdateUserStatusGemBalanceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ChangePasswordRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ChangePasswordRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ChangePasswordRequest.displayName = 'proto.adminapi.esm.ChangePasswordRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ChangePasswordResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ChangePasswordResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ChangePasswordResponse.displayName = 'proto.adminapi.esm.ChangePasswordResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetUserCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetUserCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetUserCountRequest.displayName = 'proto.adminapi.esm.GetUserCountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetUserCountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetUserCountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetUserCountResponse.displayName = 'proto.adminapi.esm.GetUserCountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UserCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UserCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UserCount.displayName = 'proto.adminapi.esm.UserCount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListUserRequest.displayName = 'proto.adminapi.esm.ListUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListUserResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListUserResponse.displayName = 'proto.adminapi.esm.ListUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetUserRequest.displayName = 'proto.adminapi.esm.GetUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetUserResponse.displayName = 'proto.adminapi.esm.GetUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UserDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UserDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UserDetail.displayName = 'proto.adminapi.esm.UserDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateConfigRequest.displayName = 'proto.adminapi.esm.UpdateConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateConfigResponse.displayName = 'proto.adminapi.esm.UpdateConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetConfigRequest.displayName = 'proto.adminapi.esm.GetConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetConfigResponse.displayName = 'proto.adminapi.esm.GetConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ConfigDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ConfigDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ConfigDetail.displayName = 'proto.adminapi.esm.ConfigDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddSpinnerRuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddSpinnerRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddSpinnerRuleRequest.displayName = 'proto.adminapi.esm.AddSpinnerRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddSpinnerRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddSpinnerRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddSpinnerRuleResponse.displayName = 'proto.adminapi.esm.AddSpinnerRuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateSpinnerRuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateSpinnerRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateSpinnerRuleRequest.displayName = 'proto.adminapi.esm.UpdateSpinnerRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateSpinnerRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateSpinnerRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateSpinnerRuleResponse.displayName = 'proto.adminapi.esm.UpdateSpinnerRuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteSpinnerRuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteSpinnerRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteSpinnerRuleRequest.displayName = 'proto.adminapi.esm.DeleteSpinnerRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteSpinnerRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteSpinnerRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteSpinnerRuleResponse.displayName = 'proto.adminapi.esm.DeleteSpinnerRuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListSpinnerRuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListSpinnerRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListSpinnerRuleRequest.displayName = 'proto.adminapi.esm.ListSpinnerRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListSpinnerRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListSpinnerRuleResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListSpinnerRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListSpinnerRuleResponse.displayName = 'proto.adminapi.esm.ListSpinnerRuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.SpinnerRuleDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.SpinnerRuleDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.SpinnerRuleDetail.displayName = 'proto.adminapi.esm.SpinnerRuleDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddGameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddGameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddGameRequest.displayName = 'proto.adminapi.esm.AddGameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddGameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddGameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddGameResponse.displayName = 'proto.adminapi.esm.AddGameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateGameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateGameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateGameRequest.displayName = 'proto.adminapi.esm.UpdateGameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateGameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateGameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateGameResponse.displayName = 'proto.adminapi.esm.UpdateGameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddGameLeaderRuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddGameLeaderRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddGameLeaderRuleRequest.displayName = 'proto.adminapi.esm.AddGameLeaderRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddGameLeaderRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddGameLeaderRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddGameLeaderRuleResponse.displayName = 'proto.adminapi.esm.AddGameLeaderRuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateGameLeaderRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateGameLeaderRuleRequest.displayName = 'proto.adminapi.esm.UpdateGameLeaderRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateGameLeaderRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateGameLeaderRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateGameLeaderRuleResponse.displayName = 'proto.adminapi.esm.UpdateGameLeaderRuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteGameLeaderRuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteGameLeaderRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteGameLeaderRuleRequest.displayName = 'proto.adminapi.esm.DeleteGameLeaderRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteGameLeaderRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteGameLeaderRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteGameLeaderRuleResponse.displayName = 'proto.adminapi.esm.DeleteGameLeaderRuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListGameLeaderRuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListGameLeaderRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListGameLeaderRuleRequest.displayName = 'proto.adminapi.esm.ListGameLeaderRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListGameLeaderRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListGameLeaderRuleResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListGameLeaderRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListGameLeaderRuleResponse.displayName = 'proto.adminapi.esm.ListGameLeaderRuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GameLeaderRuleDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GameLeaderRuleDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GameLeaderRuleDetail.displayName = 'proto.adminapi.esm.GameLeaderRuleDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetGameCodeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetGameCodeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetGameCodeRequest.displayName = 'proto.adminapi.esm.GetGameCodeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetGameCodeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetGameCodeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetGameCodeResponse.displayName = 'proto.adminapi.esm.GetGameCodeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteGameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteGameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteGameRequest.displayName = 'proto.adminapi.esm.DeleteGameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteGameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteGameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteGameResponse.displayName = 'proto.adminapi.esm.DeleteGameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListGameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListGameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListGameRequest.displayName = 'proto.adminapi.esm.ListGameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListGameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListGameResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListGameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListGameResponse.displayName = 'proto.adminapi.esm.ListGameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GameDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GameDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GameDetail.displayName = 'proto.adminapi.esm.GameDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetGameCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetGameCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetGameCountRequest.displayName = 'proto.adminapi.esm.GetGameCountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetGameCountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetGameCountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetGameCountResponse.displayName = 'proto.adminapi.esm.GetGameCountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GameCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GameCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GameCount.displayName = 'proto.adminapi.esm.GameCount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddInviteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddInviteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddInviteRequest.displayName = 'proto.adminapi.esm.AddInviteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddInviteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddInviteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddInviteResponse.displayName = 'proto.adminapi.esm.AddInviteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListInvitedByRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListInvitedByRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListInvitedByRequest.displayName = 'proto.adminapi.esm.ListInvitedByRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListInvitedByResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListInvitedByResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListInvitedByResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListInvitedByResponse.displayName = 'proto.adminapi.esm.ListInvitedByResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.InvitedByDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.InvitedByDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.InvitedByDetail.displayName = 'proto.adminapi.esm.InvitedByDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetInvitedByCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetInvitedByCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetInvitedByCountRequest.displayName = 'proto.adminapi.esm.GetInvitedByCountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetInvitedByCountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetInvitedByCountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetInvitedByCountResponse.displayName = 'proto.adminapi.esm.GetInvitedByCountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteInviteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteInviteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteInviteRequest.displayName = 'proto.adminapi.esm.DeleteInviteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteInviteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteInviteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteInviteResponse.displayName = 'proto.adminapi.esm.DeleteInviteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddItemRequest.displayName = 'proto.adminapi.esm.AddItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddItemResponse.displayName = 'proto.adminapi.esm.AddItemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateItemRequest.displayName = 'proto.adminapi.esm.UpdateItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateItemResponse.displayName = 'proto.adminapi.esm.UpdateItemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteItemRequest.displayName = 'proto.adminapi.esm.DeleteItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteItemResponse.displayName = 'proto.adminapi.esm.DeleteItemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListItemRequest.displayName = 'proto.adminapi.esm.ListItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListItemResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListItemResponse.displayName = 'proto.adminapi.esm.ListItemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ItemDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ItemDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ItemDetail.displayName = 'proto.adminapi.esm.ItemDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetItemCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetItemCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetItemCountRequest.displayName = 'proto.adminapi.esm.GetItemCountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetItemCountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetItemCountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetItemCountResponse.displayName = 'proto.adminapi.esm.GetItemCountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ItemCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ItemCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ItemCount.displayName = 'proto.adminapi.esm.ItemCount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListItemTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListItemTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListItemTypeRequest.displayName = 'proto.adminapi.esm.ListItemTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListItemTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListItemTypeResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListItemTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListItemTypeResponse.displayName = 'proto.adminapi.esm.ListItemTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ItemTypeDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ItemTypeDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ItemTypeDetail.displayName = 'proto.adminapi.esm.ItemTypeDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddPrizeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.AddPrizeRequest.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.AddPrizeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddPrizeRequest.displayName = 'proto.adminapi.esm.AddPrizeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddPrizeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddPrizeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddPrizeResponse.displayName = 'proto.adminapi.esm.AddPrizeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdatePrizeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.UpdatePrizeRequest.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.UpdatePrizeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdatePrizeRequest.displayName = 'proto.adminapi.esm.UpdatePrizeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdatePrizeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdatePrizeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdatePrizeResponse.displayName = 'proto.adminapi.esm.UpdatePrizeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeletePrizeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeletePrizeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeletePrizeRequest.displayName = 'proto.adminapi.esm.DeletePrizeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeletePrizeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeletePrizeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeletePrizeResponse.displayName = 'proto.adminapi.esm.DeletePrizeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.SosStopPrizeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.SosStopPrizeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.SosStopPrizeRequest.displayName = 'proto.adminapi.esm.SosStopPrizeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.SosStopPrizeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.SosStopPrizeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.SosStopPrizeResponse.displayName = 'proto.adminapi.esm.SosStopPrizeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListPrizeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListPrizeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListPrizeRequest.displayName = 'proto.adminapi.esm.ListPrizeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListPrizeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListPrizeResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListPrizeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListPrizeResponse.displayName = 'proto.adminapi.esm.ListPrizeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.PrizeDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.PrizeDetail.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.PrizeDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.PrizeDetail.displayName = 'proto.adminapi.esm.PrizeDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListPrizeTodayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListPrizeTodayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListPrizeTodayRequest.displayName = 'proto.adminapi.esm.ListPrizeTodayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListPrizeTodayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListPrizeTodayResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListPrizeTodayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListPrizeTodayResponse.displayName = 'proto.adminapi.esm.ListPrizeTodayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.PrizeTodayDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.PrizeTodayDetail.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.PrizeTodayDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.PrizeTodayDetail.displayName = 'proto.adminapi.esm.PrizeTodayDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetPrizeCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetPrizeCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetPrizeCountRequest.displayName = 'proto.adminapi.esm.GetPrizeCountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetPrizeCountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetPrizeCountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetPrizeCountResponse.displayName = 'proto.adminapi.esm.GetPrizeCountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.PrizeCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.PrizeCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.PrizeCount.displayName = 'proto.adminapi.esm.PrizeCount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListPrizeTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListPrizeTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListPrizeTypeRequest.displayName = 'proto.adminapi.esm.ListPrizeTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListPrizeTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListPrizeTypeResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListPrizeTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListPrizeTypeResponse.displayName = 'proto.adminapi.esm.ListPrizeTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.PrizeTypeDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.PrizeTypeDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.PrizeTypeDetail.displayName = 'proto.adminapi.esm.PrizeTypeDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddPrizeTourRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddPrizeTourRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddPrizeTourRequest.displayName = 'proto.adminapi.esm.AddPrizeTourRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddPrizeTourResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddPrizeTourResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddPrizeTourResponse.displayName = 'proto.adminapi.esm.AddPrizeTourResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeletePrizeTourRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeletePrizeTourRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeletePrizeTourRequest.displayName = 'proto.adminapi.esm.DeletePrizeTourRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeletePrizeTourResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeletePrizeTourResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeletePrizeTourResponse.displayName = 'proto.adminapi.esm.DeletePrizeTourResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListPrizeTourRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListPrizeTourRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListPrizeTourRequest.displayName = 'proto.adminapi.esm.ListPrizeTourRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListPrizeTourResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListPrizeTourResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListPrizeTourResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListPrizeTourResponse.displayName = 'proto.adminapi.esm.ListPrizeTourResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.PrizeTourDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.PrizeTourDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.PrizeTourDetail.displayName = 'proto.adminapi.esm.PrizeTourDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListPrizePoolRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListPrizePoolRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListPrizePoolRequest.displayName = 'proto.adminapi.esm.ListPrizePoolRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListPrizePoolResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListPrizePoolResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListPrizePoolResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListPrizePoolResponse.displayName = 'proto.adminapi.esm.ListPrizePoolResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.PrizePoolDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.PrizePoolDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.PrizePoolDetail.displayName = 'proto.adminapi.esm.PrizePoolDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddRankRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddRankRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddRankRequest.displayName = 'proto.adminapi.esm.AddRankRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddRankResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddRankResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddRankResponse.displayName = 'proto.adminapi.esm.AddRankResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateRankRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateRankRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateRankRequest.displayName = 'proto.adminapi.esm.UpdateRankRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateRankResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateRankResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateRankResponse.displayName = 'proto.adminapi.esm.UpdateRankResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteRankRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteRankRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteRankRequest.displayName = 'proto.adminapi.esm.DeleteRankRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteRankResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteRankResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteRankResponse.displayName = 'proto.adminapi.esm.DeleteRankResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListRankRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListRankRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListRankRequest.displayName = 'proto.adminapi.esm.ListRankRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListRankResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListRankResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListRankResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListRankResponse.displayName = 'proto.adminapi.esm.ListRankResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.RankDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.RankDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.RankDetail.displayName = 'proto.adminapi.esm.RankDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListBuyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListBuyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListBuyRequest.displayName = 'proto.adminapi.esm.ListBuyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListBuyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListBuyResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListBuyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListBuyResponse.displayName = 'proto.adminapi.esm.ListBuyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.BuyDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.BuyDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.BuyDetail.displayName = 'proto.adminapi.esm.BuyDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetBuyCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetBuyCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetBuyCountRequest.displayName = 'proto.adminapi.esm.GetBuyCountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetBuyCountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetBuyCountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetBuyCountResponse.displayName = 'proto.adminapi.esm.GetBuyCountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.BuyCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.BuyCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.BuyCount.displayName = 'proto.adminapi.esm.BuyCount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddSubscriptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddSubscriptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddSubscriptionRequest.displayName = 'proto.adminapi.esm.AddSubscriptionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddSubscriptionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddSubscriptionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddSubscriptionResponse.displayName = 'proto.adminapi.esm.AddSubscriptionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateSubscriptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateSubscriptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateSubscriptionRequest.displayName = 'proto.adminapi.esm.UpdateSubscriptionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateSubscriptionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateSubscriptionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateSubscriptionResponse.displayName = 'proto.adminapi.esm.UpdateSubscriptionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteSubscriptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteSubscriptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteSubscriptionRequest.displayName = 'proto.adminapi.esm.DeleteSubscriptionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteSubscriptionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteSubscriptionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteSubscriptionResponse.displayName = 'proto.adminapi.esm.DeleteSubscriptionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListSubscriptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListSubscriptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListSubscriptionRequest.displayName = 'proto.adminapi.esm.ListSubscriptionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListSubscriptionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListSubscriptionResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListSubscriptionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListSubscriptionResponse.displayName = 'proto.adminapi.esm.ListSubscriptionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.SubscriptionDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.SubscriptionDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.SubscriptionDetail.displayName = 'proto.adminapi.esm.SubscriptionDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetSubscriptionCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetSubscriptionCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetSubscriptionCountRequest.displayName = 'proto.adminapi.esm.GetSubscriptionCountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetSubscriptionCountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetSubscriptionCountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetSubscriptionCountResponse.displayName = 'proto.adminapi.esm.GetSubscriptionCountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.SubscriptionCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.SubscriptionCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.SubscriptionCount.displayName = 'proto.adminapi.esm.SubscriptionCount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListSubscriptionTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListSubscriptionTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListSubscriptionTypeRequest.displayName = 'proto.adminapi.esm.ListSubscriptionTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListSubscriptionTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListSubscriptionTypeResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListSubscriptionTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListSubscriptionTypeResponse.displayName = 'proto.adminapi.esm.ListSubscriptionTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.SubscriptionTypeDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.SubscriptionTypeDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.SubscriptionTypeDetail.displayName = 'proto.adminapi.esm.SubscriptionTypeDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddTournamentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddTournamentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddTournamentRequest.displayName = 'proto.adminapi.esm.AddTournamentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddTournamentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddTournamentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddTournamentResponse.displayName = 'proto.adminapi.esm.AddTournamentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddTournamentSetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddTournamentSetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddTournamentSetRequest.displayName = 'proto.adminapi.esm.AddTournamentSetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddTournamentSetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddTournamentSetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddTournamentSetResponse.displayName = 'proto.adminapi.esm.AddTournamentSetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddTournamentSetGameRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddTournamentSetGameRuleRequest.displayName = 'proto.adminapi.esm.AddTournamentSetGameRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddTournamentSetGameRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddTournamentSetGameRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddTournamentSetGameRuleResponse.displayName = 'proto.adminapi.esm.AddTournamentSetGameRuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateTournamentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateTournamentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateTournamentRequest.displayName = 'proto.adminapi.esm.UpdateTournamentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateTournamentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateTournamentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateTournamentResponse.displayName = 'proto.adminapi.esm.UpdateTournamentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateTournamentSetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateTournamentSetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateTournamentSetRequest.displayName = 'proto.adminapi.esm.UpdateTournamentSetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateTournamentSetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateTournamentSetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateTournamentSetResponse.displayName = 'proto.adminapi.esm.UpdateTournamentSetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateTournamentSetGameRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.displayName = 'proto.adminapi.esm.UpdateTournamentSetGameRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateTournamentSetGameRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateTournamentSetGameRuleResponse.displayName = 'proto.adminapi.esm.UpdateTournamentSetGameRuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteTournamentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteTournamentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteTournamentRequest.displayName = 'proto.adminapi.esm.DeleteTournamentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteTournamentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteTournamentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteTournamentResponse.displayName = 'proto.adminapi.esm.DeleteTournamentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteTournamentSetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteTournamentSetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteTournamentSetRequest.displayName = 'proto.adminapi.esm.DeleteTournamentSetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteTournamentSetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteTournamentSetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteTournamentSetResponse.displayName = 'proto.adminapi.esm.DeleteTournamentSetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteTournamentSetGameRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteTournamentSetGameRuleRequest.displayName = 'proto.adminapi.esm.DeleteTournamentSetGameRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteTournamentSetGameRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteTournamentSetGameRuleResponse.displayName = 'proto.adminapi.esm.DeleteTournamentSetGameRuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest.displayName = 'proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse.displayName = 'proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListTournamentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListTournamentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListTournamentRequest.displayName = 'proto.adminapi.esm.ListTournamentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListTournamentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListTournamentResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListTournamentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListTournamentResponse.displayName = 'proto.adminapi.esm.ListTournamentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.TournamentDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.TournamentDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.TournamentDetail.displayName = 'proto.adminapi.esm.TournamentDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListTournamentSetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListTournamentSetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListTournamentSetRequest.displayName = 'proto.adminapi.esm.ListTournamentSetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListTournamentSetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListTournamentSetResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListTournamentSetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListTournamentSetResponse.displayName = 'proto.adminapi.esm.ListTournamentSetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.TournamentSetDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.TournamentSetDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.TournamentSetDetail.displayName = 'proto.adminapi.esm.TournamentSetDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListTournamentSetGameRuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListTournamentSetGameRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListTournamentSetGameRuleRequest.displayName = 'proto.adminapi.esm.ListTournamentSetGameRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListTournamentSetGameRuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListTournamentSetGameRuleResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListTournamentSetGameRuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListTournamentSetGameRuleResponse.displayName = 'proto.adminapi.esm.ListTournamentSetGameRuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.TournamentSetGameRuleDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.TournamentSetGameRuleDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.TournamentSetGameRuleDetail.displayName = 'proto.adminapi.esm.TournamentSetGameRuleDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetTournamentCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetTournamentCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetTournamentCountRequest.displayName = 'proto.adminapi.esm.GetTournamentCountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetTournamentCountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetTournamentCountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetTournamentCountResponse.displayName = 'proto.adminapi.esm.GetTournamentCountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.TournamentCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.TournamentCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.TournamentCount.displayName = 'proto.adminapi.esm.TournamentCount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetTournamentSetCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetTournamentSetCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetTournamentSetCountRequest.displayName = 'proto.adminapi.esm.GetTournamentSetCountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetTournamentSetCountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetTournamentSetCountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetTournamentSetCountResponse.displayName = 'proto.adminapi.esm.GetTournamentSetCountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.TournamentSetCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.TournamentSetCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.TournamentSetCount.displayName = 'proto.adminapi.esm.TournamentSetCount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddTourSetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddTourSetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddTourSetRequest.displayName = 'proto.adminapi.esm.AddTourSetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.AddTourSetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.AddTourSetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.AddTourSetResponse.displayName = 'proto.adminapi.esm.AddTourSetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteTourSetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteTourSetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteTourSetRequest.displayName = 'proto.adminapi.esm.DeleteTourSetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.DeleteTourSetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.DeleteTourSetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.DeleteTourSetResponse.displayName = 'proto.adminapi.esm.DeleteTourSetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListTourSetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListTourSetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListTourSetRequest.displayName = 'proto.adminapi.esm.ListTourSetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListTourSetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListTourSetResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListTourSetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListTourSetResponse.displayName = 'proto.adminapi.esm.ListTourSetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.TourSetDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.TourSetDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.TourSetDetail.displayName = 'proto.adminapi.esm.TourSetDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateWinnerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateWinnerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateWinnerRequest.displayName = 'proto.adminapi.esm.UpdateWinnerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.UpdateWinnerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.UpdateWinnerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.UpdateWinnerResponse.displayName = 'proto.adminapi.esm.UpdateWinnerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListWinnerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListWinnerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListWinnerRequest.displayName = 'proto.adminapi.esm.ListWinnerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListWinnerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListWinnerResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListWinnerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListWinnerResponse.displayName = 'proto.adminapi.esm.ListWinnerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.WinnerDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.WinnerDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.WinnerDetail.displayName = 'proto.adminapi.esm.WinnerDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetWinnerCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetWinnerCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetWinnerCountRequest.displayName = 'proto.adminapi.esm.GetWinnerCountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.GetWinnerCountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.GetWinnerCountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.GetWinnerCountResponse.displayName = 'proto.adminapi.esm.GetWinnerCountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.WinnerCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.WinnerCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.WinnerCount.displayName = 'proto.adminapi.esm.WinnerCount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListLogGRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.ListLogGRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListLogGRequest.displayName = 'proto.adminapi.esm.ListLogGRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.ListLogGResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.adminapi.esm.ListLogGResponse.repeatedFields_, null);
};
goog.inherits(proto.adminapi.esm.ListLogGResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.ListLogGResponse.displayName = 'proto.adminapi.esm.ListLogGResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.adminapi.esm.LogGDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.adminapi.esm.LogGDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.adminapi.esm.LogGDetail.displayName = 'proto.adminapi.esm.LogGDetail';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListStatusTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListStatusTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListStatusTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListStatusTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListStatusTypeRequest}
 */
proto.adminapi.esm.ListStatusTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListStatusTypeRequest;
  return proto.adminapi.esm.ListStatusTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListStatusTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListStatusTypeRequest}
 */
proto.adminapi.esm.ListStatusTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListStatusTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListStatusTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListStatusTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListStatusTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListStatusTypeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListStatusTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListStatusTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListStatusTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListStatusTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.StatusTypeDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListStatusTypeResponse}
 */
proto.adminapi.esm.ListStatusTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListStatusTypeResponse;
  return proto.adminapi.esm.ListStatusTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListStatusTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListStatusTypeResponse}
 */
proto.adminapi.esm.ListStatusTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.StatusTypeDetail;
      reader.readMessage(value,proto.adminapi.esm.StatusTypeDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListStatusTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListStatusTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListStatusTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListStatusTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.StatusTypeDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StatusTypeDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.StatusTypeDetail>}
 */
proto.adminapi.esm.ListStatusTypeResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.StatusTypeDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.StatusTypeDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.StatusTypeDetail>} value
 * @return {!proto.adminapi.esm.ListStatusTypeResponse} returns this
*/
proto.adminapi.esm.ListStatusTypeResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.StatusTypeDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.StatusTypeDetail}
 */
proto.adminapi.esm.ListStatusTypeResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.StatusTypeDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListStatusTypeResponse} returns this
 */
proto.adminapi.esm.ListStatusTypeResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.StatusTypeDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.StatusTypeDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.StatusTypeDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.StatusTypeDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.StatusTypeDetail}
 */
proto.adminapi.esm.StatusTypeDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.StatusTypeDetail;
  return proto.adminapi.esm.StatusTypeDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.StatusTypeDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.StatusTypeDetail}
 */
proto.adminapi.esm.StatusTypeDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.StatusTypeDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.StatusTypeDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.StatusTypeDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.StatusTypeDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.adminapi.esm.StatusTypeDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.StatusTypeDetail} returns this
 */
proto.adminapi.esm.StatusTypeDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.StatusTypeDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.StatusTypeDetail} returns this
 */
proto.adminapi.esm.StatusTypeDetail.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListStatusProgressTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListStatusProgressTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListStatusProgressTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListStatusProgressTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListStatusProgressTypeRequest}
 */
proto.adminapi.esm.ListStatusProgressTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListStatusProgressTypeRequest;
  return proto.adminapi.esm.ListStatusProgressTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListStatusProgressTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListStatusProgressTypeRequest}
 */
proto.adminapi.esm.ListStatusProgressTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListStatusProgressTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListStatusProgressTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListStatusProgressTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListStatusProgressTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListStatusProgressTypeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListStatusProgressTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListStatusProgressTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListStatusProgressTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListStatusProgressTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.StatusTypeDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListStatusProgressTypeResponse}
 */
proto.adminapi.esm.ListStatusProgressTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListStatusProgressTypeResponse;
  return proto.adminapi.esm.ListStatusProgressTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListStatusProgressTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListStatusProgressTypeResponse}
 */
proto.adminapi.esm.ListStatusProgressTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.StatusTypeDetail;
      reader.readMessage(value,proto.adminapi.esm.StatusTypeDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListStatusProgressTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListStatusProgressTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListStatusProgressTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListStatusProgressTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.StatusTypeDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StatusTypeDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.StatusTypeDetail>}
 */
proto.adminapi.esm.ListStatusProgressTypeResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.StatusTypeDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.StatusTypeDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.StatusTypeDetail>} value
 * @return {!proto.adminapi.esm.ListStatusProgressTypeResponse} returns this
*/
proto.adminapi.esm.ListStatusProgressTypeResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.StatusTypeDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.StatusTypeDetail}
 */
proto.adminapi.esm.ListStatusProgressTypeResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.StatusTypeDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListStatusProgressTypeResponse} returns this
 */
proto.adminapi.esm.ListStatusProgressTypeResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListUserStatusTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListUserStatusTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListUserStatusTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListUserStatusTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListUserStatusTypeRequest}
 */
proto.adminapi.esm.ListUserStatusTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListUserStatusTypeRequest;
  return proto.adminapi.esm.ListUserStatusTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListUserStatusTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListUserStatusTypeRequest}
 */
proto.adminapi.esm.ListUserStatusTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListUserStatusTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListUserStatusTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListUserStatusTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListUserStatusTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListUserStatusTypeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListUserStatusTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListUserStatusTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListUserStatusTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListUserStatusTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.UserStatusTypeDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListUserStatusTypeResponse}
 */
proto.adminapi.esm.ListUserStatusTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListUserStatusTypeResponse;
  return proto.adminapi.esm.ListUserStatusTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListUserStatusTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListUserStatusTypeResponse}
 */
proto.adminapi.esm.ListUserStatusTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.UserStatusTypeDetail;
      reader.readMessage(value,proto.adminapi.esm.UserStatusTypeDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListUserStatusTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListUserStatusTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListUserStatusTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListUserStatusTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.UserStatusTypeDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserStatusTypeDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.UserStatusTypeDetail>}
 */
proto.adminapi.esm.ListUserStatusTypeResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.UserStatusTypeDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.UserStatusTypeDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.UserStatusTypeDetail>} value
 * @return {!proto.adminapi.esm.ListUserStatusTypeResponse} returns this
*/
proto.adminapi.esm.ListUserStatusTypeResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.UserStatusTypeDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.UserStatusTypeDetail}
 */
proto.adminapi.esm.ListUserStatusTypeResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.UserStatusTypeDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListUserStatusTypeResponse} returns this
 */
proto.adminapi.esm.ListUserStatusTypeResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UserStatusTypeDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UserStatusTypeDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UserStatusTypeDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UserStatusTypeDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UserStatusTypeDetail}
 */
proto.adminapi.esm.UserStatusTypeDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UserStatusTypeDetail;
  return proto.adminapi.esm.UserStatusTypeDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UserStatusTypeDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UserStatusTypeDetail}
 */
proto.adminapi.esm.UserStatusTypeDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UserStatusTypeDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UserStatusTypeDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UserStatusTypeDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UserStatusTypeDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.adminapi.esm.UserStatusTypeDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserStatusTypeDetail} returns this
 */
proto.adminapi.esm.UserStatusTypeDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.UserStatusTypeDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserStatusTypeDetail} returns this
 */
proto.adminapi.esm.UserStatusTypeDetail.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListWinnerStatusTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListWinnerStatusTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListWinnerStatusTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListWinnerStatusTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListWinnerStatusTypeRequest}
 */
proto.adminapi.esm.ListWinnerStatusTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListWinnerStatusTypeRequest;
  return proto.adminapi.esm.ListWinnerStatusTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListWinnerStatusTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListWinnerStatusTypeRequest}
 */
proto.adminapi.esm.ListWinnerStatusTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListWinnerStatusTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListWinnerStatusTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListWinnerStatusTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListWinnerStatusTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListWinnerStatusTypeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListWinnerStatusTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListWinnerStatusTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListWinnerStatusTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListWinnerStatusTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.WinnerStatusTypeDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListWinnerStatusTypeResponse}
 */
proto.adminapi.esm.ListWinnerStatusTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListWinnerStatusTypeResponse;
  return proto.adminapi.esm.ListWinnerStatusTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListWinnerStatusTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListWinnerStatusTypeResponse}
 */
proto.adminapi.esm.ListWinnerStatusTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.WinnerStatusTypeDetail;
      reader.readMessage(value,proto.adminapi.esm.WinnerStatusTypeDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListWinnerStatusTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListWinnerStatusTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListWinnerStatusTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListWinnerStatusTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.WinnerStatusTypeDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WinnerStatusTypeDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.WinnerStatusTypeDetail>}
 */
proto.adminapi.esm.ListWinnerStatusTypeResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.WinnerStatusTypeDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.WinnerStatusTypeDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.WinnerStatusTypeDetail>} value
 * @return {!proto.adminapi.esm.ListWinnerStatusTypeResponse} returns this
*/
proto.adminapi.esm.ListWinnerStatusTypeResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.WinnerStatusTypeDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.WinnerStatusTypeDetail}
 */
proto.adminapi.esm.ListWinnerStatusTypeResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.WinnerStatusTypeDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListWinnerStatusTypeResponse} returns this
 */
proto.adminapi.esm.ListWinnerStatusTypeResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.WinnerStatusTypeDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.WinnerStatusTypeDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.WinnerStatusTypeDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.WinnerStatusTypeDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.WinnerStatusTypeDetail}
 */
proto.adminapi.esm.WinnerStatusTypeDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.WinnerStatusTypeDetail;
  return proto.adminapi.esm.WinnerStatusTypeDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.WinnerStatusTypeDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.WinnerStatusTypeDetail}
 */
proto.adminapi.esm.WinnerStatusTypeDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.WinnerStatusTypeDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.WinnerStatusTypeDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.WinnerStatusTypeDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.WinnerStatusTypeDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.adminapi.esm.WinnerStatusTypeDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.WinnerStatusTypeDetail} returns this
 */
proto.adminapi.esm.WinnerStatusTypeDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.WinnerStatusTypeDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.WinnerStatusTypeDetail} returns this
 */
proto.adminapi.esm.WinnerStatusTypeDetail.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListWinTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListWinTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListWinTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListWinTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListWinTypeRequest}
 */
proto.adminapi.esm.ListWinTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListWinTypeRequest;
  return proto.adminapi.esm.ListWinTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListWinTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListWinTypeRequest}
 */
proto.adminapi.esm.ListWinTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListWinTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListWinTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListWinTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListWinTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListWinTypeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListWinTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListWinTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListWinTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListWinTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.WinTypeDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListWinTypeResponse}
 */
proto.adminapi.esm.ListWinTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListWinTypeResponse;
  return proto.adminapi.esm.ListWinTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListWinTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListWinTypeResponse}
 */
proto.adminapi.esm.ListWinTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.WinTypeDetail;
      reader.readMessage(value,proto.adminapi.esm.WinTypeDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListWinTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListWinTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListWinTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListWinTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.WinTypeDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WinTypeDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.WinTypeDetail>}
 */
proto.adminapi.esm.ListWinTypeResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.WinTypeDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.WinTypeDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.WinTypeDetail>} value
 * @return {!proto.adminapi.esm.ListWinTypeResponse} returns this
*/
proto.adminapi.esm.ListWinTypeResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.WinTypeDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.WinTypeDetail}
 */
proto.adminapi.esm.ListWinTypeResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.WinTypeDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListWinTypeResponse} returns this
 */
proto.adminapi.esm.ListWinTypeResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.WinTypeDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.WinTypeDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.WinTypeDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.WinTypeDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.WinTypeDetail}
 */
proto.adminapi.esm.WinTypeDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.WinTypeDetail;
  return proto.adminapi.esm.WinTypeDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.WinTypeDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.WinTypeDetail}
 */
proto.adminapi.esm.WinTypeDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.WinTypeDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.WinTypeDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.WinTypeDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.WinTypeDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.adminapi.esm.WinTypeDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.WinTypeDetail} returns this
 */
proto.adminapi.esm.WinTypeDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.WinTypeDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.WinTypeDetail} returns this
 */
proto.adminapi.esm.WinTypeDetail.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListTimezonesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListTimezonesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListTimezonesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTimezonesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListTimezonesRequest}
 */
proto.adminapi.esm.ListTimezonesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListTimezonesRequest;
  return proto.adminapi.esm.ListTimezonesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListTimezonesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListTimezonesRequest}
 */
proto.adminapi.esm.ListTimezonesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListTimezonesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListTimezonesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListTimezonesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTimezonesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListTimezonesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListTimezonesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListTimezonesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListTimezonesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTimezonesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.TimezonesDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListTimezonesResponse}
 */
proto.adminapi.esm.ListTimezonesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListTimezonesResponse;
  return proto.adminapi.esm.ListTimezonesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListTimezonesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListTimezonesResponse}
 */
proto.adminapi.esm.ListTimezonesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.TimezonesDetail;
      reader.readMessage(value,proto.adminapi.esm.TimezonesDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListTimezonesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListTimezonesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListTimezonesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTimezonesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.TimezonesDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TimezonesDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.TimezonesDetail>}
 */
proto.adminapi.esm.ListTimezonesResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.TimezonesDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.TimezonesDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.TimezonesDetail>} value
 * @return {!proto.adminapi.esm.ListTimezonesResponse} returns this
*/
proto.adminapi.esm.ListTimezonesResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.TimezonesDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.TimezonesDetail}
 */
proto.adminapi.esm.ListTimezonesResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.TimezonesDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListTimezonesResponse} returns this
 */
proto.adminapi.esm.ListTimezonesResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.TimezonesDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.TimezonesDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.TimezonesDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.TimezonesDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    stext: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ltext: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.TimezonesDetail}
 */
proto.adminapi.esm.TimezonesDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.TimezonesDetail;
  return proto.adminapi.esm.TimezonesDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.TimezonesDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.TimezonesDetail}
 */
proto.adminapi.esm.TimezonesDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStext(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLtext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.TimezonesDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.TimezonesDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.TimezonesDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.TimezonesDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getStext();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLtext();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.adminapi.esm.TimezonesDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TimezonesDetail} returns this
 */
proto.adminapi.esm.TimezonesDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double offset = 2;
 * @return {number}
 */
proto.adminapi.esm.TimezonesDetail.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TimezonesDetail} returns this
 */
proto.adminapi.esm.TimezonesDetail.prototype.setOffset = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string stext = 3;
 * @return {string}
 */
proto.adminapi.esm.TimezonesDetail.prototype.getStext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.TimezonesDetail} returns this
 */
proto.adminapi.esm.TimezonesDetail.prototype.setStext = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string ltext = 4;
 * @return {string}
 */
proto.adminapi.esm.TimezonesDetail.prototype.getLtext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.TimezonesDetail} returns this
 */
proto.adminapi.esm.TimezonesDetail.prototype.setLtext = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.SignInRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.SignInRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.SignInRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SignInRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.SignInRequest}
 */
proto.adminapi.esm.SignInRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.SignInRequest;
  return proto.adminapi.esm.SignInRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.SignInRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.SignInRequest}
 */
proto.adminapi.esm.SignInRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.SignInRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.SignInRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.SignInRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SignInRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.adminapi.esm.SignInRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.SignInRequest} returns this
 */
proto.adminapi.esm.SignInRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.adminapi.esm.SignInRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.SignInRequest} returns this
 */
proto.adminapi.esm.SignInRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.SignInResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.SignInResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.SignInResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SignInResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.adminapi.esm.SignInDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.SignInResponse}
 */
proto.adminapi.esm.SignInResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.SignInResponse;
  return proto.adminapi.esm.SignInResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.SignInResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.SignInResponse}
 */
proto.adminapi.esm.SignInResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.SignInDetail;
      reader.readMessage(value,proto.adminapi.esm.SignInDetail.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.SignInResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.SignInResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.SignInResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SignInResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.adminapi.esm.SignInDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional SignInDetail result = 1;
 * @return {?proto.adminapi.esm.SignInDetail}
 */
proto.adminapi.esm.SignInResponse.prototype.getResult = function() {
  return /** @type{?proto.adminapi.esm.SignInDetail} */ (
    jspb.Message.getWrapperField(this, proto.adminapi.esm.SignInDetail, 1));
};


/**
 * @param {?proto.adminapi.esm.SignInDetail|undefined} value
 * @return {!proto.adminapi.esm.SignInResponse} returns this
*/
proto.adminapi.esm.SignInResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.adminapi.esm.SignInResponse} returns this
 */
proto.adminapi.esm.SignInResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.adminapi.esm.SignInResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.SignInDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.SignInDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.SignInDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SignInDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    jwtToken: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.SignInDetail}
 */
proto.adminapi.esm.SignInDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.SignInDetail;
  return proto.adminapi.esm.SignInDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.SignInDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.SignInDetail}
 */
proto.adminapi.esm.SignInDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJwtToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.SignInDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.SignInDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.SignInDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SignInDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJwtToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string jwt_token = 1;
 * @return {string}
 */
proto.adminapi.esm.SignInDetail.prototype.getJwtToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.SignInDetail} returns this
 */
proto.adminapi.esm.SignInDetail.prototype.setJwtToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateEmailConfirmedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateEmailConfirmedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateEmailConfirmedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateEmailConfirmedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    status: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateEmailConfirmedRequest}
 */
proto.adminapi.esm.UpdateEmailConfirmedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateEmailConfirmedRequest;
  return proto.adminapi.esm.UpdateEmailConfirmedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateEmailConfirmedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateEmailConfirmedRequest}
 */
proto.adminapi.esm.UpdateEmailConfirmedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateEmailConfirmedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateEmailConfirmedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateEmailConfirmedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateEmailConfirmedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.UpdateEmailConfirmedRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateEmailConfirmedRequest} returns this
 */
proto.adminapi.esm.UpdateEmailConfirmedRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool status = 2;
 * @return {boolean}
 */
proto.adminapi.esm.UpdateEmailConfirmedRequest.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.UpdateEmailConfirmedRequest} returns this
 */
proto.adminapi.esm.UpdateEmailConfirmedRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateEmailConfirmedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateEmailConfirmedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateEmailConfirmedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateEmailConfirmedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateEmailConfirmedResponse}
 */
proto.adminapi.esm.UpdateEmailConfirmedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateEmailConfirmedResponse;
  return proto.adminapi.esm.UpdateEmailConfirmedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateEmailConfirmedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateEmailConfirmedResponse}
 */
proto.adminapi.esm.UpdateEmailConfirmedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateEmailConfirmedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateEmailConfirmedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateEmailConfirmedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateEmailConfirmedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.UpdateEmailConfirmedResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateEmailConfirmedResponse} returns this
 */
proto.adminapi.esm.UpdateEmailConfirmedResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateUserStatusGemBalanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    gemBalance: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateUserStatusGemBalanceRequest}
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateUserStatusGemBalanceRequest;
  return proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateUserStatusGemBalanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateUserStatusGemBalanceRequest}
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGemBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateUserStatusGemBalanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getGemBalance();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateUserStatusGemBalanceRequest} returns this
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 status = 2;
 * @return {number}
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateUserStatusGemBalanceRequest} returns this
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 gem_balance = 3;
 * @return {number}
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.prototype.getGemBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateUserStatusGemBalanceRequest} returns this
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceRequest.prototype.setGemBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateUserStatusGemBalanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateUserStatusGemBalanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateUserStatusGemBalanceResponse}
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateUserStatusGemBalanceResponse;
  return proto.adminapi.esm.UpdateUserStatusGemBalanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateUserStatusGemBalanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateUserStatusGemBalanceResponse}
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateUserStatusGemBalanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateUserStatusGemBalanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateUserStatusGemBalanceResponse} returns this
 */
proto.adminapi.esm.UpdateUserStatusGemBalanceResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ChangePasswordRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ChangePasswordRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ChangePasswordRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ChangePasswordRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    oldPassword: jspb.Message.getFieldWithDefault(msg, 2, ""),
    newPassword: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ChangePasswordRequest}
 */
proto.adminapi.esm.ChangePasswordRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ChangePasswordRequest;
  return proto.adminapi.esm.ChangePasswordRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ChangePasswordRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ChangePasswordRequest}
 */
proto.adminapi.esm.ChangePasswordRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOldPassword(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ChangePasswordRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ChangePasswordRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ChangePasswordRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ChangePasswordRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOldPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNewPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.adminapi.esm.ChangePasswordRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ChangePasswordRequest} returns this
 */
proto.adminapi.esm.ChangePasswordRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string old_password = 2;
 * @return {string}
 */
proto.adminapi.esm.ChangePasswordRequest.prototype.getOldPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ChangePasswordRequest} returns this
 */
proto.adminapi.esm.ChangePasswordRequest.prototype.setOldPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string new_password = 3;
 * @return {string}
 */
proto.adminapi.esm.ChangePasswordRequest.prototype.getNewPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ChangePasswordRequest} returns this
 */
proto.adminapi.esm.ChangePasswordRequest.prototype.setNewPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ChangePasswordResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ChangePasswordResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ChangePasswordResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ChangePasswordResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ChangePasswordResponse}
 */
proto.adminapi.esm.ChangePasswordResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ChangePasswordResponse;
  return proto.adminapi.esm.ChangePasswordResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ChangePasswordResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ChangePasswordResponse}
 */
proto.adminapi.esm.ChangePasswordResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ChangePasswordResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ChangePasswordResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ChangePasswordResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ChangePasswordResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.ChangePasswordResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ChangePasswordResponse} returns this
 */
proto.adminapi.esm.ChangePasswordResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetUserCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetUserCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetUserCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetUserCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetUserCountRequest}
 */
proto.adminapi.esm.GetUserCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetUserCountRequest;
  return proto.adminapi.esm.GetUserCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetUserCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetUserCountRequest}
 */
proto.adminapi.esm.GetUserCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetUserCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetUserCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetUserCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetUserCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetUserCountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetUserCountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetUserCountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetUserCountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.adminapi.esm.UserCount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetUserCountResponse}
 */
proto.adminapi.esm.GetUserCountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetUserCountResponse;
  return proto.adminapi.esm.GetUserCountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetUserCountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetUserCountResponse}
 */
proto.adminapi.esm.GetUserCountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.UserCount;
      reader.readMessage(value,proto.adminapi.esm.UserCount.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetUserCountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetUserCountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetUserCountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetUserCountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.adminapi.esm.UserCount.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserCount result = 1;
 * @return {?proto.adminapi.esm.UserCount}
 */
proto.adminapi.esm.GetUserCountResponse.prototype.getResult = function() {
  return /** @type{?proto.adminapi.esm.UserCount} */ (
    jspb.Message.getWrapperField(this, proto.adminapi.esm.UserCount, 1));
};


/**
 * @param {?proto.adminapi.esm.UserCount|undefined} value
 * @return {!proto.adminapi.esm.GetUserCountResponse} returns this
*/
proto.adminapi.esm.GetUserCountResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.adminapi.esm.GetUserCountResponse} returns this
 */
proto.adminapi.esm.GetUserCountResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.adminapi.esm.GetUserCountResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UserCount.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UserCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UserCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UserCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    active: jspb.Message.getFieldWithDefault(msg, 1, 0),
    blocked: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pendingDelete: jspb.Message.getFieldWithDefault(msg, 3, 0),
    archived: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UserCount}
 */
proto.adminapi.esm.UserCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UserCount;
  return proto.adminapi.esm.UserCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UserCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UserCount}
 */
proto.adminapi.esm.UserCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setActive(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBlocked(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPendingDelete(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setArchived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UserCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UserCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UserCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UserCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActive();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getBlocked();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPendingDelete();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getArchived();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int64 active = 1;
 * @return {number}
 */
proto.adminapi.esm.UserCount.prototype.getActive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserCount} returns this
 */
proto.adminapi.esm.UserCount.prototype.setActive = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 blocked = 2;
 * @return {number}
 */
proto.adminapi.esm.UserCount.prototype.getBlocked = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserCount} returns this
 */
proto.adminapi.esm.UserCount.prototype.setBlocked = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 pending_delete = 3;
 * @return {number}
 */
proto.adminapi.esm.UserCount.prototype.getPendingDelete = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserCount} returns this
 */
proto.adminapi.esm.UserCount.prototype.setPendingDelete = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 archived = 4;
 * @return {number}
 */
proto.adminapi.esm.UserCount.prototype.getArchived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserCount} returns this
 */
proto.adminapi.esm.UserCount.prototype.setArchived = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    searchUsername: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListUserRequest}
 */
proto.adminapi.esm.ListUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListUserRequest;
  return proto.adminapi.esm.ListUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListUserRequest}
 */
proto.adminapi.esm.ListUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchUsername(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSearchUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.adminapi.esm.ListUserRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListUserRequest} returns this
 */
proto.adminapi.esm.ListUserRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.adminapi.esm.ListUserRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListUserRequest} returns this
 */
proto.adminapi.esm.ListUserRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string search_username = 3;
 * @return {string}
 */
proto.adminapi.esm.ListUserRequest.prototype.getSearchUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ListUserRequest} returns this
 */
proto.adminapi.esm.ListUserRequest.prototype.setSearchUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 status = 4;
 * @return {number}
 */
proto.adminapi.esm.ListUserRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListUserRequest} returns this
 */
proto.adminapi.esm.ListUserRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListUserResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.UserDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListUserResponse}
 */
proto.adminapi.esm.ListUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListUserResponse;
  return proto.adminapi.esm.ListUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListUserResponse}
 */
proto.adminapi.esm.ListUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.UserDetail;
      reader.readMessage(value,proto.adminapi.esm.UserDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.UserDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.UserDetail>}
 */
proto.adminapi.esm.ListUserResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.UserDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.UserDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.UserDetail>} value
 * @return {!proto.adminapi.esm.ListUserResponse} returns this
*/
proto.adminapi.esm.ListUserResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.UserDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.UserDetail}
 */
proto.adminapi.esm.ListUserResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.UserDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListUserResponse} returns this
 */
proto.adminapi.esm.ListUserResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetUserRequest}
 */
proto.adminapi.esm.GetUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetUserRequest;
  return proto.adminapi.esm.GetUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetUserRequest}
 */
proto.adminapi.esm.GetUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.GetUserRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GetUserRequest} returns this
 */
proto.adminapi.esm.GetUserRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.adminapi.esm.UserDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetUserResponse}
 */
proto.adminapi.esm.GetUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetUserResponse;
  return proto.adminapi.esm.GetUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetUserResponse}
 */
proto.adminapi.esm.GetUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.UserDetail;
      reader.readMessage(value,proto.adminapi.esm.UserDetail.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.adminapi.esm.UserDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserDetail result = 1;
 * @return {?proto.adminapi.esm.UserDetail}
 */
proto.adminapi.esm.GetUserResponse.prototype.getResult = function() {
  return /** @type{?proto.adminapi.esm.UserDetail} */ (
    jspb.Message.getWrapperField(this, proto.adminapi.esm.UserDetail, 1));
};


/**
 * @param {?proto.adminapi.esm.UserDetail|undefined} value
 * @return {!proto.adminapi.esm.GetUserResponse} returns this
*/
proto.adminapi.esm.GetUserResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.adminapi.esm.GetUserResponse} returns this
 */
proto.adminapi.esm.GetUserResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.adminapi.esm.GetUserResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UserDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UserDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UserDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UserDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    email: jspb.Message.getFieldWithDefault(msg, 3, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 4, ""),
    firstname: jspb.Message.getFieldWithDefault(msg, 5, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    createdOn: jspb.Message.getFieldWithDefault(msg, 7, 0),
    lastLogin: jspb.Message.getFieldWithDefault(msg, 8, 0),
    roleId: jspb.Message.getFieldWithDefault(msg, 9, 0),
    status: jspb.Message.getFieldWithDefault(msg, 10, 0),
    gemBalance: jspb.Message.getFieldWithDefault(msg, 11, 0),
    socialLinkFb: jspb.Message.getFieldWithDefault(msg, 12, ""),
    socialLinkGoogle: jspb.Message.getFieldWithDefault(msg, 13, ""),
    avatarUrl: jspb.Message.getFieldWithDefault(msg, 14, ""),
    exp: jspb.Message.getFieldWithDefault(msg, 15, 0),
    fullName: jspb.Message.getFieldWithDefault(msg, 16, ""),
    address: jspb.Message.getFieldWithDefault(msg, 17, ""),
    city: jspb.Message.getFieldWithDefault(msg, 18, ""),
    state: jspb.Message.getFieldWithDefault(msg, 19, ""),
    zipCode: jspb.Message.getFieldWithDefault(msg, 20, ""),
    country: jspb.Message.getFieldWithDefault(msg, 21, ""),
    countryCode: jspb.Message.getFieldWithDefault(msg, 22, 0),
    isNotifyAllowed: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    isNotifyNewReward: jspb.Message.getBooleanFieldWithDefault(msg, 24, false),
    isNotifyNewTournament: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
    isNotifyTourEnding: jspb.Message.getBooleanFieldWithDefault(msg, 26, false),
    nickName: jspb.Message.getFieldWithDefault(msg, 27, ""),
    subscriptionId: jspb.Message.getFieldWithDefault(msg, 28, 0),
    oneTimeMultiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 29, 0.0),
    dailyGem: jspb.Message.getFieldWithDefault(msg, 30, 0),
    dailyMultiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 32, 0.0),
    oneTimeIsFirstonly: jspb.Message.getBooleanFieldWithDefault(msg, 33, false),
    subDailyTimestamp: jspb.Message.getFieldWithDefault(msg, 34, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UserDetail}
 */
proto.adminapi.esm.UserDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UserDetail;
  return proto.adminapi.esm.UserDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UserDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UserDetail}
 */
proto.adminapi.esm.UserDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedOn(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastLogin(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRoleId(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGemBalance(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSocialLinkFb(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSocialLinkGoogle(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarUrl(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExp(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullName(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipCode(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCountryCode(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNotifyAllowed(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNotifyNewReward(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNotifyNewTournament(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNotifyTourEnding(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickName(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSubscriptionId(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOneTimeMultiplier(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDailyGem(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDailyMultiplier(value);
      break;
    case 33:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOneTimeIsFirstonly(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSubDailyTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UserDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UserDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UserDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UserDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreatedOn();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getLastLogin();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getRoleId();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getGemBalance();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getSocialLinkFb();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getSocialLinkGoogle();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getAvatarUrl();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getExp();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getFullName();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getZipCode();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getCountryCode();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getIsNotifyAllowed();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getIsNotifyNewReward();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getIsNotifyNewTournament();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getIsNotifyTourEnding();
  if (f) {
    writer.writeBool(
      26,
      f
    );
  }
  f = message.getNickName();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getSubscriptionId();
  if (f !== 0) {
    writer.writeInt64(
      28,
      f
    );
  }
  f = message.getOneTimeMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
      29,
      f
    );
  }
  f = message.getDailyGem();
  if (f !== 0) {
    writer.writeInt32(
      30,
      f
    );
  }
  f = message.getDailyMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
      32,
      f
    );
  }
  f = message.getOneTimeIsFirstonly();
  if (f) {
    writer.writeBool(
      33,
      f
    );
  }
  f = message.getSubDailyTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      34,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.UserDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.adminapi.esm.UserDetail.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email = 3;
 * @return {string}
 */
proto.adminapi.esm.UserDetail.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string phone = 4;
 * @return {string}
 */
proto.adminapi.esm.UserDetail.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string firstname = 5;
 * @return {string}
 */
proto.adminapi.esm.UserDetail.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string lastname = 6;
 * @return {string}
 */
proto.adminapi.esm.UserDetail.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 created_on = 7;
 * @return {number}
 */
proto.adminapi.esm.UserDetail.prototype.getCreatedOn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setCreatedOn = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 last_login = 8;
 * @return {number}
 */
proto.adminapi.esm.UserDetail.prototype.getLastLogin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setLastLogin = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 role_id = 9;
 * @return {number}
 */
proto.adminapi.esm.UserDetail.prototype.getRoleId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setRoleId = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 status = 10;
 * @return {number}
 */
proto.adminapi.esm.UserDetail.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 gem_balance = 11;
 * @return {number}
 */
proto.adminapi.esm.UserDetail.prototype.getGemBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setGemBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string social_link_fb = 12;
 * @return {string}
 */
proto.adminapi.esm.UserDetail.prototype.getSocialLinkFb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setSocialLinkFb = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string social_link_google = 13;
 * @return {string}
 */
proto.adminapi.esm.UserDetail.prototype.getSocialLinkGoogle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setSocialLinkGoogle = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string avatar_url = 14;
 * @return {string}
 */
proto.adminapi.esm.UserDetail.prototype.getAvatarUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setAvatarUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional int32 exp = 15;
 * @return {number}
 */
proto.adminapi.esm.UserDetail.prototype.getExp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setExp = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string full_name = 16;
 * @return {string}
 */
proto.adminapi.esm.UserDetail.prototype.getFullName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setFullName = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string address = 17;
 * @return {string}
 */
proto.adminapi.esm.UserDetail.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string city = 18;
 * @return {string}
 */
proto.adminapi.esm.UserDetail.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string state = 19;
 * @return {string}
 */
proto.adminapi.esm.UserDetail.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string zip_code = 20;
 * @return {string}
 */
proto.adminapi.esm.UserDetail.prototype.getZipCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setZipCode = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string country = 21;
 * @return {string}
 */
proto.adminapi.esm.UserDetail.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional int32 country_code = 22;
 * @return {number}
 */
proto.adminapi.esm.UserDetail.prototype.getCountryCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional bool is_notify_allowed = 23;
 * @return {boolean}
 */
proto.adminapi.esm.UserDetail.prototype.getIsNotifyAllowed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setIsNotifyAllowed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional bool is_notify_new_reward = 24;
 * @return {boolean}
 */
proto.adminapi.esm.UserDetail.prototype.getIsNotifyNewReward = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setIsNotifyNewReward = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * optional bool is_notify_new_tournament = 25;
 * @return {boolean}
 */
proto.adminapi.esm.UserDetail.prototype.getIsNotifyNewTournament = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setIsNotifyNewTournament = function(value) {
  return jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * optional bool is_notify_tour_ending = 26;
 * @return {boolean}
 */
proto.adminapi.esm.UserDetail.prototype.getIsNotifyTourEnding = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setIsNotifyTourEnding = function(value) {
  return jspb.Message.setProto3BooleanField(this, 26, value);
};


/**
 * optional string nick_name = 27;
 * @return {string}
 */
proto.adminapi.esm.UserDetail.prototype.getNickName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setNickName = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional int64 subscription_id = 28;
 * @return {number}
 */
proto.adminapi.esm.UserDetail.prototype.getSubscriptionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setSubscriptionId = function(value) {
  return jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional double one_time_multiplier = 29;
 * @return {number}
 */
proto.adminapi.esm.UserDetail.prototype.getOneTimeMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 29, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setOneTimeMultiplier = function(value) {
  return jspb.Message.setProto3FloatField(this, 29, value);
};


/**
 * optional int32 daily_gem = 30;
 * @return {number}
 */
proto.adminapi.esm.UserDetail.prototype.getDailyGem = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setDailyGem = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * optional double daily_multiplier = 32;
 * @return {number}
 */
proto.adminapi.esm.UserDetail.prototype.getDailyMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 32, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setDailyMultiplier = function(value) {
  return jspb.Message.setProto3FloatField(this, 32, value);
};


/**
 * optional bool one_time_is_firstonly = 33;
 * @return {boolean}
 */
proto.adminapi.esm.UserDetail.prototype.getOneTimeIsFirstonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 33, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setOneTimeIsFirstonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 33, value);
};


/**
 * optional int64 sub_daily_timestamp = 34;
 * @return {number}
 */
proto.adminapi.esm.UserDetail.prototype.getSubDailyTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UserDetail} returns this
 */
proto.adminapi.esm.UserDetail.prototype.setSubDailyTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 34, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invites: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gamesPerAd: jspb.Message.getFieldWithDefault(msg, 2, 0),
    daysToClaim: jspb.Message.getFieldWithDefault(msg, 3, 0),
    freespinPerDay: jspb.Message.getFieldWithDefault(msg, 4, 0),
    gemsPerSpins1: jspb.Message.getFieldWithDefault(msg, 5, 0),
    adsPerSpins1: jspb.Message.getFieldWithDefault(msg, 6, 0),
    gemsPerSpins2: jspb.Message.getFieldWithDefault(msg, 7, 0),
    adsPerSpins2: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateConfigRequest}
 */
proto.adminapi.esm.UpdateConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateConfigRequest;
  return proto.adminapi.esm.UpdateConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateConfigRequest}
 */
proto.adminapi.esm.UpdateConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInvites(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGamesPerAd(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDaysToClaim(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFreespinPerDay(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGemsPerSpins1(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAdsPerSpins1(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGemsPerSpins2(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAdsPerSpins2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvites();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getGamesPerAd();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDaysToClaim();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFreespinPerDay();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getGemsPerSpins1();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getAdsPerSpins1();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getGemsPerSpins2();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getAdsPerSpins2();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional int32 invites = 1;
 * @return {number}
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.getInvites = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateConfigRequest} returns this
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.setInvites = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 games_per_ad = 2;
 * @return {number}
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.getGamesPerAd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateConfigRequest} returns this
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.setGamesPerAd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 days_to_claim = 3;
 * @return {number}
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.getDaysToClaim = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateConfigRequest} returns this
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.setDaysToClaim = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 freespin_per_day = 4;
 * @return {number}
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.getFreespinPerDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateConfigRequest} returns this
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.setFreespinPerDay = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 gems_per_spins_1 = 5;
 * @return {number}
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.getGemsPerSpins1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateConfigRequest} returns this
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.setGemsPerSpins1 = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 ads_per_spins_1 = 6;
 * @return {number}
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.getAdsPerSpins1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateConfigRequest} returns this
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.setAdsPerSpins1 = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 gems_per_spins_2 = 7;
 * @return {number}
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.getGemsPerSpins2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateConfigRequest} returns this
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.setGemsPerSpins2 = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 ads_per_spins_2 = 8;
 * @return {number}
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.getAdsPerSpins2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateConfigRequest} returns this
 */
proto.adminapi.esm.UpdateConfigRequest.prototype.setAdsPerSpins2 = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateConfigResponse}
 */
proto.adminapi.esm.UpdateConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateConfigResponse;
  return proto.adminapi.esm.UpdateConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateConfigResponse}
 */
proto.adminapi.esm.UpdateConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.UpdateConfigResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateConfigResponse} returns this
 */
proto.adminapi.esm.UpdateConfigResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetConfigRequest}
 */
proto.adminapi.esm.GetConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetConfigRequest;
  return proto.adminapi.esm.GetConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetConfigRequest}
 */
proto.adminapi.esm.GetConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.adminapi.esm.ConfigDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetConfigResponse}
 */
proto.adminapi.esm.GetConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetConfigResponse;
  return proto.adminapi.esm.GetConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetConfigResponse}
 */
proto.adminapi.esm.GetConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.ConfigDetail;
      reader.readMessage(value,proto.adminapi.esm.ConfigDetail.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.adminapi.esm.ConfigDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional ConfigDetail result = 1;
 * @return {?proto.adminapi.esm.ConfigDetail}
 */
proto.adminapi.esm.GetConfigResponse.prototype.getResult = function() {
  return /** @type{?proto.adminapi.esm.ConfigDetail} */ (
    jspb.Message.getWrapperField(this, proto.adminapi.esm.ConfigDetail, 1));
};


/**
 * @param {?proto.adminapi.esm.ConfigDetail|undefined} value
 * @return {!proto.adminapi.esm.GetConfigResponse} returns this
*/
proto.adminapi.esm.GetConfigResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.adminapi.esm.GetConfigResponse} returns this
 */
proto.adminapi.esm.GetConfigResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.adminapi.esm.GetConfigResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ConfigDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ConfigDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ConfigDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ConfigDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    invites: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gamesPerAd: jspb.Message.getFieldWithDefault(msg, 2, 0),
    daysToClaim: jspb.Message.getFieldWithDefault(msg, 3, 0),
    freespinPerDay: jspb.Message.getFieldWithDefault(msg, 4, 0),
    gemsPerSpins1: jspb.Message.getFieldWithDefault(msg, 5, 0),
    adsPerSpins1: jspb.Message.getFieldWithDefault(msg, 6, 0),
    gemsPerSpins2: jspb.Message.getFieldWithDefault(msg, 7, 0),
    adsPerSpins2: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ConfigDetail}
 */
proto.adminapi.esm.ConfigDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ConfigDetail;
  return proto.adminapi.esm.ConfigDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ConfigDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ConfigDetail}
 */
proto.adminapi.esm.ConfigDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInvites(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGamesPerAd(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDaysToClaim(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFreespinPerDay(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGemsPerSpins1(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAdsPerSpins1(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGemsPerSpins2(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAdsPerSpins2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ConfigDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ConfigDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ConfigDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ConfigDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvites();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getGamesPerAd();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDaysToClaim();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFreespinPerDay();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getGemsPerSpins1();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getAdsPerSpins1();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getGemsPerSpins2();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getAdsPerSpins2();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional int32 invites = 1;
 * @return {number}
 */
proto.adminapi.esm.ConfigDetail.prototype.getInvites = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ConfigDetail} returns this
 */
proto.adminapi.esm.ConfigDetail.prototype.setInvites = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 games_per_ad = 2;
 * @return {number}
 */
proto.adminapi.esm.ConfigDetail.prototype.getGamesPerAd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ConfigDetail} returns this
 */
proto.adminapi.esm.ConfigDetail.prototype.setGamesPerAd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 days_to_claim = 3;
 * @return {number}
 */
proto.adminapi.esm.ConfigDetail.prototype.getDaysToClaim = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ConfigDetail} returns this
 */
proto.adminapi.esm.ConfigDetail.prototype.setDaysToClaim = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 freespin_per_day = 4;
 * @return {number}
 */
proto.adminapi.esm.ConfigDetail.prototype.getFreespinPerDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ConfigDetail} returns this
 */
proto.adminapi.esm.ConfigDetail.prototype.setFreespinPerDay = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 gems_per_spins_1 = 5;
 * @return {number}
 */
proto.adminapi.esm.ConfigDetail.prototype.getGemsPerSpins1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ConfigDetail} returns this
 */
proto.adminapi.esm.ConfigDetail.prototype.setGemsPerSpins1 = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 ads_per_spins_1 = 6;
 * @return {number}
 */
proto.adminapi.esm.ConfigDetail.prototype.getAdsPerSpins1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ConfigDetail} returns this
 */
proto.adminapi.esm.ConfigDetail.prototype.setAdsPerSpins1 = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 gems_per_spins_2 = 7;
 * @return {number}
 */
proto.adminapi.esm.ConfigDetail.prototype.getGemsPerSpins2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ConfigDetail} returns this
 */
proto.adminapi.esm.ConfigDetail.prototype.setGemsPerSpins2 = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 ads_per_spins_2 = 8;
 * @return {number}
 */
proto.adminapi.esm.ConfigDetail.prototype.getAdsPerSpins2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ConfigDetail} returns this
 */
proto.adminapi.esm.ConfigDetail.prototype.setAdsPerSpins2 = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddSpinnerRuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddSpinnerRuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddSpinnerRuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddSpinnerRuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    probability: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    win: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    typeId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddSpinnerRuleRequest}
 */
proto.adminapi.esm.AddSpinnerRuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddSpinnerRuleRequest;
  return proto.adminapi.esm.AddSpinnerRuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddSpinnerRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddSpinnerRuleRequest}
 */
proto.adminapi.esm.AddSpinnerRuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setProbability(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddSpinnerRuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddSpinnerRuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddSpinnerRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddSpinnerRuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProbability();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getWin();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional double probability = 1;
 * @return {number}
 */
proto.adminapi.esm.AddSpinnerRuleRequest.prototype.getProbability = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddSpinnerRuleRequest} returns this
 */
proto.adminapi.esm.AddSpinnerRuleRequest.prototype.setProbability = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double win = 2;
 * @return {number}
 */
proto.adminapi.esm.AddSpinnerRuleRequest.prototype.getWin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddSpinnerRuleRequest} returns this
 */
proto.adminapi.esm.AddSpinnerRuleRequest.prototype.setWin = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int32 type_id = 3;
 * @return {number}
 */
proto.adminapi.esm.AddSpinnerRuleRequest.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddSpinnerRuleRequest} returns this
 */
proto.adminapi.esm.AddSpinnerRuleRequest.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddSpinnerRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddSpinnerRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddSpinnerRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddSpinnerRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddSpinnerRuleResponse}
 */
proto.adminapi.esm.AddSpinnerRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddSpinnerRuleResponse;
  return proto.adminapi.esm.AddSpinnerRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddSpinnerRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddSpinnerRuleResponse}
 */
proto.adminapi.esm.AddSpinnerRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddSpinnerRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddSpinnerRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddSpinnerRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddSpinnerRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.AddSpinnerRuleResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddSpinnerRuleResponse} returns this
 */
proto.adminapi.esm.AddSpinnerRuleResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateSpinnerRuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateSpinnerRuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateSpinnerRuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateSpinnerRuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    probability: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    win: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    typeId: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateSpinnerRuleRequest}
 */
proto.adminapi.esm.UpdateSpinnerRuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateSpinnerRuleRequest;
  return proto.adminapi.esm.UpdateSpinnerRuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateSpinnerRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateSpinnerRuleRequest}
 */
proto.adminapi.esm.UpdateSpinnerRuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setProbability(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWin(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateSpinnerRuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateSpinnerRuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateSpinnerRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateSpinnerRuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getProbability();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getWin();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.adminapi.esm.UpdateSpinnerRuleRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateSpinnerRuleRequest} returns this
 */
proto.adminapi.esm.UpdateSpinnerRuleRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double probability = 2;
 * @return {number}
 */
proto.adminapi.esm.UpdateSpinnerRuleRequest.prototype.getProbability = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateSpinnerRuleRequest} returns this
 */
proto.adminapi.esm.UpdateSpinnerRuleRequest.prototype.setProbability = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double win = 3;
 * @return {number}
 */
proto.adminapi.esm.UpdateSpinnerRuleRequest.prototype.getWin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateSpinnerRuleRequest} returns this
 */
proto.adminapi.esm.UpdateSpinnerRuleRequest.prototype.setWin = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional int32 type_id = 4;
 * @return {number}
 */
proto.adminapi.esm.UpdateSpinnerRuleRequest.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateSpinnerRuleRequest} returns this
 */
proto.adminapi.esm.UpdateSpinnerRuleRequest.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateSpinnerRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateSpinnerRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateSpinnerRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateSpinnerRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateSpinnerRuleResponse}
 */
proto.adminapi.esm.UpdateSpinnerRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateSpinnerRuleResponse;
  return proto.adminapi.esm.UpdateSpinnerRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateSpinnerRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateSpinnerRuleResponse}
 */
proto.adminapi.esm.UpdateSpinnerRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateSpinnerRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateSpinnerRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateSpinnerRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateSpinnerRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.UpdateSpinnerRuleResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateSpinnerRuleResponse} returns this
 */
proto.adminapi.esm.UpdateSpinnerRuleResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteSpinnerRuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteSpinnerRuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteSpinnerRuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteSpinnerRuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteSpinnerRuleRequest}
 */
proto.adminapi.esm.DeleteSpinnerRuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteSpinnerRuleRequest;
  return proto.adminapi.esm.DeleteSpinnerRuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteSpinnerRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteSpinnerRuleRequest}
 */
proto.adminapi.esm.DeleteSpinnerRuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteSpinnerRuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteSpinnerRuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteSpinnerRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteSpinnerRuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.adminapi.esm.DeleteSpinnerRuleRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.DeleteSpinnerRuleRequest} returns this
 */
proto.adminapi.esm.DeleteSpinnerRuleRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteSpinnerRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteSpinnerRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteSpinnerRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteSpinnerRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteSpinnerRuleResponse}
 */
proto.adminapi.esm.DeleteSpinnerRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteSpinnerRuleResponse;
  return proto.adminapi.esm.DeleteSpinnerRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteSpinnerRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteSpinnerRuleResponse}
 */
proto.adminapi.esm.DeleteSpinnerRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteSpinnerRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteSpinnerRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteSpinnerRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteSpinnerRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.DeleteSpinnerRuleResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.DeleteSpinnerRuleResponse} returns this
 */
proto.adminapi.esm.DeleteSpinnerRuleResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListSpinnerRuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListSpinnerRuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListSpinnerRuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListSpinnerRuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListSpinnerRuleRequest}
 */
proto.adminapi.esm.ListSpinnerRuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListSpinnerRuleRequest;
  return proto.adminapi.esm.ListSpinnerRuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListSpinnerRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListSpinnerRuleRequest}
 */
proto.adminapi.esm.ListSpinnerRuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListSpinnerRuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListSpinnerRuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListSpinnerRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListSpinnerRuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListSpinnerRuleResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListSpinnerRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListSpinnerRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListSpinnerRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListSpinnerRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.SpinnerRuleDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListSpinnerRuleResponse}
 */
proto.adminapi.esm.ListSpinnerRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListSpinnerRuleResponse;
  return proto.adminapi.esm.ListSpinnerRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListSpinnerRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListSpinnerRuleResponse}
 */
proto.adminapi.esm.ListSpinnerRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.SpinnerRuleDetail;
      reader.readMessage(value,proto.adminapi.esm.SpinnerRuleDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListSpinnerRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListSpinnerRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListSpinnerRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListSpinnerRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.SpinnerRuleDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SpinnerRuleDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.SpinnerRuleDetail>}
 */
proto.adminapi.esm.ListSpinnerRuleResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.SpinnerRuleDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.SpinnerRuleDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.SpinnerRuleDetail>} value
 * @return {!proto.adminapi.esm.ListSpinnerRuleResponse} returns this
*/
proto.adminapi.esm.ListSpinnerRuleResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.SpinnerRuleDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.SpinnerRuleDetail}
 */
proto.adminapi.esm.ListSpinnerRuleResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.SpinnerRuleDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListSpinnerRuleResponse} returns this
 */
proto.adminapi.esm.ListSpinnerRuleResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.SpinnerRuleDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.SpinnerRuleDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.SpinnerRuleDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SpinnerRuleDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    probability: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    win: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    typeId: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.SpinnerRuleDetail}
 */
proto.adminapi.esm.SpinnerRuleDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.SpinnerRuleDetail;
  return proto.adminapi.esm.SpinnerRuleDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.SpinnerRuleDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.SpinnerRuleDetail}
 */
proto.adminapi.esm.SpinnerRuleDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setProbability(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWin(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.SpinnerRuleDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.SpinnerRuleDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.SpinnerRuleDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SpinnerRuleDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getProbability();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getWin();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.adminapi.esm.SpinnerRuleDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SpinnerRuleDetail} returns this
 */
proto.adminapi.esm.SpinnerRuleDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double probability = 2;
 * @return {number}
 */
proto.adminapi.esm.SpinnerRuleDetail.prototype.getProbability = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SpinnerRuleDetail} returns this
 */
proto.adminapi.esm.SpinnerRuleDetail.prototype.setProbability = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double win = 3;
 * @return {number}
 */
proto.adminapi.esm.SpinnerRuleDetail.prototype.getWin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SpinnerRuleDetail} returns this
 */
proto.adminapi.esm.SpinnerRuleDetail.prototype.setWin = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional int32 type_id = 4;
 * @return {number}
 */
proto.adminapi.esm.SpinnerRuleDetail.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SpinnerRuleDetail} returns this
 */
proto.adminapi.esm.SpinnerRuleDetail.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddGameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddGameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddGameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddGameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 2, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    content: jspb.Message.getFieldWithDefault(msg, 4, ""),
    typeId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    gameCode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    engineId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    version: jspb.Message.getFieldWithDefault(msg, 8, 0),
    status: jspb.Message.getFieldWithDefault(msg, 9, 0),
    scoreRule: jspb.Message.getFieldWithDefault(msg, 10, 0),
    watchAdGetTickets: jspb.Message.getFieldWithDefault(msg, 11, 0),
    watchAdGetExp: jspb.Message.getFieldWithDefault(msg, 12, 0),
    useGemGetTickets: jspb.Message.getFieldWithDefault(msg, 13, 0),
    useGemGetExp: jspb.Message.getFieldWithDefault(msg, 14, 0),
    useHowManyGems: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddGameRequest}
 */
proto.adminapi.esm.AddGameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddGameRequest;
  return proto.adminapi.esm.AddGameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddGameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddGameRequest}
 */
proto.adminapi.esm.AddGameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameCode(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEngineId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScoreRule(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWatchAdGetTickets(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWatchAdGetExp(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUseGemGetTickets(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUseGemGetExp(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUseHowManyGems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddGameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddGameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddGameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddGameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getGameCode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEngineId();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getScoreRule();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getWatchAdGetTickets();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getWatchAdGetExp();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getUseGemGetTickets();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getUseGemGetExp();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getUseHowManyGems();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.adminapi.esm.AddGameRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddGameRequest} returns this
 */
proto.adminapi.esm.AddGameRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subtitle = 2;
 * @return {string}
 */
proto.adminapi.esm.AddGameRequest.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddGameRequest} returns this
 */
proto.adminapi.esm.AddGameRequest.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string img_url = 3;
 * @return {string}
 */
proto.adminapi.esm.AddGameRequest.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddGameRequest} returns this
 */
proto.adminapi.esm.AddGameRequest.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string content = 4;
 * @return {string}
 */
proto.adminapi.esm.AddGameRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddGameRequest} returns this
 */
proto.adminapi.esm.AddGameRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 type_id = 5;
 * @return {number}
 */
proto.adminapi.esm.AddGameRequest.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddGameRequest} returns this
 */
proto.adminapi.esm.AddGameRequest.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string game_code = 6;
 * @return {string}
 */
proto.adminapi.esm.AddGameRequest.prototype.getGameCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddGameRequest} returns this
 */
proto.adminapi.esm.AddGameRequest.prototype.setGameCode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 engine_id = 7;
 * @return {number}
 */
proto.adminapi.esm.AddGameRequest.prototype.getEngineId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddGameRequest} returns this
 */
proto.adminapi.esm.AddGameRequest.prototype.setEngineId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 version = 8;
 * @return {number}
 */
proto.adminapi.esm.AddGameRequest.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddGameRequest} returns this
 */
proto.adminapi.esm.AddGameRequest.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 status = 9;
 * @return {number}
 */
proto.adminapi.esm.AddGameRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddGameRequest} returns this
 */
proto.adminapi.esm.AddGameRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 score_rule = 10;
 * @return {number}
 */
proto.adminapi.esm.AddGameRequest.prototype.getScoreRule = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddGameRequest} returns this
 */
proto.adminapi.esm.AddGameRequest.prototype.setScoreRule = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 watch_ad_get_tickets = 11;
 * @return {number}
 */
proto.adminapi.esm.AddGameRequest.prototype.getWatchAdGetTickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddGameRequest} returns this
 */
proto.adminapi.esm.AddGameRequest.prototype.setWatchAdGetTickets = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 watch_ad_get_exp = 12;
 * @return {number}
 */
proto.adminapi.esm.AddGameRequest.prototype.getWatchAdGetExp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddGameRequest} returns this
 */
proto.adminapi.esm.AddGameRequest.prototype.setWatchAdGetExp = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 use_gem_get_tickets = 13;
 * @return {number}
 */
proto.adminapi.esm.AddGameRequest.prototype.getUseGemGetTickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddGameRequest} returns this
 */
proto.adminapi.esm.AddGameRequest.prototype.setUseGemGetTickets = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 use_gem_get_exp = 14;
 * @return {number}
 */
proto.adminapi.esm.AddGameRequest.prototype.getUseGemGetExp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddGameRequest} returns this
 */
proto.adminapi.esm.AddGameRequest.prototype.setUseGemGetExp = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 use_how_many_gems = 15;
 * @return {number}
 */
proto.adminapi.esm.AddGameRequest.prototype.getUseHowManyGems = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddGameRequest} returns this
 */
proto.adminapi.esm.AddGameRequest.prototype.setUseHowManyGems = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddGameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddGameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddGameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddGameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddGameResponse}
 */
proto.adminapi.esm.AddGameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddGameResponse;
  return proto.adminapi.esm.AddGameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddGameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddGameResponse}
 */
proto.adminapi.esm.AddGameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddGameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddGameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddGameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddGameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.AddGameResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddGameResponse} returns this
 */
proto.adminapi.esm.AddGameResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateGameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateGameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateGameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    content: jspb.Message.getFieldWithDefault(msg, 5, ""),
    typeId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    gameCode: jspb.Message.getFieldWithDefault(msg, 7, ""),
    engineId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    version: jspb.Message.getFieldWithDefault(msg, 9, 0),
    status: jspb.Message.getFieldWithDefault(msg, 10, 0),
    scoreRule: jspb.Message.getFieldWithDefault(msg, 11, 0),
    watchAdGetTickets: jspb.Message.getFieldWithDefault(msg, 12, 0),
    watchAdGetExp: jspb.Message.getFieldWithDefault(msg, 13, 0),
    useGemGetTickets: jspb.Message.getFieldWithDefault(msg, 14, 0),
    useGemGetExp: jspb.Message.getFieldWithDefault(msg, 15, 0),
    useHowManyGems: jspb.Message.getFieldWithDefault(msg, 16, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateGameRequest}
 */
proto.adminapi.esm.UpdateGameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateGameRequest;
  return proto.adminapi.esm.UpdateGameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateGameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateGameRequest}
 */
proto.adminapi.esm.UpdateGameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameCode(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEngineId(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScoreRule(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWatchAdGetTickets(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWatchAdGetExp(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUseGemGetTickets(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUseGemGetExp(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUseHowManyGems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateGameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateGameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateGameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getGameCode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEngineId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getScoreRule();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getWatchAdGetTickets();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getWatchAdGetExp();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getUseGemGetTickets();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getUseGemGetExp();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getUseHowManyGems();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string subtitle = 3;
 * @return {string}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string img_url = 4;
 * @return {string}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string content = 5;
 * @return {string}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 type_id = 6;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string game_code = 7;
 * @return {string}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getGameCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setGameCode = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 engine_id = 8;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getEngineId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setEngineId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 version = 9;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 status = 10;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 score_rule = 11;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getScoreRule = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setScoreRule = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 watch_ad_get_tickets = 12;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getWatchAdGetTickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setWatchAdGetTickets = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 watch_ad_get_exp = 13;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getWatchAdGetExp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setWatchAdGetExp = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 use_gem_get_tickets = 14;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getUseGemGetTickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setUseGemGetTickets = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 use_gem_get_exp = 15;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getUseGemGetExp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setUseGemGetExp = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int32 use_how_many_gems = 16;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameRequest.prototype.getUseHowManyGems = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameRequest} returns this
 */
proto.adminapi.esm.UpdateGameRequest.prototype.setUseHowManyGems = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateGameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateGameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateGameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateGameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateGameResponse}
 */
proto.adminapi.esm.UpdateGameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateGameResponse;
  return proto.adminapi.esm.UpdateGameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateGameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateGameResponse}
 */
proto.adminapi.esm.UpdateGameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateGameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateGameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateGameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateGameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.UpdateGameResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateGameResponse} returns this
 */
proto.adminapi.esm.UpdateGameResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddGameLeaderRuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddGameLeaderRuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rankFrom: jspb.Message.getFieldWithDefault(msg, 2, 0),
    rankTo: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tickets: jspb.Message.getFieldWithDefault(msg, 4, 0),
    exp: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddGameLeaderRuleRequest}
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddGameLeaderRuleRequest;
  return proto.adminapi.esm.AddGameLeaderRuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddGameLeaderRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddGameLeaderRuleRequest}
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRankFrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRankTo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTickets(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddGameLeaderRuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddGameLeaderRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRankFrom();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRankTo();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTickets();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getExp();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int64 game_id = 1;
 * @return {number}
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.prototype.getGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddGameLeaderRuleRequest} returns this
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.prototype.setGameId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 rank_from = 2;
 * @return {number}
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.prototype.getRankFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddGameLeaderRuleRequest} returns this
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.prototype.setRankFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 rank_to = 3;
 * @return {number}
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.prototype.getRankTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddGameLeaderRuleRequest} returns this
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.prototype.setRankTo = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 tickets = 4;
 * @return {number}
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.prototype.getTickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddGameLeaderRuleRequest} returns this
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.prototype.setTickets = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 exp = 5;
 * @return {number}
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.prototype.getExp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddGameLeaderRuleRequest} returns this
 */
proto.adminapi.esm.AddGameLeaderRuleRequest.prototype.setExp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddGameLeaderRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddGameLeaderRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddGameLeaderRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddGameLeaderRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddGameLeaderRuleResponse}
 */
proto.adminapi.esm.AddGameLeaderRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddGameLeaderRuleResponse;
  return proto.adminapi.esm.AddGameLeaderRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddGameLeaderRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddGameLeaderRuleResponse}
 */
proto.adminapi.esm.AddGameLeaderRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddGameLeaderRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddGameLeaderRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddGameLeaderRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddGameLeaderRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.AddGameLeaderRuleResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddGameLeaderRuleResponse} returns this
 */
proto.adminapi.esm.AddGameLeaderRuleResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateGameLeaderRuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateGameLeaderRuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rankFrom: jspb.Message.getFieldWithDefault(msg, 2, 0),
    rankTo: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tickets: jspb.Message.getFieldWithDefault(msg, 4, 0),
    exp: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateGameLeaderRuleRequest}
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateGameLeaderRuleRequest;
  return proto.adminapi.esm.UpdateGameLeaderRuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateGameLeaderRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateGameLeaderRuleRequest}
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRankFrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRankTo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTickets(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateGameLeaderRuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateGameLeaderRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRankFrom();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRankTo();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTickets();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getExp();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int64 game_id = 1;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.prototype.getGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameLeaderRuleRequest} returns this
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.prototype.setGameId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 rank_from = 2;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.prototype.getRankFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameLeaderRuleRequest} returns this
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.prototype.setRankFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 rank_to = 3;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.prototype.getRankTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameLeaderRuleRequest} returns this
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.prototype.setRankTo = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 tickets = 4;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.prototype.getTickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameLeaderRuleRequest} returns this
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.prototype.setTickets = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 exp = 5;
 * @return {number}
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.prototype.getExp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateGameLeaderRuleRequest} returns this
 */
proto.adminapi.esm.UpdateGameLeaderRuleRequest.prototype.setExp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateGameLeaderRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateGameLeaderRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateGameLeaderRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateGameLeaderRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateGameLeaderRuleResponse}
 */
proto.adminapi.esm.UpdateGameLeaderRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateGameLeaderRuleResponse;
  return proto.adminapi.esm.UpdateGameLeaderRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateGameLeaderRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateGameLeaderRuleResponse}
 */
proto.adminapi.esm.UpdateGameLeaderRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateGameLeaderRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateGameLeaderRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateGameLeaderRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateGameLeaderRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.UpdateGameLeaderRuleResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateGameLeaderRuleResponse} returns this
 */
proto.adminapi.esm.UpdateGameLeaderRuleResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteGameLeaderRuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteGameLeaderRuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteGameLeaderRuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteGameLeaderRuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rankFrom: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteGameLeaderRuleRequest}
 */
proto.adminapi.esm.DeleteGameLeaderRuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteGameLeaderRuleRequest;
  return proto.adminapi.esm.DeleteGameLeaderRuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteGameLeaderRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteGameLeaderRuleRequest}
 */
proto.adminapi.esm.DeleteGameLeaderRuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRankFrom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteGameLeaderRuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteGameLeaderRuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteGameLeaderRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteGameLeaderRuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRankFrom();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 game_id = 1;
 * @return {number}
 */
proto.adminapi.esm.DeleteGameLeaderRuleRequest.prototype.getGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.DeleteGameLeaderRuleRequest} returns this
 */
proto.adminapi.esm.DeleteGameLeaderRuleRequest.prototype.setGameId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 rank_from = 2;
 * @return {number}
 */
proto.adminapi.esm.DeleteGameLeaderRuleRequest.prototype.getRankFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.DeleteGameLeaderRuleRequest} returns this
 */
proto.adminapi.esm.DeleteGameLeaderRuleRequest.prototype.setRankFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteGameLeaderRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteGameLeaderRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteGameLeaderRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteGameLeaderRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteGameLeaderRuleResponse}
 */
proto.adminapi.esm.DeleteGameLeaderRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteGameLeaderRuleResponse;
  return proto.adminapi.esm.DeleteGameLeaderRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteGameLeaderRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteGameLeaderRuleResponse}
 */
proto.adminapi.esm.DeleteGameLeaderRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteGameLeaderRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteGameLeaderRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteGameLeaderRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteGameLeaderRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.DeleteGameLeaderRuleResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.DeleteGameLeaderRuleResponse} returns this
 */
proto.adminapi.esm.DeleteGameLeaderRuleResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListGameLeaderRuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListGameLeaderRuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListGameLeaderRuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListGameLeaderRuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListGameLeaderRuleRequest}
 */
proto.adminapi.esm.ListGameLeaderRuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListGameLeaderRuleRequest;
  return proto.adminapi.esm.ListGameLeaderRuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListGameLeaderRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListGameLeaderRuleRequest}
 */
proto.adminapi.esm.ListGameLeaderRuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListGameLeaderRuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListGameLeaderRuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListGameLeaderRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListGameLeaderRuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 game_id = 1;
 * @return {number}
 */
proto.adminapi.esm.ListGameLeaderRuleRequest.prototype.getGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListGameLeaderRuleRequest} returns this
 */
proto.adminapi.esm.ListGameLeaderRuleRequest.prototype.setGameId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListGameLeaderRuleResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListGameLeaderRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListGameLeaderRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListGameLeaderRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListGameLeaderRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.GameLeaderRuleDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListGameLeaderRuleResponse}
 */
proto.adminapi.esm.ListGameLeaderRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListGameLeaderRuleResponse;
  return proto.adminapi.esm.ListGameLeaderRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListGameLeaderRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListGameLeaderRuleResponse}
 */
proto.adminapi.esm.ListGameLeaderRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.GameLeaderRuleDetail;
      reader.readMessage(value,proto.adminapi.esm.GameLeaderRuleDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListGameLeaderRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListGameLeaderRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListGameLeaderRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListGameLeaderRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.GameLeaderRuleDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GameLeaderRuleDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.GameLeaderRuleDetail>}
 */
proto.adminapi.esm.ListGameLeaderRuleResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.GameLeaderRuleDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.GameLeaderRuleDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.GameLeaderRuleDetail>} value
 * @return {!proto.adminapi.esm.ListGameLeaderRuleResponse} returns this
*/
proto.adminapi.esm.ListGameLeaderRuleResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.GameLeaderRuleDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.GameLeaderRuleDetail}
 */
proto.adminapi.esm.ListGameLeaderRuleResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.GameLeaderRuleDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListGameLeaderRuleResponse} returns this
 */
proto.adminapi.esm.ListGameLeaderRuleResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GameLeaderRuleDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GameLeaderRuleDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GameLeaderRuleDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GameLeaderRuleDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rankFrom: jspb.Message.getFieldWithDefault(msg, 2, 0),
    rankTo: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tickets: jspb.Message.getFieldWithDefault(msg, 4, 0),
    exp: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GameLeaderRuleDetail}
 */
proto.adminapi.esm.GameLeaderRuleDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GameLeaderRuleDetail;
  return proto.adminapi.esm.GameLeaderRuleDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GameLeaderRuleDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GameLeaderRuleDetail}
 */
proto.adminapi.esm.GameLeaderRuleDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRankFrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRankTo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTickets(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GameLeaderRuleDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GameLeaderRuleDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GameLeaderRuleDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GameLeaderRuleDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRankFrom();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRankTo();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTickets();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getExp();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int64 game_id = 1;
 * @return {number}
 */
proto.adminapi.esm.GameLeaderRuleDetail.prototype.getGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameLeaderRuleDetail} returns this
 */
proto.adminapi.esm.GameLeaderRuleDetail.prototype.setGameId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 rank_from = 2;
 * @return {number}
 */
proto.adminapi.esm.GameLeaderRuleDetail.prototype.getRankFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameLeaderRuleDetail} returns this
 */
proto.adminapi.esm.GameLeaderRuleDetail.prototype.setRankFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 rank_to = 3;
 * @return {number}
 */
proto.adminapi.esm.GameLeaderRuleDetail.prototype.getRankTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameLeaderRuleDetail} returns this
 */
proto.adminapi.esm.GameLeaderRuleDetail.prototype.setRankTo = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 tickets = 4;
 * @return {number}
 */
proto.adminapi.esm.GameLeaderRuleDetail.prototype.getTickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameLeaderRuleDetail} returns this
 */
proto.adminapi.esm.GameLeaderRuleDetail.prototype.setTickets = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 exp = 5;
 * @return {number}
 */
proto.adminapi.esm.GameLeaderRuleDetail.prototype.getExp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameLeaderRuleDetail} returns this
 */
proto.adminapi.esm.GameLeaderRuleDetail.prototype.setExp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetGameCodeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetGameCodeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetGameCodeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetGameCodeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetGameCodeRequest}
 */
proto.adminapi.esm.GetGameCodeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetGameCodeRequest;
  return proto.adminapi.esm.GetGameCodeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetGameCodeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetGameCodeRequest}
 */
proto.adminapi.esm.GetGameCodeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetGameCodeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetGameCodeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetGameCodeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetGameCodeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.GetGameCodeRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GetGameCodeRequest} returns this
 */
proto.adminapi.esm.GetGameCodeRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetGameCodeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetGameCodeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetGameCodeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetGameCodeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetGameCodeResponse}
 */
proto.adminapi.esm.GetGameCodeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetGameCodeResponse;
  return proto.adminapi.esm.GetGameCodeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetGameCodeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetGameCodeResponse}
 */
proto.adminapi.esm.GetGameCodeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetGameCodeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetGameCodeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetGameCodeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetGameCodeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.GetGameCodeResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.GetGameCodeResponse} returns this
 */
proto.adminapi.esm.GetGameCodeResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteGameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteGameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteGameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteGameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteGameRequest}
 */
proto.adminapi.esm.DeleteGameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteGameRequest;
  return proto.adminapi.esm.DeleteGameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteGameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteGameRequest}
 */
proto.adminapi.esm.DeleteGameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteGameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteGameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteGameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteGameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.DeleteGameRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.DeleteGameRequest} returns this
 */
proto.adminapi.esm.DeleteGameRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteGameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteGameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteGameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteGameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteGameResponse}
 */
proto.adminapi.esm.DeleteGameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteGameResponse;
  return proto.adminapi.esm.DeleteGameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteGameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteGameResponse}
 */
proto.adminapi.esm.DeleteGameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteGameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteGameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteGameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteGameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.DeleteGameResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.DeleteGameResponse} returns this
 */
proto.adminapi.esm.DeleteGameResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListGameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListGameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListGameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListGameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    searchTitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListGameRequest}
 */
proto.adminapi.esm.ListGameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListGameRequest;
  return proto.adminapi.esm.ListGameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListGameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListGameRequest}
 */
proto.adminapi.esm.ListGameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchTitle(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListGameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListGameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListGameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListGameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSearchTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.adminapi.esm.ListGameRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListGameRequest} returns this
 */
proto.adminapi.esm.ListGameRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.adminapi.esm.ListGameRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListGameRequest} returns this
 */
proto.adminapi.esm.ListGameRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string search_title = 3;
 * @return {string}
 */
proto.adminapi.esm.ListGameRequest.prototype.getSearchTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ListGameRequest} returns this
 */
proto.adminapi.esm.ListGameRequest.prototype.setSearchTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 status = 4;
 * @return {number}
 */
proto.adminapi.esm.ListGameRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListGameRequest} returns this
 */
proto.adminapi.esm.ListGameRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListGameResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListGameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListGameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListGameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListGameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.GameDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListGameResponse}
 */
proto.adminapi.esm.ListGameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListGameResponse;
  return proto.adminapi.esm.ListGameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListGameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListGameResponse}
 */
proto.adminapi.esm.ListGameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.GameDetail;
      reader.readMessage(value,proto.adminapi.esm.GameDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListGameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListGameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListGameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListGameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.GameDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GameDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.GameDetail>}
 */
proto.adminapi.esm.ListGameResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.GameDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.GameDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.GameDetail>} value
 * @return {!proto.adminapi.esm.ListGameResponse} returns this
*/
proto.adminapi.esm.ListGameResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.GameDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.GameDetail}
 */
proto.adminapi.esm.ListGameResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.GameDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListGameResponse} returns this
 */
proto.adminapi.esm.ListGameResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GameDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GameDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GameDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GameDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    content: jspb.Message.getFieldWithDefault(msg, 5, ""),
    typeId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    engineId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    version: jspb.Message.getFieldWithDefault(msg, 8, 0),
    status: jspb.Message.getFieldWithDefault(msg, 9, 0),
    scoreRule: jspb.Message.getFieldWithDefault(msg, 10, 0),
    watchAdGetTickets: jspb.Message.getFieldWithDefault(msg, 11, 0),
    watchAdGetExp: jspb.Message.getFieldWithDefault(msg, 12, 0),
    useGemGetTickets: jspb.Message.getFieldWithDefault(msg, 13, 0),
    useGemGetExp: jspb.Message.getFieldWithDefault(msg, 14, 0),
    useHowManyGems: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GameDetail}
 */
proto.adminapi.esm.GameDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GameDetail;
  return proto.adminapi.esm.GameDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GameDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GameDetail}
 */
proto.adminapi.esm.GameDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEngineId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScoreRule(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWatchAdGetTickets(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWatchAdGetExp(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUseGemGetTickets(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUseGemGetExp(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUseHowManyGems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GameDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GameDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GameDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GameDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getEngineId();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getScoreRule();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getWatchAdGetTickets();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getWatchAdGetExp();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getUseGemGetTickets();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getUseGemGetExp();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getUseHowManyGems();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.GameDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameDetail} returns this
 */
proto.adminapi.esm.GameDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.GameDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.GameDetail} returns this
 */
proto.adminapi.esm.GameDetail.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string subtitle = 3;
 * @return {string}
 */
proto.adminapi.esm.GameDetail.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.GameDetail} returns this
 */
proto.adminapi.esm.GameDetail.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string img_url = 4;
 * @return {string}
 */
proto.adminapi.esm.GameDetail.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.GameDetail} returns this
 */
proto.adminapi.esm.GameDetail.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string content = 5;
 * @return {string}
 */
proto.adminapi.esm.GameDetail.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.GameDetail} returns this
 */
proto.adminapi.esm.GameDetail.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 type_id = 6;
 * @return {number}
 */
proto.adminapi.esm.GameDetail.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameDetail} returns this
 */
proto.adminapi.esm.GameDetail.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 engine_id = 7;
 * @return {number}
 */
proto.adminapi.esm.GameDetail.prototype.getEngineId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameDetail} returns this
 */
proto.adminapi.esm.GameDetail.prototype.setEngineId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 version = 8;
 * @return {number}
 */
proto.adminapi.esm.GameDetail.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameDetail} returns this
 */
proto.adminapi.esm.GameDetail.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 status = 9;
 * @return {number}
 */
proto.adminapi.esm.GameDetail.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameDetail} returns this
 */
proto.adminapi.esm.GameDetail.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 score_rule = 10;
 * @return {number}
 */
proto.adminapi.esm.GameDetail.prototype.getScoreRule = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameDetail} returns this
 */
proto.adminapi.esm.GameDetail.prototype.setScoreRule = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 watch_ad_get_tickets = 11;
 * @return {number}
 */
proto.adminapi.esm.GameDetail.prototype.getWatchAdGetTickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameDetail} returns this
 */
proto.adminapi.esm.GameDetail.prototype.setWatchAdGetTickets = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 watch_ad_get_exp = 12;
 * @return {number}
 */
proto.adminapi.esm.GameDetail.prototype.getWatchAdGetExp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameDetail} returns this
 */
proto.adminapi.esm.GameDetail.prototype.setWatchAdGetExp = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 use_gem_get_tickets = 13;
 * @return {number}
 */
proto.adminapi.esm.GameDetail.prototype.getUseGemGetTickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameDetail} returns this
 */
proto.adminapi.esm.GameDetail.prototype.setUseGemGetTickets = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 use_gem_get_exp = 14;
 * @return {number}
 */
proto.adminapi.esm.GameDetail.prototype.getUseGemGetExp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameDetail} returns this
 */
proto.adminapi.esm.GameDetail.prototype.setUseGemGetExp = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 use_how_many_gems = 15;
 * @return {number}
 */
proto.adminapi.esm.GameDetail.prototype.getUseHowManyGems = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameDetail} returns this
 */
proto.adminapi.esm.GameDetail.prototype.setUseHowManyGems = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetGameCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetGameCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetGameCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetGameCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetGameCountRequest}
 */
proto.adminapi.esm.GetGameCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetGameCountRequest;
  return proto.adminapi.esm.GetGameCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetGameCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetGameCountRequest}
 */
proto.adminapi.esm.GetGameCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetGameCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetGameCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetGameCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetGameCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetGameCountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetGameCountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetGameCountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetGameCountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.adminapi.esm.GameCount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetGameCountResponse}
 */
proto.adminapi.esm.GetGameCountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetGameCountResponse;
  return proto.adminapi.esm.GetGameCountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetGameCountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetGameCountResponse}
 */
proto.adminapi.esm.GetGameCountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.GameCount;
      reader.readMessage(value,proto.adminapi.esm.GameCount.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetGameCountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetGameCountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetGameCountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetGameCountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.adminapi.esm.GameCount.serializeBinaryToWriter
    );
  }
};


/**
 * optional GameCount result = 1;
 * @return {?proto.adminapi.esm.GameCount}
 */
proto.adminapi.esm.GetGameCountResponse.prototype.getResult = function() {
  return /** @type{?proto.adminapi.esm.GameCount} */ (
    jspb.Message.getWrapperField(this, proto.adminapi.esm.GameCount, 1));
};


/**
 * @param {?proto.adminapi.esm.GameCount|undefined} value
 * @return {!proto.adminapi.esm.GetGameCountResponse} returns this
*/
proto.adminapi.esm.GetGameCountResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.adminapi.esm.GetGameCountResponse} returns this
 */
proto.adminapi.esm.GetGameCountResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.adminapi.esm.GetGameCountResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GameCount.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GameCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GameCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GameCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    draft: jspb.Message.getFieldWithDefault(msg, 1, 0),
    published: jspb.Message.getFieldWithDefault(msg, 2, 0),
    archived: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GameCount}
 */
proto.adminapi.esm.GameCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GameCount;
  return proto.adminapi.esm.GameCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GameCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GameCount}
 */
proto.adminapi.esm.GameCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDraft(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPublished(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setArchived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GameCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GameCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GameCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GameCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDraft();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPublished();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getArchived();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 draft = 1;
 * @return {number}
 */
proto.adminapi.esm.GameCount.prototype.getDraft = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameCount} returns this
 */
proto.adminapi.esm.GameCount.prototype.setDraft = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 published = 2;
 * @return {number}
 */
proto.adminapi.esm.GameCount.prototype.getPublished = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameCount} returns this
 */
proto.adminapi.esm.GameCount.prototype.setPublished = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 archived = 3;
 * @return {number}
 */
proto.adminapi.esm.GameCount.prototype.getArchived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GameCount} returns this
 */
proto.adminapi.esm.GameCount.prototype.setArchived = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddInviteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddInviteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddInviteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddInviteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    invitedBy: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddInviteRequest}
 */
proto.adminapi.esm.AddInviteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddInviteRequest;
  return proto.adminapi.esm.AddInviteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddInviteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddInviteRequest}
 */
proto.adminapi.esm.AddInviteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInvitedBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddInviteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddInviteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddInviteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddInviteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getInvitedBy();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 user_id = 1;
 * @return {number}
 */
proto.adminapi.esm.AddInviteRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddInviteRequest} returns this
 */
proto.adminapi.esm.AddInviteRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 invited_by = 2;
 * @return {number}
 */
proto.adminapi.esm.AddInviteRequest.prototype.getInvitedBy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddInviteRequest} returns this
 */
proto.adminapi.esm.AddInviteRequest.prototype.setInvitedBy = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddInviteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddInviteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddInviteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddInviteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddInviteResponse}
 */
proto.adminapi.esm.AddInviteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddInviteResponse;
  return proto.adminapi.esm.AddInviteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddInviteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddInviteResponse}
 */
proto.adminapi.esm.AddInviteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddInviteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddInviteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddInviteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddInviteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.AddInviteResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddInviteResponse} returns this
 */
proto.adminapi.esm.AddInviteResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListInvitedByRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListInvitedByRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListInvitedByRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListInvitedByRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invitedBy: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isClaimed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListInvitedByRequest}
 */
proto.adminapi.esm.ListInvitedByRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListInvitedByRequest;
  return proto.adminapi.esm.ListInvitedByRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListInvitedByRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListInvitedByRequest}
 */
proto.adminapi.esm.ListInvitedByRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInvitedBy(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsClaimed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListInvitedByRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListInvitedByRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListInvitedByRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListInvitedByRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvitedBy();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getIsClaimed();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int64 invited_by = 1;
 * @return {number}
 */
proto.adminapi.esm.ListInvitedByRequest.prototype.getInvitedBy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListInvitedByRequest} returns this
 */
proto.adminapi.esm.ListInvitedByRequest.prototype.setInvitedBy = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool is_claimed = 2;
 * @return {boolean}
 */
proto.adminapi.esm.ListInvitedByRequest.prototype.getIsClaimed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.ListInvitedByRequest} returns this
 */
proto.adminapi.esm.ListInvitedByRequest.prototype.setIsClaimed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListInvitedByResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListInvitedByResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListInvitedByResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListInvitedByResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListInvitedByResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.InvitedByDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListInvitedByResponse}
 */
proto.adminapi.esm.ListInvitedByResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListInvitedByResponse;
  return proto.adminapi.esm.ListInvitedByResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListInvitedByResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListInvitedByResponse}
 */
proto.adminapi.esm.ListInvitedByResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.InvitedByDetail;
      reader.readMessage(value,proto.adminapi.esm.InvitedByDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListInvitedByResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListInvitedByResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListInvitedByResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListInvitedByResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.InvitedByDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InvitedByDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.InvitedByDetail>}
 */
proto.adminapi.esm.ListInvitedByResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.InvitedByDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.InvitedByDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.InvitedByDetail>} value
 * @return {!proto.adminapi.esm.ListInvitedByResponse} returns this
*/
proto.adminapi.esm.ListInvitedByResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.InvitedByDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.InvitedByDetail}
 */
proto.adminapi.esm.ListInvitedByResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.InvitedByDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListInvitedByResponse} returns this
 */
proto.adminapi.esm.ListInvitedByResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.InvitedByDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.InvitedByDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.InvitedByDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.InvitedByDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    invitedBy: jspb.Message.getFieldWithDefault(msg, 3, 0),
    invitedDate: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.InvitedByDetail}
 */
proto.adminapi.esm.InvitedByDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.InvitedByDetail;
  return proto.adminapi.esm.InvitedByDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.InvitedByDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.InvitedByDetail}
 */
proto.adminapi.esm.InvitedByDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInvitedBy(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInvitedDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.InvitedByDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.InvitedByDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.InvitedByDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.InvitedByDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getInvitedBy();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getInvitedDate();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.InvitedByDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.InvitedByDetail} returns this
 */
proto.adminapi.esm.InvitedByDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 user_id = 2;
 * @return {number}
 */
proto.adminapi.esm.InvitedByDetail.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.InvitedByDetail} returns this
 */
proto.adminapi.esm.InvitedByDetail.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 invited_by = 3;
 * @return {number}
 */
proto.adminapi.esm.InvitedByDetail.prototype.getInvitedBy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.InvitedByDetail} returns this
 */
proto.adminapi.esm.InvitedByDetail.prototype.setInvitedBy = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 invited_date = 4;
 * @return {number}
 */
proto.adminapi.esm.InvitedByDetail.prototype.getInvitedDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.InvitedByDetail} returns this
 */
proto.adminapi.esm.InvitedByDetail.prototype.setInvitedDate = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetInvitedByCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetInvitedByCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetInvitedByCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetInvitedByCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invitedBy: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetInvitedByCountRequest}
 */
proto.adminapi.esm.GetInvitedByCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetInvitedByCountRequest;
  return proto.adminapi.esm.GetInvitedByCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetInvitedByCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetInvitedByCountRequest}
 */
proto.adminapi.esm.GetInvitedByCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInvitedBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetInvitedByCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetInvitedByCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetInvitedByCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetInvitedByCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvitedBy();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 invited_by = 1;
 * @return {number}
 */
proto.adminapi.esm.GetInvitedByCountRequest.prototype.getInvitedBy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.GetInvitedByCountRequest} returns this
 */
proto.adminapi.esm.GetInvitedByCountRequest.prototype.setInvitedBy = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetInvitedByCountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetInvitedByCountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetInvitedByCountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetInvitedByCountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetInvitedByCountResponse}
 */
proto.adminapi.esm.GetInvitedByCountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetInvitedByCountResponse;
  return proto.adminapi.esm.GetInvitedByCountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetInvitedByCountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetInvitedByCountResponse}
 */
proto.adminapi.esm.GetInvitedByCountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetInvitedByCountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetInvitedByCountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetInvitedByCountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetInvitedByCountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.GetInvitedByCountResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.GetInvitedByCountResponse} returns this
 */
proto.adminapi.esm.GetInvitedByCountResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteInviteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteInviteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteInviteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteInviteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteInviteRequest}
 */
proto.adminapi.esm.DeleteInviteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteInviteRequest;
  return proto.adminapi.esm.DeleteInviteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteInviteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteInviteRequest}
 */
proto.adminapi.esm.DeleteInviteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteInviteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteInviteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteInviteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteInviteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.DeleteInviteRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.DeleteInviteRequest} returns this
 */
proto.adminapi.esm.DeleteInviteRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteInviteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteInviteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteInviteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteInviteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteInviteResponse}
 */
proto.adminapi.esm.DeleteInviteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteInviteResponse;
  return proto.adminapi.esm.DeleteInviteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteInviteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteInviteResponse}
 */
proto.adminapi.esm.DeleteInviteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteInviteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteInviteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteInviteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteInviteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.DeleteInviteResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.DeleteInviteResponse} returns this
 */
proto.adminapi.esm.DeleteInviteResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 2, ""),
    content: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    typeId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    quantity: jspb.Message.getFieldWithDefault(msg, 7, 0),
    status: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddItemRequest}
 */
proto.adminapi.esm.AddItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddItemRequest;
  return proto.adminapi.esm.AddItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddItemRequest}
 */
proto.adminapi.esm.AddItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.adminapi.esm.AddItemRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddItemRequest} returns this
 */
proto.adminapi.esm.AddItemRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subtitle = 2;
 * @return {string}
 */
proto.adminapi.esm.AddItemRequest.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddItemRequest} returns this
 */
proto.adminapi.esm.AddItemRequest.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string content = 3;
 * @return {string}
 */
proto.adminapi.esm.AddItemRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddItemRequest} returns this
 */
proto.adminapi.esm.AddItemRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string img_url = 4;
 * @return {string}
 */
proto.adminapi.esm.AddItemRequest.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddItemRequest} returns this
 */
proto.adminapi.esm.AddItemRequest.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 type_id = 5;
 * @return {number}
 */
proto.adminapi.esm.AddItemRequest.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddItemRequest} returns this
 */
proto.adminapi.esm.AddItemRequest.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double price = 6;
 * @return {number}
 */
proto.adminapi.esm.AddItemRequest.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddItemRequest} returns this
 */
proto.adminapi.esm.AddItemRequest.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional int32 quantity = 7;
 * @return {number}
 */
proto.adminapi.esm.AddItemRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddItemRequest} returns this
 */
proto.adminapi.esm.AddItemRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 status = 8;
 * @return {number}
 */
proto.adminapi.esm.AddItemRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddItemRequest} returns this
 */
proto.adminapi.esm.AddItemRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddItemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddItemResponse}
 */
proto.adminapi.esm.AddItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddItemResponse;
  return proto.adminapi.esm.AddItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddItemResponse}
 */
proto.adminapi.esm.AddItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddItemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.AddItemResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddItemResponse} returns this
 */
proto.adminapi.esm.AddItemResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    content: jspb.Message.getFieldWithDefault(msg, 4, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    typeId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    quantity: jspb.Message.getFieldWithDefault(msg, 8, 0),
    status: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateItemRequest}
 */
proto.adminapi.esm.UpdateItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateItemRequest;
  return proto.adminapi.esm.UpdateItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateItemRequest}
 */
proto.adminapi.esm.UpdateItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.UpdateItemRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateItemRequest} returns this
 */
proto.adminapi.esm.UpdateItemRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.UpdateItemRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateItemRequest} returns this
 */
proto.adminapi.esm.UpdateItemRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string subtitle = 3;
 * @return {string}
 */
proto.adminapi.esm.UpdateItemRequest.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateItemRequest} returns this
 */
proto.adminapi.esm.UpdateItemRequest.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string content = 4;
 * @return {string}
 */
proto.adminapi.esm.UpdateItemRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateItemRequest} returns this
 */
proto.adminapi.esm.UpdateItemRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string img_url = 5;
 * @return {string}
 */
proto.adminapi.esm.UpdateItemRequest.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateItemRequest} returns this
 */
proto.adminapi.esm.UpdateItemRequest.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 type_id = 6;
 * @return {number}
 */
proto.adminapi.esm.UpdateItemRequest.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateItemRequest} returns this
 */
proto.adminapi.esm.UpdateItemRequest.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional double price = 7;
 * @return {number}
 */
proto.adminapi.esm.UpdateItemRequest.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateItemRequest} returns this
 */
proto.adminapi.esm.UpdateItemRequest.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional int32 quantity = 8;
 * @return {number}
 */
proto.adminapi.esm.UpdateItemRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateItemRequest} returns this
 */
proto.adminapi.esm.UpdateItemRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 status = 9;
 * @return {number}
 */
proto.adminapi.esm.UpdateItemRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateItemRequest} returns this
 */
proto.adminapi.esm.UpdateItemRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateItemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateItemResponse}
 */
proto.adminapi.esm.UpdateItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateItemResponse;
  return proto.adminapi.esm.UpdateItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateItemResponse}
 */
proto.adminapi.esm.UpdateItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateItemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.UpdateItemResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateItemResponse} returns this
 */
proto.adminapi.esm.UpdateItemResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteItemRequest}
 */
proto.adminapi.esm.DeleteItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteItemRequest;
  return proto.adminapi.esm.DeleteItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteItemRequest}
 */
proto.adminapi.esm.DeleteItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.DeleteItemRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.DeleteItemRequest} returns this
 */
proto.adminapi.esm.DeleteItemRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteItemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteItemResponse}
 */
proto.adminapi.esm.DeleteItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteItemResponse;
  return proto.adminapi.esm.DeleteItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteItemResponse}
 */
proto.adminapi.esm.DeleteItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteItemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.DeleteItemResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.DeleteItemResponse} returns this
 */
proto.adminapi.esm.DeleteItemResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    searchTitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListItemRequest}
 */
proto.adminapi.esm.ListItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListItemRequest;
  return proto.adminapi.esm.ListItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListItemRequest}
 */
proto.adminapi.esm.ListItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchTitle(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSearchTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.adminapi.esm.ListItemRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListItemRequest} returns this
 */
proto.adminapi.esm.ListItemRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.adminapi.esm.ListItemRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListItemRequest} returns this
 */
proto.adminapi.esm.ListItemRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string search_title = 3;
 * @return {string}
 */
proto.adminapi.esm.ListItemRequest.prototype.getSearchTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ListItemRequest} returns this
 */
proto.adminapi.esm.ListItemRequest.prototype.setSearchTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 status = 4;
 * @return {number}
 */
proto.adminapi.esm.ListItemRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListItemRequest} returns this
 */
proto.adminapi.esm.ListItemRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListItemResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListItemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.ItemDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListItemResponse}
 */
proto.adminapi.esm.ListItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListItemResponse;
  return proto.adminapi.esm.ListItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListItemResponse}
 */
proto.adminapi.esm.ListItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.ItemDetail;
      reader.readMessage(value,proto.adminapi.esm.ItemDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListItemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.ItemDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ItemDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.ItemDetail>}
 */
proto.adminapi.esm.ListItemResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.ItemDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.ItemDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.ItemDetail>} value
 * @return {!proto.adminapi.esm.ListItemResponse} returns this
*/
proto.adminapi.esm.ListItemResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.ItemDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.ItemDetail}
 */
proto.adminapi.esm.ListItemResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.ItemDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListItemResponse} returns this
 */
proto.adminapi.esm.ListItemResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ItemDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ItemDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ItemDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ItemDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    content: jspb.Message.getFieldWithDefault(msg, 4, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    typeId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    quantity: jspb.Message.getFieldWithDefault(msg, 8, 0),
    status: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ItemDetail}
 */
proto.adminapi.esm.ItemDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ItemDetail;
  return proto.adminapi.esm.ItemDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ItemDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ItemDetail}
 */
proto.adminapi.esm.ItemDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ItemDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ItemDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ItemDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ItemDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.ItemDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ItemDetail} returns this
 */
proto.adminapi.esm.ItemDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.ItemDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ItemDetail} returns this
 */
proto.adminapi.esm.ItemDetail.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string subtitle = 3;
 * @return {string}
 */
proto.adminapi.esm.ItemDetail.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ItemDetail} returns this
 */
proto.adminapi.esm.ItemDetail.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string content = 4;
 * @return {string}
 */
proto.adminapi.esm.ItemDetail.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ItemDetail} returns this
 */
proto.adminapi.esm.ItemDetail.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string img_url = 5;
 * @return {string}
 */
proto.adminapi.esm.ItemDetail.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ItemDetail} returns this
 */
proto.adminapi.esm.ItemDetail.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 type_id = 6;
 * @return {number}
 */
proto.adminapi.esm.ItemDetail.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ItemDetail} returns this
 */
proto.adminapi.esm.ItemDetail.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional double price = 7;
 * @return {number}
 */
proto.adminapi.esm.ItemDetail.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ItemDetail} returns this
 */
proto.adminapi.esm.ItemDetail.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional int32 quantity = 8;
 * @return {number}
 */
proto.adminapi.esm.ItemDetail.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ItemDetail} returns this
 */
proto.adminapi.esm.ItemDetail.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 status = 9;
 * @return {number}
 */
proto.adminapi.esm.ItemDetail.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ItemDetail} returns this
 */
proto.adminapi.esm.ItemDetail.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetItemCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetItemCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetItemCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetItemCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetItemCountRequest}
 */
proto.adminapi.esm.GetItemCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetItemCountRequest;
  return proto.adminapi.esm.GetItemCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetItemCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetItemCountRequest}
 */
proto.adminapi.esm.GetItemCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetItemCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetItemCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetItemCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetItemCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetItemCountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetItemCountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetItemCountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetItemCountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.adminapi.esm.ItemCount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetItemCountResponse}
 */
proto.adminapi.esm.GetItemCountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetItemCountResponse;
  return proto.adminapi.esm.GetItemCountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetItemCountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetItemCountResponse}
 */
proto.adminapi.esm.GetItemCountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.ItemCount;
      reader.readMessage(value,proto.adminapi.esm.ItemCount.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetItemCountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetItemCountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetItemCountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetItemCountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.adminapi.esm.ItemCount.serializeBinaryToWriter
    );
  }
};


/**
 * optional ItemCount result = 1;
 * @return {?proto.adminapi.esm.ItemCount}
 */
proto.adminapi.esm.GetItemCountResponse.prototype.getResult = function() {
  return /** @type{?proto.adminapi.esm.ItemCount} */ (
    jspb.Message.getWrapperField(this, proto.adminapi.esm.ItemCount, 1));
};


/**
 * @param {?proto.adminapi.esm.ItemCount|undefined} value
 * @return {!proto.adminapi.esm.GetItemCountResponse} returns this
*/
proto.adminapi.esm.GetItemCountResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.adminapi.esm.GetItemCountResponse} returns this
 */
proto.adminapi.esm.GetItemCountResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.adminapi.esm.GetItemCountResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ItemCount.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ItemCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ItemCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ItemCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    draft: jspb.Message.getFieldWithDefault(msg, 1, 0),
    published: jspb.Message.getFieldWithDefault(msg, 2, 0),
    archived: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ItemCount}
 */
proto.adminapi.esm.ItemCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ItemCount;
  return proto.adminapi.esm.ItemCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ItemCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ItemCount}
 */
proto.adminapi.esm.ItemCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDraft(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPublished(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setArchived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ItemCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ItemCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ItemCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ItemCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDraft();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPublished();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getArchived();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 draft = 1;
 * @return {number}
 */
proto.adminapi.esm.ItemCount.prototype.getDraft = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ItemCount} returns this
 */
proto.adminapi.esm.ItemCount.prototype.setDraft = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 published = 2;
 * @return {number}
 */
proto.adminapi.esm.ItemCount.prototype.getPublished = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ItemCount} returns this
 */
proto.adminapi.esm.ItemCount.prototype.setPublished = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 archived = 3;
 * @return {number}
 */
proto.adminapi.esm.ItemCount.prototype.getArchived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ItemCount} returns this
 */
proto.adminapi.esm.ItemCount.prototype.setArchived = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListItemTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListItemTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListItemTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListItemTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListItemTypeRequest}
 */
proto.adminapi.esm.ListItemTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListItemTypeRequest;
  return proto.adminapi.esm.ListItemTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListItemTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListItemTypeRequest}
 */
proto.adminapi.esm.ListItemTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListItemTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListItemTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListItemTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListItemTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListItemTypeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListItemTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListItemTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListItemTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListItemTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.ItemTypeDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListItemTypeResponse}
 */
proto.adminapi.esm.ListItemTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListItemTypeResponse;
  return proto.adminapi.esm.ListItemTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListItemTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListItemTypeResponse}
 */
proto.adminapi.esm.ListItemTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.ItemTypeDetail;
      reader.readMessage(value,proto.adminapi.esm.ItemTypeDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListItemTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListItemTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListItemTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListItemTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.ItemTypeDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ItemTypeDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.ItemTypeDetail>}
 */
proto.adminapi.esm.ListItemTypeResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.ItemTypeDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.ItemTypeDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.ItemTypeDetail>} value
 * @return {!proto.adminapi.esm.ListItemTypeResponse} returns this
*/
proto.adminapi.esm.ListItemTypeResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.ItemTypeDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.ItemTypeDetail}
 */
proto.adminapi.esm.ListItemTypeResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.ItemTypeDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListItemTypeResponse} returns this
 */
proto.adminapi.esm.ListItemTypeResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ItemTypeDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ItemTypeDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ItemTypeDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ItemTypeDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ItemTypeDetail}
 */
proto.adminapi.esm.ItemTypeDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ItemTypeDetail;
  return proto.adminapi.esm.ItemTypeDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ItemTypeDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ItemTypeDetail}
 */
proto.adminapi.esm.ItemTypeDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ItemTypeDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ItemTypeDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ItemTypeDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ItemTypeDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.adminapi.esm.ItemTypeDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ItemTypeDetail} returns this
 */
proto.adminapi.esm.ItemTypeDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.ItemTypeDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ItemTypeDetail} returns this
 */
proto.adminapi.esm.ItemTypeDetail.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.AddPrizeRequest.repeatedFields_ = [12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddPrizeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddPrizeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddPrizeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddPrizeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 2, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    content: jspb.Message.getFieldWithDefault(msg, 4, ""),
    typeId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    ticketsRequired: jspb.Message.getFieldWithDefault(msg, 6, 0),
    durationDays: jspb.Message.getFieldWithDefault(msg, 7, 0),
    durationHours: jspb.Message.getFieldWithDefault(msg, 8, 0),
    timezone: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    scheduledOn: jspb.Message.getFieldWithDefault(msg, 10, 0),
    isRepeat: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    repeatedOnList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    status: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddPrizeRequest}
 */
proto.adminapi.esm.AddPrizeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddPrizeRequest;
  return proto.adminapi.esm.AddPrizeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddPrizeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddPrizeRequest}
 */
proto.adminapi.esm.AddPrizeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTicketsRequired(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationDays(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationHours(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimezone(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScheduledOn(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRepeat(value);
      break;
    case 12:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setRepeatedOnList(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddPrizeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddPrizeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddPrizeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddPrizeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTicketsRequired();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getDurationDays();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getDurationHours();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getTimezone();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getScheduledOn();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getIsRepeat();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getRepeatedOnList();
  if (f.length > 0) {
    writer.writePackedInt32(
      12,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.adminapi.esm.AddPrizeRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddPrizeRequest} returns this
 */
proto.adminapi.esm.AddPrizeRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subtitle = 2;
 * @return {string}
 */
proto.adminapi.esm.AddPrizeRequest.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddPrizeRequest} returns this
 */
proto.adminapi.esm.AddPrizeRequest.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string img_url = 3;
 * @return {string}
 */
proto.adminapi.esm.AddPrizeRequest.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddPrizeRequest} returns this
 */
proto.adminapi.esm.AddPrizeRequest.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string content = 4;
 * @return {string}
 */
proto.adminapi.esm.AddPrizeRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddPrizeRequest} returns this
 */
proto.adminapi.esm.AddPrizeRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 type_id = 5;
 * @return {number}
 */
proto.adminapi.esm.AddPrizeRequest.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddPrizeRequest} returns this
 */
proto.adminapi.esm.AddPrizeRequest.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 tickets_required = 6;
 * @return {number}
 */
proto.adminapi.esm.AddPrizeRequest.prototype.getTicketsRequired = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddPrizeRequest} returns this
 */
proto.adminapi.esm.AddPrizeRequest.prototype.setTicketsRequired = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 duration_days = 7;
 * @return {number}
 */
proto.adminapi.esm.AddPrizeRequest.prototype.getDurationDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddPrizeRequest} returns this
 */
proto.adminapi.esm.AddPrizeRequest.prototype.setDurationDays = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 duration_hours = 8;
 * @return {number}
 */
proto.adminapi.esm.AddPrizeRequest.prototype.getDurationHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddPrizeRequest} returns this
 */
proto.adminapi.esm.AddPrizeRequest.prototype.setDurationHours = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional double timezone = 9;
 * @return {number}
 */
proto.adminapi.esm.AddPrizeRequest.prototype.getTimezone = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddPrizeRequest} returns this
 */
proto.adminapi.esm.AddPrizeRequest.prototype.setTimezone = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional int64 scheduled_on = 10;
 * @return {number}
 */
proto.adminapi.esm.AddPrizeRequest.prototype.getScheduledOn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddPrizeRequest} returns this
 */
proto.adminapi.esm.AddPrizeRequest.prototype.setScheduledOn = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool is_repeat = 11;
 * @return {boolean}
 */
proto.adminapi.esm.AddPrizeRequest.prototype.getIsRepeat = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.AddPrizeRequest} returns this
 */
proto.adminapi.esm.AddPrizeRequest.prototype.setIsRepeat = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * repeated int32 repeated_on = 12;
 * @return {!Array<number>}
 */
proto.adminapi.esm.AddPrizeRequest.prototype.getRepeatedOnList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.adminapi.esm.AddPrizeRequest} returns this
 */
proto.adminapi.esm.AddPrizeRequest.prototype.setRepeatedOnList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.AddPrizeRequest} returns this
 */
proto.adminapi.esm.AddPrizeRequest.prototype.addRepeatedOn = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.AddPrizeRequest} returns this
 */
proto.adminapi.esm.AddPrizeRequest.prototype.clearRepeatedOnList = function() {
  return this.setRepeatedOnList([]);
};


/**
 * optional int32 status = 13;
 * @return {number}
 */
proto.adminapi.esm.AddPrizeRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddPrizeRequest} returns this
 */
proto.adminapi.esm.AddPrizeRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddPrizeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddPrizeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddPrizeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddPrizeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddPrizeResponse}
 */
proto.adminapi.esm.AddPrizeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddPrizeResponse;
  return proto.adminapi.esm.AddPrizeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddPrizeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddPrizeResponse}
 */
proto.adminapi.esm.AddPrizeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddPrizeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddPrizeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddPrizeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddPrizeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.AddPrizeResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddPrizeResponse} returns this
 */
proto.adminapi.esm.AddPrizeResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.UpdatePrizeRequest.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdatePrizeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdatePrizeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdatePrizeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    content: jspb.Message.getFieldWithDefault(msg, 5, ""),
    typeId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    ticketsRequired: jspb.Message.getFieldWithDefault(msg, 7, 0),
    durationDays: jspb.Message.getFieldWithDefault(msg, 8, 0),
    durationHours: jspb.Message.getFieldWithDefault(msg, 9, 0),
    timezone: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    scheduledOn: jspb.Message.getFieldWithDefault(msg, 11, 0),
    isRepeat: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    repeatedOnList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    status: jspb.Message.getFieldWithDefault(msg, 14, 0),
    statusProgress: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdatePrizeRequest}
 */
proto.adminapi.esm.UpdatePrizeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdatePrizeRequest;
  return proto.adminapi.esm.UpdatePrizeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdatePrizeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdatePrizeRequest}
 */
proto.adminapi.esm.UpdatePrizeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTicketsRequired(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationDays(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationHours(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimezone(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScheduledOn(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRepeat(value);
      break;
    case 13:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setRepeatedOnList(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatusProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdatePrizeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdatePrizeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdatePrizeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTicketsRequired();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getDurationDays();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getDurationHours();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getTimezone();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getScheduledOn();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getIsRepeat();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getRepeatedOnList();
  if (f.length > 0) {
    writer.writePackedInt32(
      13,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getStatusProgress();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string subtitle = 3;
 * @return {string}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string img_url = 4;
 * @return {string}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string content = 5;
 * @return {string}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 type_id = 6;
 * @return {number}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 tickets_required = 7;
 * @return {number}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.getTicketsRequired = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.setTicketsRequired = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 duration_days = 8;
 * @return {number}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.getDurationDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.setDurationDays = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 duration_hours = 9;
 * @return {number}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.getDurationHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.setDurationHours = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional double timezone = 10;
 * @return {number}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.getTimezone = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.setTimezone = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional int64 scheduled_on = 11;
 * @return {number}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.getScheduledOn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.setScheduledOn = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bool is_repeat = 12;
 * @return {boolean}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.getIsRepeat = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.setIsRepeat = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * repeated int32 repeated_on = 13;
 * @return {!Array<number>}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.getRepeatedOnList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.setRepeatedOnList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.addRepeatedOn = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.clearRepeatedOnList = function() {
  return this.setRepeatedOnList([]);
};


/**
 * optional int32 status = 14;
 * @return {number}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 status_progress = 15;
 * @return {number}
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.getStatusProgress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdatePrizeRequest} returns this
 */
proto.adminapi.esm.UpdatePrizeRequest.prototype.setStatusProgress = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdatePrizeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdatePrizeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdatePrizeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdatePrizeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdatePrizeResponse}
 */
proto.adminapi.esm.UpdatePrizeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdatePrizeResponse;
  return proto.adminapi.esm.UpdatePrizeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdatePrizeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdatePrizeResponse}
 */
proto.adminapi.esm.UpdatePrizeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdatePrizeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdatePrizeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdatePrizeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdatePrizeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.UpdatePrizeResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdatePrizeResponse} returns this
 */
proto.adminapi.esm.UpdatePrizeResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeletePrizeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeletePrizeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeletePrizeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeletePrizeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeletePrizeRequest}
 */
proto.adminapi.esm.DeletePrizeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeletePrizeRequest;
  return proto.adminapi.esm.DeletePrizeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeletePrizeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeletePrizeRequest}
 */
proto.adminapi.esm.DeletePrizeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeletePrizeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeletePrizeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeletePrizeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeletePrizeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.DeletePrizeRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.DeletePrizeRequest} returns this
 */
proto.adminapi.esm.DeletePrizeRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeletePrizeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeletePrizeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeletePrizeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeletePrizeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeletePrizeResponse}
 */
proto.adminapi.esm.DeletePrizeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeletePrizeResponse;
  return proto.adminapi.esm.DeletePrizeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeletePrizeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeletePrizeResponse}
 */
proto.adminapi.esm.DeletePrizeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeletePrizeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeletePrizeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeletePrizeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeletePrizeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.DeletePrizeResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.DeletePrizeResponse} returns this
 */
proto.adminapi.esm.DeletePrizeResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.SosStopPrizeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.SosStopPrizeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.SosStopPrizeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SosStopPrizeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.SosStopPrizeRequest}
 */
proto.adminapi.esm.SosStopPrizeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.SosStopPrizeRequest;
  return proto.adminapi.esm.SosStopPrizeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.SosStopPrizeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.SosStopPrizeRequest}
 */
proto.adminapi.esm.SosStopPrizeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.SosStopPrizeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.SosStopPrizeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.SosStopPrizeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SosStopPrizeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.SosStopPrizeRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SosStopPrizeRequest} returns this
 */
proto.adminapi.esm.SosStopPrizeRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.SosStopPrizeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.SosStopPrizeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.SosStopPrizeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SosStopPrizeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.SosStopPrizeResponse}
 */
proto.adminapi.esm.SosStopPrizeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.SosStopPrizeResponse;
  return proto.adminapi.esm.SosStopPrizeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.SosStopPrizeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.SosStopPrizeResponse}
 */
proto.adminapi.esm.SosStopPrizeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.SosStopPrizeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.SosStopPrizeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.SosStopPrizeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SosStopPrizeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.SosStopPrizeResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.SosStopPrizeResponse} returns this
 */
proto.adminapi.esm.SosStopPrizeResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListPrizeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListPrizeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListPrizeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    searchTitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListPrizeRequest}
 */
proto.adminapi.esm.ListPrizeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListPrizeRequest;
  return proto.adminapi.esm.ListPrizeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListPrizeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListPrizeRequest}
 */
proto.adminapi.esm.ListPrizeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchTitle(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListPrizeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListPrizeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListPrizeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSearchTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.adminapi.esm.ListPrizeRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListPrizeRequest} returns this
 */
proto.adminapi.esm.ListPrizeRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.adminapi.esm.ListPrizeRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListPrizeRequest} returns this
 */
proto.adminapi.esm.ListPrizeRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string search_title = 3;
 * @return {string}
 */
proto.adminapi.esm.ListPrizeRequest.prototype.getSearchTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ListPrizeRequest} returns this
 */
proto.adminapi.esm.ListPrizeRequest.prototype.setSearchTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 status = 4;
 * @return {number}
 */
proto.adminapi.esm.ListPrizeRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListPrizeRequest} returns this
 */
proto.adminapi.esm.ListPrizeRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListPrizeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListPrizeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListPrizeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListPrizeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.PrizeDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListPrizeResponse}
 */
proto.adminapi.esm.ListPrizeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListPrizeResponse;
  return proto.adminapi.esm.ListPrizeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListPrizeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListPrizeResponse}
 */
proto.adminapi.esm.ListPrizeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.PrizeDetail;
      reader.readMessage(value,proto.adminapi.esm.PrizeDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListPrizeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListPrizeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListPrizeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.PrizeDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PrizeDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.PrizeDetail>}
 */
proto.adminapi.esm.ListPrizeResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.PrizeDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.PrizeDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.PrizeDetail>} value
 * @return {!proto.adminapi.esm.ListPrizeResponse} returns this
*/
proto.adminapi.esm.ListPrizeResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.PrizeDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.PrizeDetail}
 */
proto.adminapi.esm.ListPrizeResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.PrizeDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListPrizeResponse} returns this
 */
proto.adminapi.esm.ListPrizeResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.PrizeDetail.repeatedFields_ = [14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.PrizeDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.PrizeDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.PrizeDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.PrizeDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    content: jspb.Message.getFieldWithDefault(msg, 5, ""),
    typeId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    ticketsRequired: jspb.Message.getFieldWithDefault(msg, 7, 0),
    durationDays: jspb.Message.getFieldWithDefault(msg, 8, 0),
    durationHours: jspb.Message.getFieldWithDefault(msg, 9, 0),
    timezone: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    scheduledOn: jspb.Message.getFieldWithDefault(msg, 11, 0),
    scheduledOff: jspb.Message.getFieldWithDefault(msg, 12, 0),
    isRepeat: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    repeatedOnList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    status: jspb.Message.getFieldWithDefault(msg, 15, 0),
    statusProgress: jspb.Message.getFieldWithDefault(msg, 16, 0),
    ticketsCollected: jspb.Message.getFieldWithDefault(msg, 17, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.PrizeDetail}
 */
proto.adminapi.esm.PrizeDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.PrizeDetail;
  return proto.adminapi.esm.PrizeDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.PrizeDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.PrizeDetail}
 */
proto.adminapi.esm.PrizeDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTicketsRequired(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationDays(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationHours(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimezone(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScheduledOn(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScheduledOff(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRepeat(value);
      break;
    case 14:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setRepeatedOnList(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatusProgress(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTicketsCollected(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.PrizeDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.PrizeDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.PrizeDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.PrizeDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTicketsRequired();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getDurationDays();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getDurationHours();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getTimezone();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getScheduledOn();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getScheduledOff();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getIsRepeat();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getRepeatedOnList();
  if (f.length > 0) {
    writer.writePackedInt32(
      14,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getStatusProgress();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getTicketsCollected();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.PrizeDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.PrizeDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string subtitle = 3;
 * @return {string}
 */
proto.adminapi.esm.PrizeDetail.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string img_url = 4;
 * @return {string}
 */
proto.adminapi.esm.PrizeDetail.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string content = 5;
 * @return {string}
 */
proto.adminapi.esm.PrizeDetail.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 type_id = 6;
 * @return {number}
 */
proto.adminapi.esm.PrizeDetail.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 tickets_required = 7;
 * @return {number}
 */
proto.adminapi.esm.PrizeDetail.prototype.getTicketsRequired = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setTicketsRequired = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 duration_days = 8;
 * @return {number}
 */
proto.adminapi.esm.PrizeDetail.prototype.getDurationDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setDurationDays = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 duration_hours = 9;
 * @return {number}
 */
proto.adminapi.esm.PrizeDetail.prototype.getDurationHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setDurationHours = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional double timezone = 10;
 * @return {number}
 */
proto.adminapi.esm.PrizeDetail.prototype.getTimezone = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setTimezone = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional int64 scheduled_on = 11;
 * @return {number}
 */
proto.adminapi.esm.PrizeDetail.prototype.getScheduledOn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setScheduledOn = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 scheduled_off = 12;
 * @return {number}
 */
proto.adminapi.esm.PrizeDetail.prototype.getScheduledOff = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setScheduledOff = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional bool is_repeat = 13;
 * @return {boolean}
 */
proto.adminapi.esm.PrizeDetail.prototype.getIsRepeat = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setIsRepeat = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * repeated int32 repeated_on = 14;
 * @return {!Array<number>}
 */
proto.adminapi.esm.PrizeDetail.prototype.getRepeatedOnList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setRepeatedOnList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.addRepeatedOn = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.clearRepeatedOnList = function() {
  return this.setRepeatedOnList([]);
};


/**
 * optional int32 status = 15;
 * @return {number}
 */
proto.adminapi.esm.PrizeDetail.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int32 status_progress = 16;
 * @return {number}
 */
proto.adminapi.esm.PrizeDetail.prototype.getStatusProgress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setStatusProgress = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int64 tickets_collected = 17;
 * @return {number}
 */
proto.adminapi.esm.PrizeDetail.prototype.getTicketsCollected = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeDetail} returns this
 */
proto.adminapi.esm.PrizeDetail.prototype.setTicketsCollected = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListPrizeTodayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListPrizeTodayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListPrizeTodayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeTodayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListPrizeTodayRequest}
 */
proto.adminapi.esm.ListPrizeTodayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListPrizeTodayRequest;
  return proto.adminapi.esm.ListPrizeTodayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListPrizeTodayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListPrizeTodayRequest}
 */
proto.adminapi.esm.ListPrizeTodayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListPrizeTodayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListPrizeTodayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListPrizeTodayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeTodayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListPrizeTodayResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListPrizeTodayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListPrizeTodayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListPrizeTodayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeTodayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.PrizeTodayDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListPrizeTodayResponse}
 */
proto.adminapi.esm.ListPrizeTodayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListPrizeTodayResponse;
  return proto.adminapi.esm.ListPrizeTodayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListPrizeTodayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListPrizeTodayResponse}
 */
proto.adminapi.esm.ListPrizeTodayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.PrizeTodayDetail;
      reader.readMessage(value,proto.adminapi.esm.PrizeTodayDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListPrizeTodayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListPrizeTodayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListPrizeTodayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeTodayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.PrizeTodayDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PrizeTodayDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.PrizeTodayDetail>}
 */
proto.adminapi.esm.ListPrizeTodayResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.PrizeTodayDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.PrizeTodayDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.PrizeTodayDetail>} value
 * @return {!proto.adminapi.esm.ListPrizeTodayResponse} returns this
*/
proto.adminapi.esm.ListPrizeTodayResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.PrizeTodayDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.PrizeTodayDetail}
 */
proto.adminapi.esm.ListPrizeTodayResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.PrizeTodayDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListPrizeTodayResponse} returns this
 */
proto.adminapi.esm.ListPrizeTodayResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.PrizeTodayDetail.repeatedFields_ = [15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.PrizeTodayDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.PrizeTodayDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.PrizeTodayDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentGameId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    prizeId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    prizeTitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    prizeSubtitle: jspb.Message.getFieldWithDefault(msg, 4, ""),
    prizeImgUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    prizeContent: jspb.Message.getFieldWithDefault(msg, 6, ""),
    prizeDurationDays: jspb.Message.getFieldWithDefault(msg, 7, 0),
    prizeDurationHours: jspb.Message.getFieldWithDefault(msg, 8, 0),
    typeId: jspb.Message.getFieldWithDefault(msg, 9, 0),
    ticketsRequired: jspb.Message.getFieldWithDefault(msg, 10, 0),
    timezone: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    scheduledOn: jspb.Message.getFieldWithDefault(msg, 12, 0),
    scheduledOff: jspb.Message.getFieldWithDefault(msg, 13, 0),
    isRepeat: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    repeatedOnList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    status: jspb.Message.getFieldWithDefault(msg, 16, 0),
    statusProgress: jspb.Message.getFieldWithDefault(msg, 17, 0),
    ticketsCollected: jspb.Message.getFieldWithDefault(msg, 18, 0),
    tourId: jspb.Message.getFieldWithDefault(msg, 19, 0),
    tourTitle: jspb.Message.getFieldWithDefault(msg, 20, ""),
    setId: jspb.Message.getFieldWithDefault(msg, 21, 0),
    setTitle: jspb.Message.getFieldWithDefault(msg, 22, ""),
    gameId: jspb.Message.getFieldWithDefault(msg, 23, 0),
    gameTitle: jspb.Message.getFieldWithDefault(msg, 24, ""),
    gameSubtitle: jspb.Message.getFieldWithDefault(msg, 25, ""),
    gameImgUrl: jspb.Message.getFieldWithDefault(msg, 26, ""),
    gameContent: jspb.Message.getFieldWithDefault(msg, 27, ""),
    tsgId: jspb.Message.getFieldWithDefault(msg, 28, 0),
    gameDurationDays: jspb.Message.getFieldWithDefault(msg, 29, 0),
    gameDurationHours: jspb.Message.getFieldWithDefault(msg, 30, 0),
    gameDurationMinutes: jspb.Message.getFieldWithDefault(msg, 31, 0),
    groupId: jspb.Message.getFieldWithDefault(msg, 32, 0),
    startTimestamp: jspb.Message.getFieldWithDefault(msg, 33, 0),
    endTimestamp: jspb.Message.getFieldWithDefault(msg, 34, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.PrizeTodayDetail}
 */
proto.adminapi.esm.PrizeTodayDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.PrizeTodayDetail;
  return proto.adminapi.esm.PrizeTodayDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.PrizeTodayDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.PrizeTodayDetail}
 */
proto.adminapi.esm.PrizeTodayDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentGameId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrizeId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrizeTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrizeSubtitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrizeImgUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrizeContent(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrizeDurationDays(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrizeDurationHours(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTicketsRequired(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimezone(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScheduledOn(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScheduledOff(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRepeat(value);
      break;
    case 15:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setRepeatedOnList(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatusProgress(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTicketsCollected(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTourId(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setTourTitle(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSetId(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setSetTitle(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameId(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameTitle(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameSubtitle(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameImgUrl(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameContent(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTsgId(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGameDurationDays(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGameDurationHours(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGameDurationMinutes(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupId(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTimestamp(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.PrizeTodayDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.PrizeTodayDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.PrizeTodayDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentGameId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPrizeId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPrizeTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrizeSubtitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPrizeImgUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPrizeContent();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPrizeDurationDays();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getPrizeDurationHours();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getTicketsRequired();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getTimezone();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getScheduledOn();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getScheduledOff();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getIsRepeat();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getRepeatedOnList();
  if (f.length > 0) {
    writer.writePackedInt32(
      15,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getStatusProgress();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getTicketsCollected();
  if (f !== 0) {
    writer.writeInt64(
      18,
      f
    );
  }
  f = message.getTourId();
  if (f !== 0) {
    writer.writeInt64(
      19,
      f
    );
  }
  f = message.getTourTitle();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getSetId();
  if (f !== 0) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = message.getSetTitle();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getGameId();
  if (f !== 0) {
    writer.writeInt64(
      23,
      f
    );
  }
  f = message.getGameTitle();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getGameSubtitle();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getGameImgUrl();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getGameContent();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getTsgId();
  if (f !== 0) {
    writer.writeInt64(
      28,
      f
    );
  }
  f = message.getGameDurationDays();
  if (f !== 0) {
    writer.writeInt32(
      29,
      f
    );
  }
  f = message.getGameDurationHours();
  if (f !== 0) {
    writer.writeInt32(
      30,
      f
    );
  }
  f = message.getGameDurationMinutes();
  if (f !== 0) {
    writer.writeInt32(
      31,
      f
    );
  }
  f = message.getGroupId();
  if (f !== 0) {
    writer.writeInt32(
      32,
      f
    );
  }
  f = message.getStartTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      33,
      f
    );
  }
  f = message.getEndTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      34,
      f
    );
  }
};


/**
 * optional int64 current_game_id = 1;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getCurrentGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setCurrentGameId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 prize_id = 2;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getPrizeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setPrizeId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string prize_title = 3;
 * @return {string}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getPrizeTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setPrizeTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string prize_subtitle = 4;
 * @return {string}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getPrizeSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setPrizeSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string prize_img_url = 5;
 * @return {string}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getPrizeImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setPrizeImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string prize_content = 6;
 * @return {string}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getPrizeContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setPrizeContent = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 prize_duration_days = 7;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getPrizeDurationDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setPrizeDurationDays = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 prize_duration_hours = 8;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getPrizeDurationHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setPrizeDurationHours = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 type_id = 9;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 tickets_required = 10;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getTicketsRequired = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setTicketsRequired = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional double timezone = 11;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getTimezone = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setTimezone = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional int64 scheduled_on = 12;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getScheduledOn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setScheduledOn = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 scheduled_off = 13;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getScheduledOff = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setScheduledOff = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool is_repeat = 14;
 * @return {boolean}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getIsRepeat = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setIsRepeat = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * repeated int32 repeated_on = 15;
 * @return {!Array<number>}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getRepeatedOnList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setRepeatedOnList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.addRepeatedOn = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.clearRepeatedOnList = function() {
  return this.setRepeatedOnList([]);
};


/**
 * optional int32 status = 16;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 status_progress = 17;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getStatusProgress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setStatusProgress = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int64 tickets_collected = 18;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getTicketsCollected = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setTicketsCollected = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int64 tour_id = 19;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getTourId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setTourId = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional string tour_title = 20;
 * @return {string}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getTourTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setTourTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional int64 set_id = 21;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getSetId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setSetId = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional string set_title = 22;
 * @return {string}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getSetTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setSetTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional int64 game_id = 23;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setGameId = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional string game_title = 24;
 * @return {string}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getGameTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setGameTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string game_subtitle = 25;
 * @return {string}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getGameSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setGameSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string game_img_url = 26;
 * @return {string}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getGameImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setGameImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string game_content = 27;
 * @return {string}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getGameContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setGameContent = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional int64 tsg_id = 28;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getTsgId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setTsgId = function(value) {
  return jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional int32 game_duration_days = 29;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getGameDurationDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setGameDurationDays = function(value) {
  return jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional int32 game_duration_hours = 30;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getGameDurationHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setGameDurationHours = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * optional int32 game_duration_minutes = 31;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getGameDurationMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setGameDurationMinutes = function(value) {
  return jspb.Message.setProto3IntField(this, 31, value);
};


/**
 * optional int32 group_id = 32;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getGroupId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional int64 start_timestamp = 33;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getStartTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setStartTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * optional int64 end_timestamp = 34;
 * @return {number}
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.getEndTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTodayDetail} returns this
 */
proto.adminapi.esm.PrizeTodayDetail.prototype.setEndTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 34, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetPrizeCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetPrizeCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetPrizeCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetPrizeCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetPrizeCountRequest}
 */
proto.adminapi.esm.GetPrizeCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetPrizeCountRequest;
  return proto.adminapi.esm.GetPrizeCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetPrizeCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetPrizeCountRequest}
 */
proto.adminapi.esm.GetPrizeCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetPrizeCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetPrizeCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetPrizeCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetPrizeCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetPrizeCountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetPrizeCountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetPrizeCountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetPrizeCountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.adminapi.esm.PrizeCount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetPrizeCountResponse}
 */
proto.adminapi.esm.GetPrizeCountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetPrizeCountResponse;
  return proto.adminapi.esm.GetPrizeCountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetPrizeCountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetPrizeCountResponse}
 */
proto.adminapi.esm.GetPrizeCountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.PrizeCount;
      reader.readMessage(value,proto.adminapi.esm.PrizeCount.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetPrizeCountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetPrizeCountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetPrizeCountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetPrizeCountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.adminapi.esm.PrizeCount.serializeBinaryToWriter
    );
  }
};


/**
 * optional PrizeCount result = 1;
 * @return {?proto.adminapi.esm.PrizeCount}
 */
proto.adminapi.esm.GetPrizeCountResponse.prototype.getResult = function() {
  return /** @type{?proto.adminapi.esm.PrizeCount} */ (
    jspb.Message.getWrapperField(this, proto.adminapi.esm.PrizeCount, 1));
};


/**
 * @param {?proto.adminapi.esm.PrizeCount|undefined} value
 * @return {!proto.adminapi.esm.GetPrizeCountResponse} returns this
*/
proto.adminapi.esm.GetPrizeCountResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.adminapi.esm.GetPrizeCountResponse} returns this
 */
proto.adminapi.esm.GetPrizeCountResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.adminapi.esm.GetPrizeCountResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.PrizeCount.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.PrizeCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.PrizeCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.PrizeCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    draft: jspb.Message.getFieldWithDefault(msg, 1, 0),
    published: jspb.Message.getFieldWithDefault(msg, 2, 0),
    archived: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.PrizeCount}
 */
proto.adminapi.esm.PrizeCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.PrizeCount;
  return proto.adminapi.esm.PrizeCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.PrizeCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.PrizeCount}
 */
proto.adminapi.esm.PrizeCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDraft(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPublished(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setArchived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.PrizeCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.PrizeCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.PrizeCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.PrizeCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDraft();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPublished();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getArchived();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 draft = 1;
 * @return {number}
 */
proto.adminapi.esm.PrizeCount.prototype.getDraft = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeCount} returns this
 */
proto.adminapi.esm.PrizeCount.prototype.setDraft = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 published = 2;
 * @return {number}
 */
proto.adminapi.esm.PrizeCount.prototype.getPublished = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeCount} returns this
 */
proto.adminapi.esm.PrizeCount.prototype.setPublished = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 archived = 3;
 * @return {number}
 */
proto.adminapi.esm.PrizeCount.prototype.getArchived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeCount} returns this
 */
proto.adminapi.esm.PrizeCount.prototype.setArchived = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListPrizeTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListPrizeTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListPrizeTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListPrizeTypeRequest}
 */
proto.adminapi.esm.ListPrizeTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListPrizeTypeRequest;
  return proto.adminapi.esm.ListPrizeTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListPrizeTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListPrizeTypeRequest}
 */
proto.adminapi.esm.ListPrizeTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListPrizeTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListPrizeTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListPrizeTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListPrizeTypeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListPrizeTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListPrizeTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListPrizeTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.PrizeTypeDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListPrizeTypeResponse}
 */
proto.adminapi.esm.ListPrizeTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListPrizeTypeResponse;
  return proto.adminapi.esm.ListPrizeTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListPrizeTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListPrizeTypeResponse}
 */
proto.adminapi.esm.ListPrizeTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.PrizeTypeDetail;
      reader.readMessage(value,proto.adminapi.esm.PrizeTypeDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListPrizeTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListPrizeTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListPrizeTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.PrizeTypeDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PrizeTypeDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.PrizeTypeDetail>}
 */
proto.adminapi.esm.ListPrizeTypeResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.PrizeTypeDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.PrizeTypeDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.PrizeTypeDetail>} value
 * @return {!proto.adminapi.esm.ListPrizeTypeResponse} returns this
*/
proto.adminapi.esm.ListPrizeTypeResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.PrizeTypeDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.PrizeTypeDetail}
 */
proto.adminapi.esm.ListPrizeTypeResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.PrizeTypeDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListPrizeTypeResponse} returns this
 */
proto.adminapi.esm.ListPrizeTypeResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.PrizeTypeDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.PrizeTypeDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.PrizeTypeDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.PrizeTypeDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.PrizeTypeDetail}
 */
proto.adminapi.esm.PrizeTypeDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.PrizeTypeDetail;
  return proto.adminapi.esm.PrizeTypeDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.PrizeTypeDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.PrizeTypeDetail}
 */
proto.adminapi.esm.PrizeTypeDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.PrizeTypeDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.PrizeTypeDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.PrizeTypeDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.PrizeTypeDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.adminapi.esm.PrizeTypeDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTypeDetail} returns this
 */
proto.adminapi.esm.PrizeTypeDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.PrizeTypeDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeTypeDetail} returns this
 */
proto.adminapi.esm.PrizeTypeDetail.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddPrizeTourRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddPrizeTourRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddPrizeTourRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddPrizeTourRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    prizeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tourId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddPrizeTourRequest}
 */
proto.adminapi.esm.AddPrizeTourRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddPrizeTourRequest;
  return proto.adminapi.esm.AddPrizeTourRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddPrizeTourRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddPrizeTourRequest}
 */
proto.adminapi.esm.AddPrizeTourRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrizeId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTourId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddPrizeTourRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddPrizeTourRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddPrizeTourRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddPrizeTourRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrizeId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTourId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 prize_id = 1;
 * @return {number}
 */
proto.adminapi.esm.AddPrizeTourRequest.prototype.getPrizeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddPrizeTourRequest} returns this
 */
proto.adminapi.esm.AddPrizeTourRequest.prototype.setPrizeId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 tour_id = 2;
 * @return {number}
 */
proto.adminapi.esm.AddPrizeTourRequest.prototype.getTourId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddPrizeTourRequest} returns this
 */
proto.adminapi.esm.AddPrizeTourRequest.prototype.setTourId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddPrizeTourResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddPrizeTourResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddPrizeTourResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddPrizeTourResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddPrizeTourResponse}
 */
proto.adminapi.esm.AddPrizeTourResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddPrizeTourResponse;
  return proto.adminapi.esm.AddPrizeTourResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddPrizeTourResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddPrizeTourResponse}
 */
proto.adminapi.esm.AddPrizeTourResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddPrizeTourResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddPrizeTourResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddPrizeTourResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddPrizeTourResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.AddPrizeTourResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddPrizeTourResponse} returns this
 */
proto.adminapi.esm.AddPrizeTourResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeletePrizeTourRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeletePrizeTourRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeletePrizeTourRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeletePrizeTourRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeletePrizeTourRequest}
 */
proto.adminapi.esm.DeletePrizeTourRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeletePrizeTourRequest;
  return proto.adminapi.esm.DeletePrizeTourRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeletePrizeTourRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeletePrizeTourRequest}
 */
proto.adminapi.esm.DeletePrizeTourRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeletePrizeTourRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeletePrizeTourRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeletePrizeTourRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeletePrizeTourRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.DeletePrizeTourRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.DeletePrizeTourRequest} returns this
 */
proto.adminapi.esm.DeletePrizeTourRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeletePrizeTourResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeletePrizeTourResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeletePrizeTourResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeletePrizeTourResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeletePrizeTourResponse}
 */
proto.adminapi.esm.DeletePrizeTourResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeletePrizeTourResponse;
  return proto.adminapi.esm.DeletePrizeTourResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeletePrizeTourResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeletePrizeTourResponse}
 */
proto.adminapi.esm.DeletePrizeTourResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeletePrizeTourResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeletePrizeTourResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeletePrizeTourResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeletePrizeTourResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.DeletePrizeTourResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.DeletePrizeTourResponse} returns this
 */
proto.adminapi.esm.DeletePrizeTourResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListPrizeTourRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListPrizeTourRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListPrizeTourRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeTourRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListPrizeTourRequest}
 */
proto.adminapi.esm.ListPrizeTourRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListPrizeTourRequest;
  return proto.adminapi.esm.ListPrizeTourRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListPrizeTourRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListPrizeTourRequest}
 */
proto.adminapi.esm.ListPrizeTourRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListPrizeTourRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListPrizeTourRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListPrizeTourRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeTourRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.ListPrizeTourRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListPrizeTourRequest} returns this
 */
proto.adminapi.esm.ListPrizeTourRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListPrizeTourResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListPrizeTourResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListPrizeTourResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListPrizeTourResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeTourResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.PrizeTourDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListPrizeTourResponse}
 */
proto.adminapi.esm.ListPrizeTourResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListPrizeTourResponse;
  return proto.adminapi.esm.ListPrizeTourResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListPrizeTourResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListPrizeTourResponse}
 */
proto.adminapi.esm.ListPrizeTourResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.PrizeTourDetail;
      reader.readMessage(value,proto.adminapi.esm.PrizeTourDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListPrizeTourResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListPrizeTourResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListPrizeTourResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizeTourResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.PrizeTourDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PrizeTourDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.PrizeTourDetail>}
 */
proto.adminapi.esm.ListPrizeTourResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.PrizeTourDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.PrizeTourDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.PrizeTourDetail>} value
 * @return {!proto.adminapi.esm.ListPrizeTourResponse} returns this
*/
proto.adminapi.esm.ListPrizeTourResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.PrizeTourDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.PrizeTourDetail}
 */
proto.adminapi.esm.ListPrizeTourResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.PrizeTourDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListPrizeTourResponse} returns this
 */
proto.adminapi.esm.ListPrizeTourResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.PrizeTourDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.PrizeTourDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.PrizeTourDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.PrizeTourDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    prizeId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tourId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tourTitle: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.PrizeTourDetail}
 */
proto.adminapi.esm.PrizeTourDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.PrizeTourDetail;
  return proto.adminapi.esm.PrizeTourDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.PrizeTourDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.PrizeTourDetail}
 */
proto.adminapi.esm.PrizeTourDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrizeId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTourId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTourTitle(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.PrizeTourDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.PrizeTourDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.PrizeTourDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.PrizeTourDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPrizeId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTourId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTourTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.PrizeTourDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTourDetail} returns this
 */
proto.adminapi.esm.PrizeTourDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 prize_id = 2;
 * @return {number}
 */
proto.adminapi.esm.PrizeTourDetail.prototype.getPrizeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTourDetail} returns this
 */
proto.adminapi.esm.PrizeTourDetail.prototype.setPrizeId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 tour_id = 3;
 * @return {number}
 */
proto.adminapi.esm.PrizeTourDetail.prototype.getTourId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTourDetail} returns this
 */
proto.adminapi.esm.PrizeTourDetail.prototype.setTourId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string tour_title = 4;
 * @return {string}
 */
proto.adminapi.esm.PrizeTourDetail.prototype.getTourTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.PrizeTourDetail} returns this
 */
proto.adminapi.esm.PrizeTourDetail.prototype.setTourTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 status = 5;
 * @return {number}
 */
proto.adminapi.esm.PrizeTourDetail.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizeTourDetail} returns this
 */
proto.adminapi.esm.PrizeTourDetail.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListPrizePoolRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListPrizePoolRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListPrizePoolRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizePoolRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListPrizePoolRequest}
 */
proto.adminapi.esm.ListPrizePoolRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListPrizePoolRequest;
  return proto.adminapi.esm.ListPrizePoolRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListPrizePoolRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListPrizePoolRequest}
 */
proto.adminapi.esm.ListPrizePoolRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListPrizePoolRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListPrizePoolRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListPrizePoolRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizePoolRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 user_id = 1;
 * @return {number}
 */
proto.adminapi.esm.ListPrizePoolRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListPrizePoolRequest} returns this
 */
proto.adminapi.esm.ListPrizePoolRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListPrizePoolResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListPrizePoolResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListPrizePoolResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListPrizePoolResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizePoolResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.PrizePoolDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListPrizePoolResponse}
 */
proto.adminapi.esm.ListPrizePoolResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListPrizePoolResponse;
  return proto.adminapi.esm.ListPrizePoolResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListPrizePoolResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListPrizePoolResponse}
 */
proto.adminapi.esm.ListPrizePoolResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.PrizePoolDetail;
      reader.readMessage(value,proto.adminapi.esm.PrizePoolDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListPrizePoolResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListPrizePoolResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListPrizePoolResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListPrizePoolResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.PrizePoolDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PrizePoolDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.PrizePoolDetail>}
 */
proto.adminapi.esm.ListPrizePoolResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.PrizePoolDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.PrizePoolDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.PrizePoolDetail>} value
 * @return {!proto.adminapi.esm.ListPrizePoolResponse} returns this
*/
proto.adminapi.esm.ListPrizePoolResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.PrizePoolDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.PrizePoolDetail}
 */
proto.adminapi.esm.ListPrizePoolResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.PrizePoolDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListPrizePoolResponse} returns this
 */
proto.adminapi.esm.ListPrizePoolResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.PrizePoolDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.PrizePoolDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.PrizePoolDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.PrizePoolDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    prizeId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    gameId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    winFrom: jspb.Message.getFieldWithDefault(msg, 4, 0),
    tickets: jspb.Message.getFieldWithDefault(msg, 5, 0),
    createdOn: jspb.Message.getFieldWithDefault(msg, 6, 0),
    isClosed: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.PrizePoolDetail}
 */
proto.adminapi.esm.PrizePoolDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.PrizePoolDetail;
  return proto.adminapi.esm.PrizePoolDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.PrizePoolDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.PrizePoolDetail}
 */
proto.adminapi.esm.PrizePoolDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrizeId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWinFrom(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTickets(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedOn(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsClosed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.PrizePoolDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.PrizePoolDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.PrizePoolDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.PrizePoolDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPrizeId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getGameId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getWinFrom();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTickets();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCreatedOn();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getIsClosed();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.PrizePoolDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizePoolDetail} returns this
 */
proto.adminapi.esm.PrizePoolDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 prize_id = 2;
 * @return {number}
 */
proto.adminapi.esm.PrizePoolDetail.prototype.getPrizeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizePoolDetail} returns this
 */
proto.adminapi.esm.PrizePoolDetail.prototype.setPrizeId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 game_id = 3;
 * @return {number}
 */
proto.adminapi.esm.PrizePoolDetail.prototype.getGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizePoolDetail} returns this
 */
proto.adminapi.esm.PrizePoolDetail.prototype.setGameId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 win_from = 4;
 * @return {number}
 */
proto.adminapi.esm.PrizePoolDetail.prototype.getWinFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizePoolDetail} returns this
 */
proto.adminapi.esm.PrizePoolDetail.prototype.setWinFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 tickets = 5;
 * @return {number}
 */
proto.adminapi.esm.PrizePoolDetail.prototype.getTickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizePoolDetail} returns this
 */
proto.adminapi.esm.PrizePoolDetail.prototype.setTickets = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 created_on = 6;
 * @return {number}
 */
proto.adminapi.esm.PrizePoolDetail.prototype.getCreatedOn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.PrizePoolDetail} returns this
 */
proto.adminapi.esm.PrizePoolDetail.prototype.setCreatedOn = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool is_closed = 7;
 * @return {boolean}
 */
proto.adminapi.esm.PrizePoolDetail.prototype.getIsClosed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.PrizePoolDetail} returns this
 */
proto.adminapi.esm.PrizePoolDetail.prototype.setIsClosed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddRankRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddRankRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddRankRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddRankRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    exp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    gem: jspb.Message.getFieldWithDefault(msg, 4, 0),
    multiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddRankRequest}
 */
proto.adminapi.esm.AddRankRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddRankRequest;
  return proto.adminapi.esm.AddRankRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddRankRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddRankRequest}
 */
proto.adminapi.esm.AddRankRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGem(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMultiplier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddRankRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddRankRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddRankRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddRankRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExp();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getGem();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.AddRankRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddRankRequest} returns this
 */
proto.adminapi.esm.AddRankRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.AddRankRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddRankRequest} returns this
 */
proto.adminapi.esm.AddRankRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 exp = 3;
 * @return {number}
 */
proto.adminapi.esm.AddRankRequest.prototype.getExp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddRankRequest} returns this
 */
proto.adminapi.esm.AddRankRequest.prototype.setExp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 gem = 4;
 * @return {number}
 */
proto.adminapi.esm.AddRankRequest.prototype.getGem = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddRankRequest} returns this
 */
proto.adminapi.esm.AddRankRequest.prototype.setGem = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double multiplier = 5;
 * @return {number}
 */
proto.adminapi.esm.AddRankRequest.prototype.getMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddRankRequest} returns this
 */
proto.adminapi.esm.AddRankRequest.prototype.setMultiplier = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddRankResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddRankResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddRankResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddRankResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddRankResponse}
 */
proto.adminapi.esm.AddRankResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddRankResponse;
  return proto.adminapi.esm.AddRankResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddRankResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddRankResponse}
 */
proto.adminapi.esm.AddRankResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddRankResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddRankResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddRankResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddRankResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.AddRankResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddRankResponse} returns this
 */
proto.adminapi.esm.AddRankResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateRankRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateRankRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateRankRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateRankRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    exp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    gem: jspb.Message.getFieldWithDefault(msg, 4, 0),
    multiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateRankRequest}
 */
proto.adminapi.esm.UpdateRankRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateRankRequest;
  return proto.adminapi.esm.UpdateRankRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateRankRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateRankRequest}
 */
proto.adminapi.esm.UpdateRankRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGem(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMultiplier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateRankRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateRankRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateRankRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateRankRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExp();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getGem();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.UpdateRankRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateRankRequest} returns this
 */
proto.adminapi.esm.UpdateRankRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.UpdateRankRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateRankRequest} returns this
 */
proto.adminapi.esm.UpdateRankRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 exp = 3;
 * @return {number}
 */
proto.adminapi.esm.UpdateRankRequest.prototype.getExp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateRankRequest} returns this
 */
proto.adminapi.esm.UpdateRankRequest.prototype.setExp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 gem = 4;
 * @return {number}
 */
proto.adminapi.esm.UpdateRankRequest.prototype.getGem = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateRankRequest} returns this
 */
proto.adminapi.esm.UpdateRankRequest.prototype.setGem = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double multiplier = 5;
 * @return {number}
 */
proto.adminapi.esm.UpdateRankRequest.prototype.getMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateRankRequest} returns this
 */
proto.adminapi.esm.UpdateRankRequest.prototype.setMultiplier = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateRankResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateRankResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateRankResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateRankResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateRankResponse}
 */
proto.adminapi.esm.UpdateRankResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateRankResponse;
  return proto.adminapi.esm.UpdateRankResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateRankResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateRankResponse}
 */
proto.adminapi.esm.UpdateRankResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateRankResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateRankResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateRankResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateRankResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.UpdateRankResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateRankResponse} returns this
 */
proto.adminapi.esm.UpdateRankResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteRankRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteRankRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteRankRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteRankRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteRankRequest}
 */
proto.adminapi.esm.DeleteRankRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteRankRequest;
  return proto.adminapi.esm.DeleteRankRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteRankRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteRankRequest}
 */
proto.adminapi.esm.DeleteRankRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteRankRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteRankRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteRankRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteRankRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.DeleteRankRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.DeleteRankRequest} returns this
 */
proto.adminapi.esm.DeleteRankRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteRankResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteRankResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteRankResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteRankResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteRankResponse}
 */
proto.adminapi.esm.DeleteRankResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteRankResponse;
  return proto.adminapi.esm.DeleteRankResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteRankResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteRankResponse}
 */
proto.adminapi.esm.DeleteRankResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteRankResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteRankResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteRankResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteRankResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.DeleteRankResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.DeleteRankResponse} returns this
 */
proto.adminapi.esm.DeleteRankResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListRankRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListRankRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListRankRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListRankRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListRankRequest}
 */
proto.adminapi.esm.ListRankRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListRankRequest;
  return proto.adminapi.esm.ListRankRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListRankRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListRankRequest}
 */
proto.adminapi.esm.ListRankRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListRankRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListRankRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListRankRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListRankRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListRankResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListRankResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListRankResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListRankResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListRankResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.RankDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListRankResponse}
 */
proto.adminapi.esm.ListRankResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListRankResponse;
  return proto.adminapi.esm.ListRankResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListRankResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListRankResponse}
 */
proto.adminapi.esm.ListRankResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.RankDetail;
      reader.readMessage(value,proto.adminapi.esm.RankDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListRankResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListRankResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListRankResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListRankResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.RankDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RankDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.RankDetail>}
 */
proto.adminapi.esm.ListRankResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.RankDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.RankDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.RankDetail>} value
 * @return {!proto.adminapi.esm.ListRankResponse} returns this
*/
proto.adminapi.esm.ListRankResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.RankDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.RankDetail}
 */
proto.adminapi.esm.ListRankResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.RankDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListRankResponse} returns this
 */
proto.adminapi.esm.ListRankResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.RankDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.RankDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.RankDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.RankDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    exp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    gem: jspb.Message.getFieldWithDefault(msg, 4, 0),
    multiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.RankDetail}
 */
proto.adminapi.esm.RankDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.RankDetail;
  return proto.adminapi.esm.RankDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.RankDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.RankDetail}
 */
proto.adminapi.esm.RankDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGem(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMultiplier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.RankDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.RankDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.RankDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.RankDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExp();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getGem();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.RankDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.RankDetail} returns this
 */
proto.adminapi.esm.RankDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.RankDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.RankDetail} returns this
 */
proto.adminapi.esm.RankDetail.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 exp = 3;
 * @return {number}
 */
proto.adminapi.esm.RankDetail.prototype.getExp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.RankDetail} returns this
 */
proto.adminapi.esm.RankDetail.prototype.setExp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 gem = 4;
 * @return {number}
 */
proto.adminapi.esm.RankDetail.prototype.getGem = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.RankDetail} returns this
 */
proto.adminapi.esm.RankDetail.prototype.setGem = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double multiplier = 5;
 * @return {number}
 */
proto.adminapi.esm.RankDetail.prototype.getMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.RankDetail} returns this
 */
proto.adminapi.esm.RankDetail.prototype.setMultiplier = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListBuyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListBuyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListBuyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListBuyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    searchTitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListBuyRequest}
 */
proto.adminapi.esm.ListBuyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListBuyRequest;
  return proto.adminapi.esm.ListBuyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListBuyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListBuyRequest}
 */
proto.adminapi.esm.ListBuyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchTitle(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListBuyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListBuyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListBuyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListBuyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSearchTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.adminapi.esm.ListBuyRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListBuyRequest} returns this
 */
proto.adminapi.esm.ListBuyRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.adminapi.esm.ListBuyRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListBuyRequest} returns this
 */
proto.adminapi.esm.ListBuyRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string search_title = 3;
 * @return {string}
 */
proto.adminapi.esm.ListBuyRequest.prototype.getSearchTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ListBuyRequest} returns this
 */
proto.adminapi.esm.ListBuyRequest.prototype.setSearchTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 status = 4;
 * @return {number}
 */
proto.adminapi.esm.ListBuyRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListBuyRequest} returns this
 */
proto.adminapi.esm.ListBuyRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListBuyResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListBuyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListBuyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListBuyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListBuyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.BuyDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListBuyResponse}
 */
proto.adminapi.esm.ListBuyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListBuyResponse;
  return proto.adminapi.esm.ListBuyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListBuyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListBuyResponse}
 */
proto.adminapi.esm.ListBuyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.BuyDetail;
      reader.readMessage(value,proto.adminapi.esm.BuyDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListBuyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListBuyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListBuyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListBuyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.BuyDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BuyDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.BuyDetail>}
 */
proto.adminapi.esm.ListBuyResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.BuyDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.BuyDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.BuyDetail>} value
 * @return {!proto.adminapi.esm.ListBuyResponse} returns this
*/
proto.adminapi.esm.ListBuyResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.BuyDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.BuyDetail}
 */
proto.adminapi.esm.ListBuyResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.BuyDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListBuyResponse} returns this
 */
proto.adminapi.esm.ListBuyResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.BuyDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.BuyDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.BuyDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.BuyDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    itemTypeId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    itemId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    itemTitle: jspb.Message.getFieldWithDefault(msg, 4, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    userNickName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    userEmail: jspb.Message.getFieldWithDefault(msg, 7, ""),
    paymentId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    createdOn: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.BuyDetail}
 */
proto.adminapi.esm.BuyDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.BuyDetail;
  return proto.adminapi.esm.BuyDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.BuyDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.BuyDetail}
 */
proto.adminapi.esm.BuyDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setItemTypeId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setItemId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemTitle(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserNickName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserEmail(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentId(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedOn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.BuyDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.BuyDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.BuyDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.BuyDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getItemTypeId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getItemId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getItemTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getUserNickName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUserEmail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPaymentId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getCreatedOn();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.BuyDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.BuyDetail} returns this
 */
proto.adminapi.esm.BuyDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 item_type_id = 2;
 * @return {number}
 */
proto.adminapi.esm.BuyDetail.prototype.getItemTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.BuyDetail} returns this
 */
proto.adminapi.esm.BuyDetail.prototype.setItemTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 item_id = 3;
 * @return {number}
 */
proto.adminapi.esm.BuyDetail.prototype.getItemId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.BuyDetail} returns this
 */
proto.adminapi.esm.BuyDetail.prototype.setItemId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string item_title = 4;
 * @return {string}
 */
proto.adminapi.esm.BuyDetail.prototype.getItemTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.BuyDetail} returns this
 */
proto.adminapi.esm.BuyDetail.prototype.setItemTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 user_id = 5;
 * @return {number}
 */
proto.adminapi.esm.BuyDetail.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.BuyDetail} returns this
 */
proto.adminapi.esm.BuyDetail.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string user_nick_name = 6;
 * @return {string}
 */
proto.adminapi.esm.BuyDetail.prototype.getUserNickName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.BuyDetail} returns this
 */
proto.adminapi.esm.BuyDetail.prototype.setUserNickName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string user_email = 7;
 * @return {string}
 */
proto.adminapi.esm.BuyDetail.prototype.getUserEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.BuyDetail} returns this
 */
proto.adminapi.esm.BuyDetail.prototype.setUserEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string payment_id = 8;
 * @return {string}
 */
proto.adminapi.esm.BuyDetail.prototype.getPaymentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.BuyDetail} returns this
 */
proto.adminapi.esm.BuyDetail.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional double price = 9;
 * @return {number}
 */
proto.adminapi.esm.BuyDetail.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.BuyDetail} returns this
 */
proto.adminapi.esm.BuyDetail.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional int64 created_on = 10;
 * @return {number}
 */
proto.adminapi.esm.BuyDetail.prototype.getCreatedOn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.BuyDetail} returns this
 */
proto.adminapi.esm.BuyDetail.prototype.setCreatedOn = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetBuyCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetBuyCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetBuyCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetBuyCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetBuyCountRequest}
 */
proto.adminapi.esm.GetBuyCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetBuyCountRequest;
  return proto.adminapi.esm.GetBuyCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetBuyCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetBuyCountRequest}
 */
proto.adminapi.esm.GetBuyCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetBuyCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetBuyCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetBuyCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetBuyCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetBuyCountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetBuyCountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetBuyCountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetBuyCountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.adminapi.esm.BuyCount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetBuyCountResponse}
 */
proto.adminapi.esm.GetBuyCountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetBuyCountResponse;
  return proto.adminapi.esm.GetBuyCountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetBuyCountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetBuyCountResponse}
 */
proto.adminapi.esm.GetBuyCountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.BuyCount;
      reader.readMessage(value,proto.adminapi.esm.BuyCount.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetBuyCountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetBuyCountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetBuyCountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetBuyCountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.adminapi.esm.BuyCount.serializeBinaryToWriter
    );
  }
};


/**
 * optional BuyCount result = 1;
 * @return {?proto.adminapi.esm.BuyCount}
 */
proto.adminapi.esm.GetBuyCountResponse.prototype.getResult = function() {
  return /** @type{?proto.adminapi.esm.BuyCount} */ (
    jspb.Message.getWrapperField(this, proto.adminapi.esm.BuyCount, 1));
};


/**
 * @param {?proto.adminapi.esm.BuyCount|undefined} value
 * @return {!proto.adminapi.esm.GetBuyCountResponse} returns this
*/
proto.adminapi.esm.GetBuyCountResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.adminapi.esm.GetBuyCountResponse} returns this
 */
proto.adminapi.esm.GetBuyCountResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.adminapi.esm.GetBuyCountResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.BuyCount.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.BuyCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.BuyCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.BuyCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    subscription: jspb.Message.getFieldWithDefault(msg, 1, 0),
    item: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.BuyCount}
 */
proto.adminapi.esm.BuyCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.BuyCount;
  return proto.adminapi.esm.BuyCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.BuyCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.BuyCount}
 */
proto.adminapi.esm.BuyCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSubscription(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.BuyCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.BuyCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.BuyCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.BuyCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubscription();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getItem();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 subscription = 1;
 * @return {number}
 */
proto.adminapi.esm.BuyCount.prototype.getSubscription = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.BuyCount} returns this
 */
proto.adminapi.esm.BuyCount.prototype.setSubscription = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 item = 2;
 * @return {number}
 */
proto.adminapi.esm.BuyCount.prototype.getItem = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.BuyCount} returns this
 */
proto.adminapi.esm.BuyCount.prototype.setItem = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddSubscriptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddSubscriptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddSubscriptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 2, ""),
    content: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    typeId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    quantity: jspb.Message.getFieldWithDefault(msg, 7, 0),
    oneTimeGem: jspb.Message.getFieldWithDefault(msg, 8, 0),
    oneTimeMultiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    oneTimeIsFirstonly: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    dailyGem: jspb.Message.getFieldWithDefault(msg, 11, 0),
    dailyMultiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    status: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddSubscriptionRequest}
 */
proto.adminapi.esm.AddSubscriptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddSubscriptionRequest;
  return proto.adminapi.esm.AddSubscriptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddSubscriptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddSubscriptionRequest}
 */
proto.adminapi.esm.AddSubscriptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOneTimeGem(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOneTimeMultiplier(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOneTimeIsFirstonly(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDailyGem(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDailyMultiplier(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddSubscriptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddSubscriptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddSubscriptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getOneTimeGem();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getOneTimeMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getOneTimeIsFirstonly();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getDailyGem();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getDailyMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddSubscriptionRequest} returns this
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subtitle = 2;
 * @return {string}
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddSubscriptionRequest} returns this
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string content = 3;
 * @return {string}
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddSubscriptionRequest} returns this
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string img_url = 4;
 * @return {string}
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddSubscriptionRequest} returns this
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 type_id = 5;
 * @return {number}
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddSubscriptionRequest} returns this
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double price = 6;
 * @return {number}
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddSubscriptionRequest} returns this
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional int32 quantity = 7;
 * @return {number}
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddSubscriptionRequest} returns this
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 one_time_gem = 8;
 * @return {number}
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.getOneTimeGem = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddSubscriptionRequest} returns this
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.setOneTimeGem = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional double one_time_multiplier = 9;
 * @return {number}
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.getOneTimeMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddSubscriptionRequest} returns this
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.setOneTimeMultiplier = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional bool one_time_is_firstonly = 10;
 * @return {boolean}
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.getOneTimeIsFirstonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.AddSubscriptionRequest} returns this
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.setOneTimeIsFirstonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional int32 daily_gem = 11;
 * @return {number}
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.getDailyGem = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddSubscriptionRequest} returns this
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.setDailyGem = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional double daily_multiplier = 12;
 * @return {number}
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.getDailyMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddSubscriptionRequest} returns this
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.setDailyMultiplier = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional int32 status = 13;
 * @return {number}
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddSubscriptionRequest} returns this
 */
proto.adminapi.esm.AddSubscriptionRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddSubscriptionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddSubscriptionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddSubscriptionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddSubscriptionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddSubscriptionResponse}
 */
proto.adminapi.esm.AddSubscriptionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddSubscriptionResponse;
  return proto.adminapi.esm.AddSubscriptionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddSubscriptionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddSubscriptionResponse}
 */
proto.adminapi.esm.AddSubscriptionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddSubscriptionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddSubscriptionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddSubscriptionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddSubscriptionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.AddSubscriptionResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddSubscriptionResponse} returns this
 */
proto.adminapi.esm.AddSubscriptionResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateSubscriptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateSubscriptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateSubscriptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    content: jspb.Message.getFieldWithDefault(msg, 4, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    typeId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    quantity: jspb.Message.getFieldWithDefault(msg, 8, 0),
    oneTimeGem: jspb.Message.getFieldWithDefault(msg, 9, 0),
    oneTimeMultiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    oneTimeIsFirstonly: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    dailyGem: jspb.Message.getFieldWithDefault(msg, 12, 0),
    dailyMultiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    status: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateSubscriptionRequest;
  return proto.adminapi.esm.UpdateSubscriptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateSubscriptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOneTimeGem(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOneTimeMultiplier(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOneTimeIsFirstonly(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDailyGem(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDailyMultiplier(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateSubscriptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateSubscriptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateSubscriptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getOneTimeGem();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getOneTimeMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getOneTimeIsFirstonly();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getDailyGem();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getDailyMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest} returns this
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest} returns this
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string subtitle = 3;
 * @return {string}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest} returns this
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string content = 4;
 * @return {string}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest} returns this
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string img_url = 5;
 * @return {string}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest} returns this
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 type_id = 6;
 * @return {number}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest} returns this
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional double price = 7;
 * @return {number}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest} returns this
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional int32 quantity = 8;
 * @return {number}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest} returns this
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 one_time_gem = 9;
 * @return {number}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.getOneTimeGem = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest} returns this
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.setOneTimeGem = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional double one_time_multiplier = 10;
 * @return {number}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.getOneTimeMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest} returns this
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.setOneTimeMultiplier = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional bool one_time_is_firstonly = 11;
 * @return {boolean}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.getOneTimeIsFirstonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest} returns this
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.setOneTimeIsFirstonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional int32 daily_gem = 12;
 * @return {number}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.getDailyGem = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest} returns this
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.setDailyGem = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional double daily_multiplier = 13;
 * @return {number}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.getDailyMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest} returns this
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.setDailyMultiplier = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional int32 status = 14;
 * @return {number}
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateSubscriptionRequest} returns this
 */
proto.adminapi.esm.UpdateSubscriptionRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateSubscriptionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateSubscriptionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateSubscriptionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateSubscriptionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateSubscriptionResponse}
 */
proto.adminapi.esm.UpdateSubscriptionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateSubscriptionResponse;
  return proto.adminapi.esm.UpdateSubscriptionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateSubscriptionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateSubscriptionResponse}
 */
proto.adminapi.esm.UpdateSubscriptionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateSubscriptionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateSubscriptionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateSubscriptionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateSubscriptionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.UpdateSubscriptionResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateSubscriptionResponse} returns this
 */
proto.adminapi.esm.UpdateSubscriptionResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteSubscriptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteSubscriptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteSubscriptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteSubscriptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteSubscriptionRequest}
 */
proto.adminapi.esm.DeleteSubscriptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteSubscriptionRequest;
  return proto.adminapi.esm.DeleteSubscriptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteSubscriptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteSubscriptionRequest}
 */
proto.adminapi.esm.DeleteSubscriptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteSubscriptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteSubscriptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteSubscriptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteSubscriptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.DeleteSubscriptionRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.DeleteSubscriptionRequest} returns this
 */
proto.adminapi.esm.DeleteSubscriptionRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteSubscriptionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteSubscriptionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteSubscriptionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteSubscriptionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteSubscriptionResponse}
 */
proto.adminapi.esm.DeleteSubscriptionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteSubscriptionResponse;
  return proto.adminapi.esm.DeleteSubscriptionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteSubscriptionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteSubscriptionResponse}
 */
proto.adminapi.esm.DeleteSubscriptionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteSubscriptionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteSubscriptionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteSubscriptionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteSubscriptionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.DeleteSubscriptionResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.DeleteSubscriptionResponse} returns this
 */
proto.adminapi.esm.DeleteSubscriptionResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListSubscriptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListSubscriptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListSubscriptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListSubscriptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    searchTitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListSubscriptionRequest}
 */
proto.adminapi.esm.ListSubscriptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListSubscriptionRequest;
  return proto.adminapi.esm.ListSubscriptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListSubscriptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListSubscriptionRequest}
 */
proto.adminapi.esm.ListSubscriptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchTitle(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListSubscriptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListSubscriptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListSubscriptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListSubscriptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSearchTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.adminapi.esm.ListSubscriptionRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListSubscriptionRequest} returns this
 */
proto.adminapi.esm.ListSubscriptionRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.adminapi.esm.ListSubscriptionRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListSubscriptionRequest} returns this
 */
proto.adminapi.esm.ListSubscriptionRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string search_title = 3;
 * @return {string}
 */
proto.adminapi.esm.ListSubscriptionRequest.prototype.getSearchTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ListSubscriptionRequest} returns this
 */
proto.adminapi.esm.ListSubscriptionRequest.prototype.setSearchTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 status = 4;
 * @return {number}
 */
proto.adminapi.esm.ListSubscriptionRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListSubscriptionRequest} returns this
 */
proto.adminapi.esm.ListSubscriptionRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListSubscriptionResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListSubscriptionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListSubscriptionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListSubscriptionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListSubscriptionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.SubscriptionDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListSubscriptionResponse}
 */
proto.adminapi.esm.ListSubscriptionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListSubscriptionResponse;
  return proto.adminapi.esm.ListSubscriptionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListSubscriptionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListSubscriptionResponse}
 */
proto.adminapi.esm.ListSubscriptionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.SubscriptionDetail;
      reader.readMessage(value,proto.adminapi.esm.SubscriptionDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListSubscriptionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListSubscriptionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListSubscriptionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListSubscriptionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.SubscriptionDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SubscriptionDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.SubscriptionDetail>}
 */
proto.adminapi.esm.ListSubscriptionResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.SubscriptionDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.SubscriptionDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.SubscriptionDetail>} value
 * @return {!proto.adminapi.esm.ListSubscriptionResponse} returns this
*/
proto.adminapi.esm.ListSubscriptionResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.SubscriptionDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.SubscriptionDetail}
 */
proto.adminapi.esm.ListSubscriptionResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.SubscriptionDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListSubscriptionResponse} returns this
 */
proto.adminapi.esm.ListSubscriptionResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.SubscriptionDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.SubscriptionDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SubscriptionDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    content: jspb.Message.getFieldWithDefault(msg, 4, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    typeId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    quantity: jspb.Message.getFieldWithDefault(msg, 8, 0),
    oneTimeGem: jspb.Message.getFieldWithDefault(msg, 9, 0),
    oneTimeMultiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    oneTimeIsFirstonly: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    dailyGem: jspb.Message.getFieldWithDefault(msg, 12, 0),
    dailyMultiplier: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    status: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.SubscriptionDetail}
 */
proto.adminapi.esm.SubscriptionDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.SubscriptionDetail;
  return proto.adminapi.esm.SubscriptionDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.SubscriptionDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.SubscriptionDetail}
 */
proto.adminapi.esm.SubscriptionDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTypeId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOneTimeGem(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOneTimeMultiplier(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOneTimeIsFirstonly(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDailyGem(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDailyMultiplier(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.SubscriptionDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.SubscriptionDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SubscriptionDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTypeId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getOneTimeGem();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getOneTimeMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getOneTimeIsFirstonly();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getDailyGem();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getDailyMultiplier();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SubscriptionDetail} returns this
 */
proto.adminapi.esm.SubscriptionDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.SubscriptionDetail} returns this
 */
proto.adminapi.esm.SubscriptionDetail.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string subtitle = 3;
 * @return {string}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.SubscriptionDetail} returns this
 */
proto.adminapi.esm.SubscriptionDetail.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string content = 4;
 * @return {string}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.SubscriptionDetail} returns this
 */
proto.adminapi.esm.SubscriptionDetail.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string img_url = 5;
 * @return {string}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.SubscriptionDetail} returns this
 */
proto.adminapi.esm.SubscriptionDetail.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 type_id = 6;
 * @return {number}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.getTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SubscriptionDetail} returns this
 */
proto.adminapi.esm.SubscriptionDetail.prototype.setTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional double price = 7;
 * @return {number}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SubscriptionDetail} returns this
 */
proto.adminapi.esm.SubscriptionDetail.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional int32 quantity = 8;
 * @return {number}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SubscriptionDetail} returns this
 */
proto.adminapi.esm.SubscriptionDetail.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 one_time_gem = 9;
 * @return {number}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.getOneTimeGem = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SubscriptionDetail} returns this
 */
proto.adminapi.esm.SubscriptionDetail.prototype.setOneTimeGem = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional double one_time_multiplier = 10;
 * @return {number}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.getOneTimeMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SubscriptionDetail} returns this
 */
proto.adminapi.esm.SubscriptionDetail.prototype.setOneTimeMultiplier = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional bool one_time_is_firstonly = 11;
 * @return {boolean}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.getOneTimeIsFirstonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.SubscriptionDetail} returns this
 */
proto.adminapi.esm.SubscriptionDetail.prototype.setOneTimeIsFirstonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional int32 daily_gem = 12;
 * @return {number}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.getDailyGem = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SubscriptionDetail} returns this
 */
proto.adminapi.esm.SubscriptionDetail.prototype.setDailyGem = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional double daily_multiplier = 13;
 * @return {number}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.getDailyMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SubscriptionDetail} returns this
 */
proto.adminapi.esm.SubscriptionDetail.prototype.setDailyMultiplier = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional int32 status = 14;
 * @return {number}
 */
proto.adminapi.esm.SubscriptionDetail.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SubscriptionDetail} returns this
 */
proto.adminapi.esm.SubscriptionDetail.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetSubscriptionCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetSubscriptionCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetSubscriptionCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetSubscriptionCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetSubscriptionCountRequest}
 */
proto.adminapi.esm.GetSubscriptionCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetSubscriptionCountRequest;
  return proto.adminapi.esm.GetSubscriptionCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetSubscriptionCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetSubscriptionCountRequest}
 */
proto.adminapi.esm.GetSubscriptionCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetSubscriptionCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetSubscriptionCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetSubscriptionCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetSubscriptionCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetSubscriptionCountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetSubscriptionCountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetSubscriptionCountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetSubscriptionCountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.adminapi.esm.SubscriptionCount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetSubscriptionCountResponse}
 */
proto.adminapi.esm.GetSubscriptionCountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetSubscriptionCountResponse;
  return proto.adminapi.esm.GetSubscriptionCountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetSubscriptionCountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetSubscriptionCountResponse}
 */
proto.adminapi.esm.GetSubscriptionCountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.SubscriptionCount;
      reader.readMessage(value,proto.adminapi.esm.SubscriptionCount.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetSubscriptionCountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetSubscriptionCountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetSubscriptionCountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetSubscriptionCountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.adminapi.esm.SubscriptionCount.serializeBinaryToWriter
    );
  }
};


/**
 * optional SubscriptionCount result = 1;
 * @return {?proto.adminapi.esm.SubscriptionCount}
 */
proto.adminapi.esm.GetSubscriptionCountResponse.prototype.getResult = function() {
  return /** @type{?proto.adminapi.esm.SubscriptionCount} */ (
    jspb.Message.getWrapperField(this, proto.adminapi.esm.SubscriptionCount, 1));
};


/**
 * @param {?proto.adminapi.esm.SubscriptionCount|undefined} value
 * @return {!proto.adminapi.esm.GetSubscriptionCountResponse} returns this
*/
proto.adminapi.esm.GetSubscriptionCountResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.adminapi.esm.GetSubscriptionCountResponse} returns this
 */
proto.adminapi.esm.GetSubscriptionCountResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.adminapi.esm.GetSubscriptionCountResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.SubscriptionCount.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.SubscriptionCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.SubscriptionCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SubscriptionCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    draft: jspb.Message.getFieldWithDefault(msg, 1, 0),
    published: jspb.Message.getFieldWithDefault(msg, 2, 0),
    archived: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.SubscriptionCount}
 */
proto.adminapi.esm.SubscriptionCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.SubscriptionCount;
  return proto.adminapi.esm.SubscriptionCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.SubscriptionCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.SubscriptionCount}
 */
proto.adminapi.esm.SubscriptionCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDraft(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPublished(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setArchived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.SubscriptionCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.SubscriptionCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.SubscriptionCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SubscriptionCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDraft();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPublished();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getArchived();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 draft = 1;
 * @return {number}
 */
proto.adminapi.esm.SubscriptionCount.prototype.getDraft = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SubscriptionCount} returns this
 */
proto.adminapi.esm.SubscriptionCount.prototype.setDraft = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 published = 2;
 * @return {number}
 */
proto.adminapi.esm.SubscriptionCount.prototype.getPublished = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SubscriptionCount} returns this
 */
proto.adminapi.esm.SubscriptionCount.prototype.setPublished = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 archived = 3;
 * @return {number}
 */
proto.adminapi.esm.SubscriptionCount.prototype.getArchived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SubscriptionCount} returns this
 */
proto.adminapi.esm.SubscriptionCount.prototype.setArchived = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListSubscriptionTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListSubscriptionTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListSubscriptionTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListSubscriptionTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListSubscriptionTypeRequest}
 */
proto.adminapi.esm.ListSubscriptionTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListSubscriptionTypeRequest;
  return proto.adminapi.esm.ListSubscriptionTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListSubscriptionTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListSubscriptionTypeRequest}
 */
proto.adminapi.esm.ListSubscriptionTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListSubscriptionTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListSubscriptionTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListSubscriptionTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListSubscriptionTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListSubscriptionTypeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListSubscriptionTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListSubscriptionTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListSubscriptionTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListSubscriptionTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.SubscriptionTypeDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListSubscriptionTypeResponse}
 */
proto.adminapi.esm.ListSubscriptionTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListSubscriptionTypeResponse;
  return proto.adminapi.esm.ListSubscriptionTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListSubscriptionTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListSubscriptionTypeResponse}
 */
proto.adminapi.esm.ListSubscriptionTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.SubscriptionTypeDetail;
      reader.readMessage(value,proto.adminapi.esm.SubscriptionTypeDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListSubscriptionTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListSubscriptionTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListSubscriptionTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListSubscriptionTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.SubscriptionTypeDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SubscriptionTypeDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.SubscriptionTypeDetail>}
 */
proto.adminapi.esm.ListSubscriptionTypeResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.SubscriptionTypeDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.SubscriptionTypeDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.SubscriptionTypeDetail>} value
 * @return {!proto.adminapi.esm.ListSubscriptionTypeResponse} returns this
*/
proto.adminapi.esm.ListSubscriptionTypeResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.SubscriptionTypeDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.SubscriptionTypeDetail}
 */
proto.adminapi.esm.ListSubscriptionTypeResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.SubscriptionTypeDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListSubscriptionTypeResponse} returns this
 */
proto.adminapi.esm.ListSubscriptionTypeResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.SubscriptionTypeDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.SubscriptionTypeDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.SubscriptionTypeDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SubscriptionTypeDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.SubscriptionTypeDetail}
 */
proto.adminapi.esm.SubscriptionTypeDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.SubscriptionTypeDetail;
  return proto.adminapi.esm.SubscriptionTypeDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.SubscriptionTypeDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.SubscriptionTypeDetail}
 */
proto.adminapi.esm.SubscriptionTypeDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.SubscriptionTypeDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.SubscriptionTypeDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.SubscriptionTypeDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.SubscriptionTypeDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.adminapi.esm.SubscriptionTypeDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.SubscriptionTypeDetail} returns this
 */
proto.adminapi.esm.SubscriptionTypeDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.SubscriptionTypeDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.SubscriptionTypeDetail} returns this
 */
proto.adminapi.esm.SubscriptionTypeDetail.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddTournamentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddTournamentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddTournamentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTournamentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddTournamentRequest}
 */
proto.adminapi.esm.AddTournamentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddTournamentRequest;
  return proto.adminapi.esm.AddTournamentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddTournamentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddTournamentRequest}
 */
proto.adminapi.esm.AddTournamentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddTournamentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddTournamentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddTournamentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTournamentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.adminapi.esm.AddTournamentRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddTournamentRequest} returns this
 */
proto.adminapi.esm.AddTournamentRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 status = 2;
 * @return {number}
 */
proto.adminapi.esm.AddTournamentRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddTournamentRequest} returns this
 */
proto.adminapi.esm.AddTournamentRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddTournamentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddTournamentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddTournamentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTournamentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddTournamentResponse}
 */
proto.adminapi.esm.AddTournamentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddTournamentResponse;
  return proto.adminapi.esm.AddTournamentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddTournamentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddTournamentResponse}
 */
proto.adminapi.esm.AddTournamentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddTournamentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddTournamentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddTournamentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTournamentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.AddTournamentResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddTournamentResponse} returns this
 */
proto.adminapi.esm.AddTournamentResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddTournamentSetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddTournamentSetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddTournamentSetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTournamentSetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    durationDays: jspb.Message.getFieldWithDefault(msg, 2, 0),
    durationHours: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isGroup: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddTournamentSetRequest}
 */
proto.adminapi.esm.AddTournamentSetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddTournamentSetRequest;
  return proto.adminapi.esm.AddTournamentSetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddTournamentSetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddTournamentSetRequest}
 */
proto.adminapi.esm.AddTournamentSetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationDays(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationHours(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddTournamentSetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddTournamentSetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddTournamentSetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTournamentSetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDurationDays();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDurationHours();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getIsGroup();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.adminapi.esm.AddTournamentSetRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddTournamentSetRequest} returns this
 */
proto.adminapi.esm.AddTournamentSetRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 duration_days = 2;
 * @return {number}
 */
proto.adminapi.esm.AddTournamentSetRequest.prototype.getDurationDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddTournamentSetRequest} returns this
 */
proto.adminapi.esm.AddTournamentSetRequest.prototype.setDurationDays = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 duration_hours = 3;
 * @return {number}
 */
proto.adminapi.esm.AddTournamentSetRequest.prototype.getDurationHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddTournamentSetRequest} returns this
 */
proto.adminapi.esm.AddTournamentSetRequest.prototype.setDurationHours = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool is_group = 4;
 * @return {boolean}
 */
proto.adminapi.esm.AddTournamentSetRequest.prototype.getIsGroup = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.AddTournamentSetRequest} returns this
 */
proto.adminapi.esm.AddTournamentSetRequest.prototype.setIsGroup = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddTournamentSetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddTournamentSetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddTournamentSetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTournamentSetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddTournamentSetResponse}
 */
proto.adminapi.esm.AddTournamentSetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddTournamentSetResponse;
  return proto.adminapi.esm.AddTournamentSetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddTournamentSetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddTournamentSetResponse}
 */
proto.adminapi.esm.AddTournamentSetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddTournamentSetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddTournamentSetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddTournamentSetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTournamentSetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.AddTournamentSetResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddTournamentSetResponse} returns this
 */
proto.adminapi.esm.AddTournamentSetResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddTournamentSetGameRuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddTournamentSetGameRuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    setId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gameId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    durationDays: jspb.Message.getFieldWithDefault(msg, 3, 0),
    durationHours: jspb.Message.getFieldWithDefault(msg, 4, 0),
    durationMinutes: jspb.Message.getFieldWithDefault(msg, 5, 0),
    groupId: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddTournamentSetGameRuleRequest}
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddTournamentSetGameRuleRequest;
  return proto.adminapi.esm.AddTournamentSetGameRuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddTournamentSetGameRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddTournamentSetGameRuleRequest}
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSetId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationDays(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationHours(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationMinutes(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddTournamentSetGameRuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddTournamentSetGameRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSetId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getGameId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDurationDays();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDurationHours();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDurationMinutes();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getGroupId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int64 set_id = 1;
 * @return {number}
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.prototype.getSetId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.prototype.setSetId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 game_id = 2;
 * @return {number}
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.prototype.getGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.prototype.setGameId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 duration_days = 3;
 * @return {number}
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.prototype.getDurationDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.prototype.setDurationDays = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 duration_hours = 4;
 * @return {number}
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.prototype.getDurationHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.prototype.setDurationHours = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 duration_minutes = 5;
 * @return {number}
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.prototype.getDurationMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.prototype.setDurationMinutes = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 group_id = 6;
 * @return {number}
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.prototype.getGroupId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.AddTournamentSetGameRuleRequest.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddTournamentSetGameRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddTournamentSetGameRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddTournamentSetGameRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTournamentSetGameRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddTournamentSetGameRuleResponse}
 */
proto.adminapi.esm.AddTournamentSetGameRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddTournamentSetGameRuleResponse;
  return proto.adminapi.esm.AddTournamentSetGameRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddTournamentSetGameRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddTournamentSetGameRuleResponse}
 */
proto.adminapi.esm.AddTournamentSetGameRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddTournamentSetGameRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddTournamentSetGameRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddTournamentSetGameRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTournamentSetGameRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.AddTournamentSetGameRuleResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddTournamentSetGameRuleResponse} returns this
 */
proto.adminapi.esm.AddTournamentSetGameRuleResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateTournamentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateTournamentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateTournamentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateTournamentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateTournamentRequest}
 */
proto.adminapi.esm.UpdateTournamentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateTournamentRequest;
  return proto.adminapi.esm.UpdateTournamentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateTournamentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateTournamentRequest}
 */
proto.adminapi.esm.UpdateTournamentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateTournamentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateTournamentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateTournamentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateTournamentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.UpdateTournamentRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateTournamentRequest} returns this
 */
proto.adminapi.esm.UpdateTournamentRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.UpdateTournamentRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateTournamentRequest} returns this
 */
proto.adminapi.esm.UpdateTournamentRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 status = 3;
 * @return {number}
 */
proto.adminapi.esm.UpdateTournamentRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateTournamentRequest} returns this
 */
proto.adminapi.esm.UpdateTournamentRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateTournamentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateTournamentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateTournamentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateTournamentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateTournamentResponse}
 */
proto.adminapi.esm.UpdateTournamentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateTournamentResponse;
  return proto.adminapi.esm.UpdateTournamentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateTournamentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateTournamentResponse}
 */
proto.adminapi.esm.UpdateTournamentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateTournamentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateTournamentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateTournamentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateTournamentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.UpdateTournamentResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateTournamentResponse} returns this
 */
proto.adminapi.esm.UpdateTournamentResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateTournamentSetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateTournamentSetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateTournamentSetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateTournamentSetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    durationDays: jspb.Message.getFieldWithDefault(msg, 3, 0),
    durationHours: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isGroup: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateTournamentSetRequest}
 */
proto.adminapi.esm.UpdateTournamentSetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateTournamentSetRequest;
  return proto.adminapi.esm.UpdateTournamentSetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateTournamentSetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateTournamentSetRequest}
 */
proto.adminapi.esm.UpdateTournamentSetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationDays(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationHours(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateTournamentSetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateTournamentSetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateTournamentSetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateTournamentSetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDurationDays();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDurationHours();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getIsGroup();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.UpdateTournamentSetRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateTournamentSetRequest} returns this
 */
proto.adminapi.esm.UpdateTournamentSetRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.UpdateTournamentSetRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateTournamentSetRequest} returns this
 */
proto.adminapi.esm.UpdateTournamentSetRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 duration_days = 3;
 * @return {number}
 */
proto.adminapi.esm.UpdateTournamentSetRequest.prototype.getDurationDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateTournamentSetRequest} returns this
 */
proto.adminapi.esm.UpdateTournamentSetRequest.prototype.setDurationDays = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 duration_hours = 4;
 * @return {number}
 */
proto.adminapi.esm.UpdateTournamentSetRequest.prototype.getDurationHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateTournamentSetRequest} returns this
 */
proto.adminapi.esm.UpdateTournamentSetRequest.prototype.setDurationHours = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool is_group = 5;
 * @return {boolean}
 */
proto.adminapi.esm.UpdateTournamentSetRequest.prototype.getIsGroup = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.UpdateTournamentSetRequest} returns this
 */
proto.adminapi.esm.UpdateTournamentSetRequest.prototype.setIsGroup = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateTournamentSetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateTournamentSetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateTournamentSetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateTournamentSetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateTournamentSetResponse}
 */
proto.adminapi.esm.UpdateTournamentSetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateTournamentSetResponse;
  return proto.adminapi.esm.UpdateTournamentSetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateTournamentSetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateTournamentSetResponse}
 */
proto.adminapi.esm.UpdateTournamentSetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateTournamentSetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateTournamentSetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateTournamentSetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateTournamentSetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.UpdateTournamentSetResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateTournamentSetResponse} returns this
 */
proto.adminapi.esm.UpdateTournamentSetResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateTournamentSetGameRuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    setId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    gameId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    durationDays: jspb.Message.getFieldWithDefault(msg, 4, 0),
    durationHours: jspb.Message.getFieldWithDefault(msg, 5, 0),
    durationMinutes: jspb.Message.getFieldWithDefault(msg, 6, 0),
    groupId: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateTournamentSetGameRuleRequest}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateTournamentSetGameRuleRequest;
  return proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateTournamentSetGameRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateTournamentSetGameRuleRequest}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSetId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationDays(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationHours(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationMinutes(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateTournamentSetGameRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getSetId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getGameId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDurationDays();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDurationHours();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getDurationMinutes();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getGroupId();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 set_id = 2;
 * @return {number}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.getSetId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.setSetId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 game_id = 3;
 * @return {number}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.getGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.setGameId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 duration_days = 4;
 * @return {number}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.getDurationDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.setDurationDays = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 duration_hours = 5;
 * @return {number}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.getDurationHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.setDurationHours = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 duration_minutes = 6;
 * @return {number}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.getDurationMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.setDurationMinutes = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 group_id = 7;
 * @return {number}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.getGroupId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleRequest.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateTournamentSetGameRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateTournamentSetGameRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateTournamentSetGameRuleResponse}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateTournamentSetGameRuleResponse;
  return proto.adminapi.esm.UpdateTournamentSetGameRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateTournamentSetGameRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateTournamentSetGameRuleResponse}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateTournamentSetGameRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateTournamentSetGameRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateTournamentSetGameRuleResponse} returns this
 */
proto.adminapi.esm.UpdateTournamentSetGameRuleResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteTournamentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteTournamentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteTournamentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTournamentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteTournamentRequest}
 */
proto.adminapi.esm.DeleteTournamentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteTournamentRequest;
  return proto.adminapi.esm.DeleteTournamentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteTournamentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteTournamentRequest}
 */
proto.adminapi.esm.DeleteTournamentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteTournamentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteTournamentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteTournamentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTournamentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.DeleteTournamentRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.DeleteTournamentRequest} returns this
 */
proto.adminapi.esm.DeleteTournamentRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteTournamentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteTournamentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteTournamentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTournamentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteTournamentResponse}
 */
proto.adminapi.esm.DeleteTournamentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteTournamentResponse;
  return proto.adminapi.esm.DeleteTournamentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteTournamentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteTournamentResponse}
 */
proto.adminapi.esm.DeleteTournamentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteTournamentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteTournamentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteTournamentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTournamentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.DeleteTournamentResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.DeleteTournamentResponse} returns this
 */
proto.adminapi.esm.DeleteTournamentResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteTournamentSetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteTournamentSetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteTournamentSetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTournamentSetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteTournamentSetRequest}
 */
proto.adminapi.esm.DeleteTournamentSetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteTournamentSetRequest;
  return proto.adminapi.esm.DeleteTournamentSetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteTournamentSetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteTournamentSetRequest}
 */
proto.adminapi.esm.DeleteTournamentSetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteTournamentSetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteTournamentSetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteTournamentSetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTournamentSetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.DeleteTournamentSetRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.DeleteTournamentSetRequest} returns this
 */
proto.adminapi.esm.DeleteTournamentSetRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteTournamentSetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteTournamentSetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteTournamentSetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTournamentSetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteTournamentSetResponse}
 */
proto.adminapi.esm.DeleteTournamentSetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteTournamentSetResponse;
  return proto.adminapi.esm.DeleteTournamentSetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteTournamentSetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteTournamentSetResponse}
 */
proto.adminapi.esm.DeleteTournamentSetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteTournamentSetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteTournamentSetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteTournamentSetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTournamentSetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.DeleteTournamentSetResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.DeleteTournamentSetResponse} returns this
 */
proto.adminapi.esm.DeleteTournamentSetResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteTournamentSetGameRuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteTournamentSetGameRuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteTournamentSetGameRuleRequest}
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteTournamentSetGameRuleRequest;
  return proto.adminapi.esm.DeleteTournamentSetGameRuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteTournamentSetGameRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteTournamentSetGameRuleRequest}
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteTournamentSetGameRuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteTournamentSetGameRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.DeleteTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteTournamentSetGameRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteTournamentSetGameRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteTournamentSetGameRuleResponse}
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteTournamentSetGameRuleResponse;
  return proto.adminapi.esm.DeleteTournamentSetGameRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteTournamentSetGameRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteTournamentSetGameRuleResponse}
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteTournamentSetGameRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteTournamentSetGameRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.DeleteTournamentSetGameRuleResponse} returns this
 */
proto.adminapi.esm.DeleteTournamentSetGameRuleResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    setId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest}
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest;
  return proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest}
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSetId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSetId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 set_id = 1;
 * @return {number}
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest.prototype.getSetId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleRequest.prototype.setSetId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse}
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse;
  return proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse}
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse} returns this
 */
proto.adminapi.esm.DeleteAllTournamentSetGameRuleResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListTournamentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListTournamentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListTournamentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTournamentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    searchTitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListTournamentRequest}
 */
proto.adminapi.esm.ListTournamentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListTournamentRequest;
  return proto.adminapi.esm.ListTournamentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListTournamentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListTournamentRequest}
 */
proto.adminapi.esm.ListTournamentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchTitle(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListTournamentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListTournamentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListTournamentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTournamentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSearchTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.adminapi.esm.ListTournamentRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListTournamentRequest} returns this
 */
proto.adminapi.esm.ListTournamentRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.adminapi.esm.ListTournamentRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListTournamentRequest} returns this
 */
proto.adminapi.esm.ListTournamentRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string search_title = 3;
 * @return {string}
 */
proto.adminapi.esm.ListTournamentRequest.prototype.getSearchTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ListTournamentRequest} returns this
 */
proto.adminapi.esm.ListTournamentRequest.prototype.setSearchTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 status = 4;
 * @return {number}
 */
proto.adminapi.esm.ListTournamentRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListTournamentRequest} returns this
 */
proto.adminapi.esm.ListTournamentRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListTournamentResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListTournamentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListTournamentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListTournamentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTournamentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.TournamentDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListTournamentResponse}
 */
proto.adminapi.esm.ListTournamentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListTournamentResponse;
  return proto.adminapi.esm.ListTournamentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListTournamentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListTournamentResponse}
 */
proto.adminapi.esm.ListTournamentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.TournamentDetail;
      reader.readMessage(value,proto.adminapi.esm.TournamentDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListTournamentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListTournamentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListTournamentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTournamentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.TournamentDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TournamentDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.TournamentDetail>}
 */
proto.adminapi.esm.ListTournamentResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.TournamentDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.TournamentDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.TournamentDetail>} value
 * @return {!proto.adminapi.esm.ListTournamentResponse} returns this
*/
proto.adminapi.esm.ListTournamentResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.TournamentDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.TournamentDetail}
 */
proto.adminapi.esm.ListTournamentResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.TournamentDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListTournamentResponse} returns this
 */
proto.adminapi.esm.ListTournamentResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.TournamentDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.TournamentDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.TournamentDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.TournamentDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.TournamentDetail}
 */
proto.adminapi.esm.TournamentDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.TournamentDetail;
  return proto.adminapi.esm.TournamentDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.TournamentDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.TournamentDetail}
 */
proto.adminapi.esm.TournamentDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.TournamentDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.TournamentDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.TournamentDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.TournamentDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.TournamentDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentDetail} returns this
 */
proto.adminapi.esm.TournamentDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.TournamentDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.TournamentDetail} returns this
 */
proto.adminapi.esm.TournamentDetail.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 status = 3;
 * @return {number}
 */
proto.adminapi.esm.TournamentDetail.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentDetail} returns this
 */
proto.adminapi.esm.TournamentDetail.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListTournamentSetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListTournamentSetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListTournamentSetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTournamentSetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    searchTitle: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListTournamentSetRequest}
 */
proto.adminapi.esm.ListTournamentSetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListTournamentSetRequest;
  return proto.adminapi.esm.ListTournamentSetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListTournamentSetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListTournamentSetRequest}
 */
proto.adminapi.esm.ListTournamentSetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListTournamentSetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListTournamentSetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListTournamentSetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTournamentSetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSearchTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.adminapi.esm.ListTournamentSetRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListTournamentSetRequest} returns this
 */
proto.adminapi.esm.ListTournamentSetRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.adminapi.esm.ListTournamentSetRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListTournamentSetRequest} returns this
 */
proto.adminapi.esm.ListTournamentSetRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string search_title = 3;
 * @return {string}
 */
proto.adminapi.esm.ListTournamentSetRequest.prototype.getSearchTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ListTournamentSetRequest} returns this
 */
proto.adminapi.esm.ListTournamentSetRequest.prototype.setSearchTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListTournamentSetResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListTournamentSetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListTournamentSetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListTournamentSetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTournamentSetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.TournamentSetDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListTournamentSetResponse}
 */
proto.adminapi.esm.ListTournamentSetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListTournamentSetResponse;
  return proto.adminapi.esm.ListTournamentSetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListTournamentSetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListTournamentSetResponse}
 */
proto.adminapi.esm.ListTournamentSetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.TournamentSetDetail;
      reader.readMessage(value,proto.adminapi.esm.TournamentSetDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListTournamentSetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListTournamentSetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListTournamentSetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTournamentSetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.TournamentSetDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TournamentSetDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.TournamentSetDetail>}
 */
proto.adminapi.esm.ListTournamentSetResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.TournamentSetDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.TournamentSetDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.TournamentSetDetail>} value
 * @return {!proto.adminapi.esm.ListTournamentSetResponse} returns this
*/
proto.adminapi.esm.ListTournamentSetResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.TournamentSetDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.TournamentSetDetail}
 */
proto.adminapi.esm.ListTournamentSetResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.TournamentSetDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListTournamentSetResponse} returns this
 */
proto.adminapi.esm.ListTournamentSetResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.TournamentSetDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.TournamentSetDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.TournamentSetDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.TournamentSetDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    durationDays: jspb.Message.getFieldWithDefault(msg, 3, 0),
    durationHours: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isGroup: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.TournamentSetDetail}
 */
proto.adminapi.esm.TournamentSetDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.TournamentSetDetail;
  return proto.adminapi.esm.TournamentSetDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.TournamentSetDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.TournamentSetDetail}
 */
proto.adminapi.esm.TournamentSetDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationDays(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationHours(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.TournamentSetDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.TournamentSetDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.TournamentSetDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.TournamentSetDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDurationDays();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDurationHours();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getIsGroup();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.TournamentSetDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentSetDetail} returns this
 */
proto.adminapi.esm.TournamentSetDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.adminapi.esm.TournamentSetDetail.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.TournamentSetDetail} returns this
 */
proto.adminapi.esm.TournamentSetDetail.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 duration_days = 3;
 * @return {number}
 */
proto.adminapi.esm.TournamentSetDetail.prototype.getDurationDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentSetDetail} returns this
 */
proto.adminapi.esm.TournamentSetDetail.prototype.setDurationDays = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 duration_hours = 4;
 * @return {number}
 */
proto.adminapi.esm.TournamentSetDetail.prototype.getDurationHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentSetDetail} returns this
 */
proto.adminapi.esm.TournamentSetDetail.prototype.setDurationHours = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool is_group = 5;
 * @return {boolean}
 */
proto.adminapi.esm.TournamentSetDetail.prototype.getIsGroup = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.TournamentSetDetail} returns this
 */
proto.adminapi.esm.TournamentSetDetail.prototype.setIsGroup = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListTournamentSetGameRuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListTournamentSetGameRuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListTournamentSetGameRuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTournamentSetGameRuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListTournamentSetGameRuleRequest}
 */
proto.adminapi.esm.ListTournamentSetGameRuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListTournamentSetGameRuleRequest;
  return proto.adminapi.esm.ListTournamentSetGameRuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListTournamentSetGameRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListTournamentSetGameRuleRequest}
 */
proto.adminapi.esm.ListTournamentSetGameRuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListTournamentSetGameRuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListTournamentSetGameRuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListTournamentSetGameRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTournamentSetGameRuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.ListTournamentSetGameRuleRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListTournamentSetGameRuleRequest} returns this
 */
proto.adminapi.esm.ListTournamentSetGameRuleRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListTournamentSetGameRuleResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListTournamentSetGameRuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListTournamentSetGameRuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListTournamentSetGameRuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTournamentSetGameRuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.TournamentSetGameRuleDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListTournamentSetGameRuleResponse}
 */
proto.adminapi.esm.ListTournamentSetGameRuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListTournamentSetGameRuleResponse;
  return proto.adminapi.esm.ListTournamentSetGameRuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListTournamentSetGameRuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListTournamentSetGameRuleResponse}
 */
proto.adminapi.esm.ListTournamentSetGameRuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.TournamentSetGameRuleDetail;
      reader.readMessage(value,proto.adminapi.esm.TournamentSetGameRuleDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListTournamentSetGameRuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListTournamentSetGameRuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListTournamentSetGameRuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTournamentSetGameRuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.TournamentSetGameRuleDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TournamentSetGameRuleDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.TournamentSetGameRuleDetail>}
 */
proto.adminapi.esm.ListTournamentSetGameRuleResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.TournamentSetGameRuleDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.TournamentSetGameRuleDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.TournamentSetGameRuleDetail>} value
 * @return {!proto.adminapi.esm.ListTournamentSetGameRuleResponse} returns this
*/
proto.adminapi.esm.ListTournamentSetGameRuleResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.TournamentSetGameRuleDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.TournamentSetGameRuleDetail}
 */
proto.adminapi.esm.ListTournamentSetGameRuleResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.TournamentSetGameRuleDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListTournamentSetGameRuleResponse} returns this
 */
proto.adminapi.esm.ListTournamentSetGameRuleResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.TournamentSetGameRuleDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.TournamentSetGameRuleDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    setId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    gameId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    gameTitle: jspb.Message.getFieldWithDefault(msg, 4, ""),
    durationDays: jspb.Message.getFieldWithDefault(msg, 5, 0),
    durationHours: jspb.Message.getFieldWithDefault(msg, 6, 0),
    durationMinutes: jspb.Message.getFieldWithDefault(msg, 7, 0),
    groupId: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.TournamentSetGameRuleDetail}
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.TournamentSetGameRuleDetail;
  return proto.adminapi.esm.TournamentSetGameRuleDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.TournamentSetGameRuleDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.TournamentSetGameRuleDetail}
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSetId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameTitle(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationDays(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationHours(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationMinutes(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.TournamentSetGameRuleDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.TournamentSetGameRuleDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getSetId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getGameId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getGameTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDurationDays();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getDurationHours();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getDurationMinutes();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getGroupId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentSetGameRuleDetail} returns this
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 set_id = 2;
 * @return {number}
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.getSetId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentSetGameRuleDetail} returns this
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.setSetId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 game_id = 3;
 * @return {number}
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.getGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentSetGameRuleDetail} returns this
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.setGameId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string game_title = 4;
 * @return {string}
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.getGameTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.TournamentSetGameRuleDetail} returns this
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.setGameTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 duration_days = 5;
 * @return {number}
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.getDurationDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentSetGameRuleDetail} returns this
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.setDurationDays = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 duration_hours = 6;
 * @return {number}
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.getDurationHours = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentSetGameRuleDetail} returns this
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.setDurationHours = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 duration_minutes = 7;
 * @return {number}
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.getDurationMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentSetGameRuleDetail} returns this
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.setDurationMinutes = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 group_id = 8;
 * @return {number}
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.getGroupId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentSetGameRuleDetail} returns this
 */
proto.adminapi.esm.TournamentSetGameRuleDetail.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetTournamentCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetTournamentCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetTournamentCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetTournamentCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetTournamentCountRequest}
 */
proto.adminapi.esm.GetTournamentCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetTournamentCountRequest;
  return proto.adminapi.esm.GetTournamentCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetTournamentCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetTournamentCountRequest}
 */
proto.adminapi.esm.GetTournamentCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetTournamentCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetTournamentCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetTournamentCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetTournamentCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetTournamentCountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetTournamentCountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetTournamentCountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetTournamentCountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.adminapi.esm.TournamentCount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetTournamentCountResponse}
 */
proto.adminapi.esm.GetTournamentCountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetTournamentCountResponse;
  return proto.adminapi.esm.GetTournamentCountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetTournamentCountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetTournamentCountResponse}
 */
proto.adminapi.esm.GetTournamentCountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.TournamentCount;
      reader.readMessage(value,proto.adminapi.esm.TournamentCount.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetTournamentCountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetTournamentCountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetTournamentCountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetTournamentCountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.adminapi.esm.TournamentCount.serializeBinaryToWriter
    );
  }
};


/**
 * optional TournamentCount result = 1;
 * @return {?proto.adminapi.esm.TournamentCount}
 */
proto.adminapi.esm.GetTournamentCountResponse.prototype.getResult = function() {
  return /** @type{?proto.adminapi.esm.TournamentCount} */ (
    jspb.Message.getWrapperField(this, proto.adminapi.esm.TournamentCount, 1));
};


/**
 * @param {?proto.adminapi.esm.TournamentCount|undefined} value
 * @return {!proto.adminapi.esm.GetTournamentCountResponse} returns this
*/
proto.adminapi.esm.GetTournamentCountResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.adminapi.esm.GetTournamentCountResponse} returns this
 */
proto.adminapi.esm.GetTournamentCountResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.adminapi.esm.GetTournamentCountResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.TournamentCount.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.TournamentCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.TournamentCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.TournamentCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    draft: jspb.Message.getFieldWithDefault(msg, 1, 0),
    published: jspb.Message.getFieldWithDefault(msg, 2, 0),
    archived: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.TournamentCount}
 */
proto.adminapi.esm.TournamentCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.TournamentCount;
  return proto.adminapi.esm.TournamentCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.TournamentCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.TournamentCount}
 */
proto.adminapi.esm.TournamentCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDraft(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPublished(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setArchived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.TournamentCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.TournamentCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.TournamentCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.TournamentCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDraft();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPublished();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getArchived();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 draft = 1;
 * @return {number}
 */
proto.adminapi.esm.TournamentCount.prototype.getDraft = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentCount} returns this
 */
proto.adminapi.esm.TournamentCount.prototype.setDraft = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 published = 2;
 * @return {number}
 */
proto.adminapi.esm.TournamentCount.prototype.getPublished = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentCount} returns this
 */
proto.adminapi.esm.TournamentCount.prototype.setPublished = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 archived = 3;
 * @return {number}
 */
proto.adminapi.esm.TournamentCount.prototype.getArchived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentCount} returns this
 */
proto.adminapi.esm.TournamentCount.prototype.setArchived = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetTournamentSetCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetTournamentSetCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetTournamentSetCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetTournamentSetCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetTournamentSetCountRequest}
 */
proto.adminapi.esm.GetTournamentSetCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetTournamentSetCountRequest;
  return proto.adminapi.esm.GetTournamentSetCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetTournamentSetCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetTournamentSetCountRequest}
 */
proto.adminapi.esm.GetTournamentSetCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetTournamentSetCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetTournamentSetCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetTournamentSetCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetTournamentSetCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetTournamentSetCountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetTournamentSetCountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetTournamentSetCountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetTournamentSetCountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.adminapi.esm.TournamentSetCount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetTournamentSetCountResponse}
 */
proto.adminapi.esm.GetTournamentSetCountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetTournamentSetCountResponse;
  return proto.adminapi.esm.GetTournamentSetCountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetTournamentSetCountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetTournamentSetCountResponse}
 */
proto.adminapi.esm.GetTournamentSetCountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.TournamentSetCount;
      reader.readMessage(value,proto.adminapi.esm.TournamentSetCount.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetTournamentSetCountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetTournamentSetCountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetTournamentSetCountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetTournamentSetCountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.adminapi.esm.TournamentSetCount.serializeBinaryToWriter
    );
  }
};


/**
 * optional TournamentSetCount result = 1;
 * @return {?proto.adminapi.esm.TournamentSetCount}
 */
proto.adminapi.esm.GetTournamentSetCountResponse.prototype.getResult = function() {
  return /** @type{?proto.adminapi.esm.TournamentSetCount} */ (
    jspb.Message.getWrapperField(this, proto.adminapi.esm.TournamentSetCount, 1));
};


/**
 * @param {?proto.adminapi.esm.TournamentSetCount|undefined} value
 * @return {!proto.adminapi.esm.GetTournamentSetCountResponse} returns this
*/
proto.adminapi.esm.GetTournamentSetCountResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.adminapi.esm.GetTournamentSetCountResponse} returns this
 */
proto.adminapi.esm.GetTournamentSetCountResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.adminapi.esm.GetTournamentSetCountResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.TournamentSetCount.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.TournamentSetCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.TournamentSetCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.TournamentSetCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.TournamentSetCount}
 */
proto.adminapi.esm.TournamentSetCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.TournamentSetCount;
  return proto.adminapi.esm.TournamentSetCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.TournamentSetCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.TournamentSetCount}
 */
proto.adminapi.esm.TournamentSetCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.TournamentSetCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.TournamentSetCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.TournamentSetCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.TournamentSetCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 total = 1;
 * @return {number}
 */
proto.adminapi.esm.TournamentSetCount.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TournamentSetCount} returns this
 */
proto.adminapi.esm.TournamentSetCount.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddTourSetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddTourSetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddTourSetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTourSetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tourId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    setId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddTourSetRequest}
 */
proto.adminapi.esm.AddTourSetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddTourSetRequest;
  return proto.adminapi.esm.AddTourSetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddTourSetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddTourSetRequest}
 */
proto.adminapi.esm.AddTourSetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTourId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSetId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddTourSetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddTourSetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddTourSetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTourSetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTourId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getSetId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 tour_id = 1;
 * @return {number}
 */
proto.adminapi.esm.AddTourSetRequest.prototype.getTourId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddTourSetRequest} returns this
 */
proto.adminapi.esm.AddTourSetRequest.prototype.setTourId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 set_id = 2;
 * @return {number}
 */
proto.adminapi.esm.AddTourSetRequest.prototype.getSetId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.AddTourSetRequest} returns this
 */
proto.adminapi.esm.AddTourSetRequest.prototype.setSetId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.AddTourSetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.AddTourSetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.AddTourSetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTourSetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.AddTourSetResponse}
 */
proto.adminapi.esm.AddTourSetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.AddTourSetResponse;
  return proto.adminapi.esm.AddTourSetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.AddTourSetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.AddTourSetResponse}
 */
proto.adminapi.esm.AddTourSetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.AddTourSetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.AddTourSetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.AddTourSetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.AddTourSetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.AddTourSetResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.AddTourSetResponse} returns this
 */
proto.adminapi.esm.AddTourSetResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteTourSetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteTourSetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteTourSetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTourSetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteTourSetRequest}
 */
proto.adminapi.esm.DeleteTourSetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteTourSetRequest;
  return proto.adminapi.esm.DeleteTourSetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteTourSetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteTourSetRequest}
 */
proto.adminapi.esm.DeleteTourSetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteTourSetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteTourSetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteTourSetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTourSetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.DeleteTourSetRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.DeleteTourSetRequest} returns this
 */
proto.adminapi.esm.DeleteTourSetRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.DeleteTourSetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.DeleteTourSetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.DeleteTourSetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTourSetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.DeleteTourSetResponse}
 */
proto.adminapi.esm.DeleteTourSetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.DeleteTourSetResponse;
  return proto.adminapi.esm.DeleteTourSetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.DeleteTourSetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.DeleteTourSetResponse}
 */
proto.adminapi.esm.DeleteTourSetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.DeleteTourSetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.DeleteTourSetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.DeleteTourSetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.DeleteTourSetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.DeleteTourSetResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.DeleteTourSetResponse} returns this
 */
proto.adminapi.esm.DeleteTourSetResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListTourSetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListTourSetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListTourSetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTourSetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListTourSetRequest}
 */
proto.adminapi.esm.ListTourSetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListTourSetRequest;
  return proto.adminapi.esm.ListTourSetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListTourSetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListTourSetRequest}
 */
proto.adminapi.esm.ListTourSetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListTourSetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListTourSetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListTourSetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTourSetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.ListTourSetRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListTourSetRequest} returns this
 */
proto.adminapi.esm.ListTourSetRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListTourSetResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListTourSetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListTourSetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListTourSetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTourSetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.TourSetDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListTourSetResponse}
 */
proto.adminapi.esm.ListTourSetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListTourSetResponse;
  return proto.adminapi.esm.ListTourSetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListTourSetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListTourSetResponse}
 */
proto.adminapi.esm.ListTourSetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.TourSetDetail;
      reader.readMessage(value,proto.adminapi.esm.TourSetDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListTourSetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListTourSetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListTourSetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListTourSetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.TourSetDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TourSetDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.TourSetDetail>}
 */
proto.adminapi.esm.ListTourSetResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.TourSetDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.TourSetDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.TourSetDetail>} value
 * @return {!proto.adminapi.esm.ListTourSetResponse} returns this
*/
proto.adminapi.esm.ListTourSetResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.TourSetDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.TourSetDetail}
 */
proto.adminapi.esm.ListTourSetResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.TourSetDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListTourSetResponse} returns this
 */
proto.adminapi.esm.ListTourSetResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.TourSetDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.TourSetDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.TourSetDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.TourSetDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tourId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    setId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    setTitle: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.TourSetDetail}
 */
proto.adminapi.esm.TourSetDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.TourSetDetail;
  return proto.adminapi.esm.TourSetDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.TourSetDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.TourSetDetail}
 */
proto.adminapi.esm.TourSetDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTourId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSetId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSetTitle(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.TourSetDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.TourSetDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.TourSetDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.TourSetDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTourId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSetId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getSetTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.TourSetDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TourSetDetail} returns this
 */
proto.adminapi.esm.TourSetDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 tour_id = 2;
 * @return {number}
 */
proto.adminapi.esm.TourSetDetail.prototype.getTourId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TourSetDetail} returns this
 */
proto.adminapi.esm.TourSetDetail.prototype.setTourId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 set_id = 3;
 * @return {number}
 */
proto.adminapi.esm.TourSetDetail.prototype.getSetId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TourSetDetail} returns this
 */
proto.adminapi.esm.TourSetDetail.prototype.setSetId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string set_title = 4;
 * @return {string}
 */
proto.adminapi.esm.TourSetDetail.prototype.getSetTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.TourSetDetail} returns this
 */
proto.adminapi.esm.TourSetDetail.prototype.setSetTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 status = 5;
 * @return {number}
 */
proto.adminapi.esm.TourSetDetail.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.TourSetDetail} returns this
 */
proto.adminapi.esm.TourSetDetail.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateWinnerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateWinnerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateWinnerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateWinnerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    shipTracking: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateWinnerRequest}
 */
proto.adminapi.esm.UpdateWinnerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateWinnerRequest;
  return proto.adminapi.esm.UpdateWinnerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateWinnerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateWinnerRequest}
 */
proto.adminapi.esm.UpdateWinnerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShipTracking(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateWinnerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateWinnerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateWinnerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateWinnerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getShipTracking();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.UpdateWinnerRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateWinnerRequest} returns this
 */
proto.adminapi.esm.UpdateWinnerRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 status = 2;
 * @return {number}
 */
proto.adminapi.esm.UpdateWinnerRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.UpdateWinnerRequest} returns this
 */
proto.adminapi.esm.UpdateWinnerRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string ship_tracking = 3;
 * @return {string}
 */
proto.adminapi.esm.UpdateWinnerRequest.prototype.getShipTracking = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateWinnerRequest} returns this
 */
proto.adminapi.esm.UpdateWinnerRequest.prototype.setShipTracking = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.UpdateWinnerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.UpdateWinnerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.UpdateWinnerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateWinnerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.UpdateWinnerResponse}
 */
proto.adminapi.esm.UpdateWinnerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.UpdateWinnerResponse;
  return proto.adminapi.esm.UpdateWinnerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.UpdateWinnerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.UpdateWinnerResponse}
 */
proto.adminapi.esm.UpdateWinnerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.UpdateWinnerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.UpdateWinnerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.UpdateWinnerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.UpdateWinnerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.adminapi.esm.UpdateWinnerResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.UpdateWinnerResponse} returns this
 */
proto.adminapi.esm.UpdateWinnerResponse.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListWinnerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListWinnerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListWinnerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListWinnerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    searchTitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListWinnerRequest}
 */
proto.adminapi.esm.ListWinnerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListWinnerRequest;
  return proto.adminapi.esm.ListWinnerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListWinnerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListWinnerRequest}
 */
proto.adminapi.esm.ListWinnerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchTitle(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListWinnerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListWinnerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListWinnerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListWinnerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSearchTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.adminapi.esm.ListWinnerRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListWinnerRequest} returns this
 */
proto.adminapi.esm.ListWinnerRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.adminapi.esm.ListWinnerRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListWinnerRequest} returns this
 */
proto.adminapi.esm.ListWinnerRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string search_title = 3;
 * @return {string}
 */
proto.adminapi.esm.ListWinnerRequest.prototype.getSearchTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.ListWinnerRequest} returns this
 */
proto.adminapi.esm.ListWinnerRequest.prototype.setSearchTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 status = 4;
 * @return {number}
 */
proto.adminapi.esm.ListWinnerRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListWinnerRequest} returns this
 */
proto.adminapi.esm.ListWinnerRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListWinnerResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListWinnerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListWinnerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListWinnerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListWinnerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.WinnerDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListWinnerResponse}
 */
proto.adminapi.esm.ListWinnerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListWinnerResponse;
  return proto.adminapi.esm.ListWinnerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListWinnerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListWinnerResponse}
 */
proto.adminapi.esm.ListWinnerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.WinnerDetail;
      reader.readMessage(value,proto.adminapi.esm.WinnerDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListWinnerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListWinnerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListWinnerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListWinnerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.WinnerDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WinnerDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.WinnerDetail>}
 */
proto.adminapi.esm.ListWinnerResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.WinnerDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.WinnerDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.WinnerDetail>} value
 * @return {!proto.adminapi.esm.ListWinnerResponse} returns this
*/
proto.adminapi.esm.ListWinnerResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.WinnerDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.WinnerDetail}
 */
proto.adminapi.esm.ListWinnerResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.WinnerDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListWinnerResponse} returns this
 */
proto.adminapi.esm.ListWinnerResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.WinnerDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.WinnerDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.WinnerDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.WinnerDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    prizeId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    prizeTitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    prizeImgUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    prizeTypeId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    userNickName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    userAvatarUrl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    createdOn: jspb.Message.getFieldWithDefault(msg, 9, 0),
    claimedOn: jspb.Message.getFieldWithDefault(msg, 10, 0),
    status: jspb.Message.getFieldWithDefault(msg, 11, 0),
    shipTracking: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.WinnerDetail}
 */
proto.adminapi.esm.WinnerDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.WinnerDetail;
  return proto.adminapi.esm.WinnerDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.WinnerDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.WinnerDetail}
 */
proto.adminapi.esm.WinnerDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrizeId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrizeTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrizeImgUrl(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrizeTypeId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserNickName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserAvatarUrl(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedOn(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClaimedOn(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setShipTracking(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.WinnerDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.WinnerDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.WinnerDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.WinnerDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPrizeId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPrizeTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrizeImgUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPrizeTypeId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getUserNickName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUserAvatarUrl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCreatedOn();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getClaimedOn();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getShipTracking();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.WinnerDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.WinnerDetail} returns this
 */
proto.adminapi.esm.WinnerDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 prize_id = 2;
 * @return {number}
 */
proto.adminapi.esm.WinnerDetail.prototype.getPrizeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.WinnerDetail} returns this
 */
proto.adminapi.esm.WinnerDetail.prototype.setPrizeId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string prize_title = 3;
 * @return {string}
 */
proto.adminapi.esm.WinnerDetail.prototype.getPrizeTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.WinnerDetail} returns this
 */
proto.adminapi.esm.WinnerDetail.prototype.setPrizeTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string prize_img_url = 4;
 * @return {string}
 */
proto.adminapi.esm.WinnerDetail.prototype.getPrizeImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.WinnerDetail} returns this
 */
proto.adminapi.esm.WinnerDetail.prototype.setPrizeImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 prize_type_id = 5;
 * @return {number}
 */
proto.adminapi.esm.WinnerDetail.prototype.getPrizeTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.WinnerDetail} returns this
 */
proto.adminapi.esm.WinnerDetail.prototype.setPrizeTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 user_id = 6;
 * @return {number}
 */
proto.adminapi.esm.WinnerDetail.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.WinnerDetail} returns this
 */
proto.adminapi.esm.WinnerDetail.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string user_nick_name = 7;
 * @return {string}
 */
proto.adminapi.esm.WinnerDetail.prototype.getUserNickName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.WinnerDetail} returns this
 */
proto.adminapi.esm.WinnerDetail.prototype.setUserNickName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string user_avatar_url = 8;
 * @return {string}
 */
proto.adminapi.esm.WinnerDetail.prototype.getUserAvatarUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.WinnerDetail} returns this
 */
proto.adminapi.esm.WinnerDetail.prototype.setUserAvatarUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 created_on = 9;
 * @return {number}
 */
proto.adminapi.esm.WinnerDetail.prototype.getCreatedOn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.WinnerDetail} returns this
 */
proto.adminapi.esm.WinnerDetail.prototype.setCreatedOn = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 claimed_on = 10;
 * @return {number}
 */
proto.adminapi.esm.WinnerDetail.prototype.getClaimedOn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.WinnerDetail} returns this
 */
proto.adminapi.esm.WinnerDetail.prototype.setClaimedOn = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 status = 11;
 * @return {number}
 */
proto.adminapi.esm.WinnerDetail.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.WinnerDetail} returns this
 */
proto.adminapi.esm.WinnerDetail.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string ship_tracking = 12;
 * @return {string}
 */
proto.adminapi.esm.WinnerDetail.prototype.getShipTracking = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.WinnerDetail} returns this
 */
proto.adminapi.esm.WinnerDetail.prototype.setShipTracking = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetWinnerCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetWinnerCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetWinnerCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetWinnerCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetWinnerCountRequest}
 */
proto.adminapi.esm.GetWinnerCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetWinnerCountRequest;
  return proto.adminapi.esm.GetWinnerCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetWinnerCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetWinnerCountRequest}
 */
proto.adminapi.esm.GetWinnerCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetWinnerCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetWinnerCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetWinnerCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetWinnerCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.GetWinnerCountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.GetWinnerCountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.GetWinnerCountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetWinnerCountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.adminapi.esm.WinnerCount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.GetWinnerCountResponse}
 */
proto.adminapi.esm.GetWinnerCountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.GetWinnerCountResponse;
  return proto.adminapi.esm.GetWinnerCountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.GetWinnerCountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.GetWinnerCountResponse}
 */
proto.adminapi.esm.GetWinnerCountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.WinnerCount;
      reader.readMessage(value,proto.adminapi.esm.WinnerCount.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.GetWinnerCountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.GetWinnerCountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.GetWinnerCountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.GetWinnerCountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.adminapi.esm.WinnerCount.serializeBinaryToWriter
    );
  }
};


/**
 * optional WinnerCount result = 1;
 * @return {?proto.adminapi.esm.WinnerCount}
 */
proto.adminapi.esm.GetWinnerCountResponse.prototype.getResult = function() {
  return /** @type{?proto.adminapi.esm.WinnerCount} */ (
    jspb.Message.getWrapperField(this, proto.adminapi.esm.WinnerCount, 1));
};


/**
 * @param {?proto.adminapi.esm.WinnerCount|undefined} value
 * @return {!proto.adminapi.esm.GetWinnerCountResponse} returns this
*/
proto.adminapi.esm.GetWinnerCountResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.adminapi.esm.GetWinnerCountResponse} returns this
 */
proto.adminapi.esm.GetWinnerCountResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.adminapi.esm.GetWinnerCountResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.WinnerCount.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.WinnerCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.WinnerCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.WinnerCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    unclaimed: jspb.Message.getFieldWithDefault(msg, 1, 0),
    claimed: jspb.Message.getFieldWithDefault(msg, 2, 0),
    delivered: jspb.Message.getFieldWithDefault(msg, 3, 0),
    expired: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.WinnerCount}
 */
proto.adminapi.esm.WinnerCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.WinnerCount;
  return proto.adminapi.esm.WinnerCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.WinnerCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.WinnerCount}
 */
proto.adminapi.esm.WinnerCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUnclaimed(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClaimed(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDelivered(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpired(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.WinnerCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.WinnerCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.WinnerCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.WinnerCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnclaimed();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getClaimed();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDelivered();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getExpired();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int64 unclaimed = 1;
 * @return {number}
 */
proto.adminapi.esm.WinnerCount.prototype.getUnclaimed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.WinnerCount} returns this
 */
proto.adminapi.esm.WinnerCount.prototype.setUnclaimed = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 claimed = 2;
 * @return {number}
 */
proto.adminapi.esm.WinnerCount.prototype.getClaimed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.WinnerCount} returns this
 */
proto.adminapi.esm.WinnerCount.prototype.setClaimed = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 delivered = 3;
 * @return {number}
 */
proto.adminapi.esm.WinnerCount.prototype.getDelivered = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.WinnerCount} returns this
 */
proto.adminapi.esm.WinnerCount.prototype.setDelivered = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 expired = 4;
 * @return {number}
 */
proto.adminapi.esm.WinnerCount.prototype.getExpired = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.WinnerCount} returns this
 */
proto.adminapi.esm.WinnerCount.prototype.setExpired = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListLogGRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListLogGRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListLogGRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListLogGRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListLogGRequest}
 */
proto.adminapi.esm.ListLogGRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListLogGRequest;
  return proto.adminapi.esm.ListLogGRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListLogGRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListLogGRequest}
 */
proto.adminapi.esm.ListLogGRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListLogGRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListLogGRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListLogGRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListLogGRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 user_id = 1;
 * @return {number}
 */
proto.adminapi.esm.ListLogGRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListLogGRequest} returns this
 */
proto.adminapi.esm.ListLogGRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 limit = 2;
 * @return {number}
 */
proto.adminapi.esm.ListLogGRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListLogGRequest} returns this
 */
proto.adminapi.esm.ListLogGRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 offset = 3;
 * @return {number}
 */
proto.adminapi.esm.ListLogGRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.ListLogGRequest} returns this
 */
proto.adminapi.esm.ListLogGRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.adminapi.esm.ListLogGResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.ListLogGResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.ListLogGResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.ListLogGResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListLogGResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.adminapi.esm.LogGDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.ListLogGResponse}
 */
proto.adminapi.esm.ListLogGResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.ListLogGResponse;
  return proto.adminapi.esm.ListLogGResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.ListLogGResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.ListLogGResponse}
 */
proto.adminapi.esm.ListLogGResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.adminapi.esm.LogGDetail;
      reader.readMessage(value,proto.adminapi.esm.LogGDetail.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.ListLogGResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.ListLogGResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.ListLogGResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.ListLogGResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.adminapi.esm.LogGDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LogGDetail result = 1;
 * @return {!Array<!proto.adminapi.esm.LogGDetail>}
 */
proto.adminapi.esm.ListLogGResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.adminapi.esm.LogGDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.adminapi.esm.LogGDetail, 1));
};


/**
 * @param {!Array<!proto.adminapi.esm.LogGDetail>} value
 * @return {!proto.adminapi.esm.ListLogGResponse} returns this
*/
proto.adminapi.esm.ListLogGResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.adminapi.esm.LogGDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.adminapi.esm.LogGDetail}
 */
proto.adminapi.esm.ListLogGResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.adminapi.esm.LogGDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.adminapi.esm.ListLogGResponse} returns this
 */
proto.adminapi.esm.ListLogGResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.adminapi.esm.LogGDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.adminapi.esm.LogGDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.adminapi.esm.LogGDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.LogGDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    prizeId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    prizeTitle: jspb.Message.getFieldWithDefault(msg, 4, ""),
    prizeImgUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gameId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    gameTitle: jspb.Message.getFieldWithDefault(msg, 7, ""),
    gameImgUrl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    enterTimestamp: jspb.Message.getFieldWithDefault(msg, 9, 0),
    leaveTimestamp: jspb.Message.getFieldWithDefault(msg, 10, 0),
    isWatchedAd: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    isUsedGem: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    gameScore: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.adminapi.esm.LogGDetail}
 */
proto.adminapi.esm.LogGDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.adminapi.esm.LogGDetail;
  return proto.adminapi.esm.LogGDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.adminapi.esm.LogGDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.adminapi.esm.LogGDetail}
 */
proto.adminapi.esm.LogGDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrizeId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrizeTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrizeImgUrl(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameTitle(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameImgUrl(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEnterTimestamp(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLeaveTimestamp(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsWatchedAd(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsUsedGem(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGameScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.adminapi.esm.LogGDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.adminapi.esm.LogGDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.adminapi.esm.LogGDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.adminapi.esm.LogGDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPrizeId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPrizeTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPrizeImgUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGameId();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getGameTitle();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getGameImgUrl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getEnterTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getLeaveTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getIsWatchedAd();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIsUsedGem();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getGameScore();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.adminapi.esm.LogGDetail.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.LogGDetail} returns this
 */
proto.adminapi.esm.LogGDetail.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 user_id = 2;
 * @return {number}
 */
proto.adminapi.esm.LogGDetail.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.LogGDetail} returns this
 */
proto.adminapi.esm.LogGDetail.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 prize_id = 3;
 * @return {number}
 */
proto.adminapi.esm.LogGDetail.prototype.getPrizeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.LogGDetail} returns this
 */
proto.adminapi.esm.LogGDetail.prototype.setPrizeId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string prize_title = 4;
 * @return {string}
 */
proto.adminapi.esm.LogGDetail.prototype.getPrizeTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.LogGDetail} returns this
 */
proto.adminapi.esm.LogGDetail.prototype.setPrizeTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string prize_img_url = 5;
 * @return {string}
 */
proto.adminapi.esm.LogGDetail.prototype.getPrizeImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.LogGDetail} returns this
 */
proto.adminapi.esm.LogGDetail.prototype.setPrizeImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 game_id = 6;
 * @return {number}
 */
proto.adminapi.esm.LogGDetail.prototype.getGameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.LogGDetail} returns this
 */
proto.adminapi.esm.LogGDetail.prototype.setGameId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string game_title = 7;
 * @return {string}
 */
proto.adminapi.esm.LogGDetail.prototype.getGameTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.LogGDetail} returns this
 */
proto.adminapi.esm.LogGDetail.prototype.setGameTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string game_img_url = 8;
 * @return {string}
 */
proto.adminapi.esm.LogGDetail.prototype.getGameImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.adminapi.esm.LogGDetail} returns this
 */
proto.adminapi.esm.LogGDetail.prototype.setGameImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 enter_timestamp = 9;
 * @return {number}
 */
proto.adminapi.esm.LogGDetail.prototype.getEnterTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.LogGDetail} returns this
 */
proto.adminapi.esm.LogGDetail.prototype.setEnterTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 leave_timestamp = 10;
 * @return {number}
 */
proto.adminapi.esm.LogGDetail.prototype.getLeaveTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.LogGDetail} returns this
 */
proto.adminapi.esm.LogGDetail.prototype.setLeaveTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool is_watched_ad = 11;
 * @return {boolean}
 */
proto.adminapi.esm.LogGDetail.prototype.getIsWatchedAd = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.LogGDetail} returns this
 */
proto.adminapi.esm.LogGDetail.prototype.setIsWatchedAd = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool is_used_gem = 12;
 * @return {boolean}
 */
proto.adminapi.esm.LogGDetail.prototype.getIsUsedGem = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.adminapi.esm.LogGDetail} returns this
 */
proto.adminapi.esm.LogGDetail.prototype.setIsUsedGem = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional int32 game_score = 13;
 * @return {number}
 */
proto.adminapi.esm.LogGDetail.prototype.getGameScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.adminapi.esm.LogGDetail} returns this
 */
proto.adminapi.esm.LogGDetail.prototype.setGameScore = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


goog.object.extend(exports, proto.adminapi.esm);
